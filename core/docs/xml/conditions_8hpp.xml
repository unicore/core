<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="conditions_8hpp" kind="file" language="C++">
    <compoundname>conditions.hpp</compoundname>
    <includedby refid="core_8hpp" local="yes">include/core.hpp</includedby>
    <invincdepgraph>
      <node id="1">
        <label>include/conditions.hpp</label>
        <link refid="conditions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/core.hpp</label>
        <link refid="core_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structconditions" prot="public">conditions</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="conditions_8hpp_1a6b7d759031f1a359d43177a6b2876a8f" prot="public" static="no">
        <type>eosio::multi_index&lt;&quot;conditions&quot;_n, <ref refid="structconditions" kindref="compound">conditions</ref> &gt;</type>
        <definition>typedef eosio::multi_index&lt;&quot;conditions&quot;_n, conditions&gt; conditions_index</definition>
        <argsstring></argsstring>
        <name>conditions_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/conditions.hpp" line="13" column="32" bodyfile="include/conditions.hpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="structconditions" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">[[eosio::table,<sp/><ref refid="namespaceeosio" kindref="compound">eosio</ref>::contract(&quot;unicore&quot;)]]<sp/><ref refid="structconditions" kindref="compound">conditions</ref><sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>key;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::string<sp/>key_string;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>value;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword"><sp/>const</highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EOSLIB_SERIALIZE(<ref refid="structconditions" kindref="compound">conditions</ref>,<sp/>(key)(key_string)(value))</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;conditions&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structconditions" kindref="compound">conditions</ref>&gt;<sp/>conditions_index;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/conditions.hpp"/>
  </compounddef>
</doxygen>
