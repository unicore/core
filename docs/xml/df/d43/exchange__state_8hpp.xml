<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="df/d43/exchange__state_8hpp" kind="file" language="C++">
    <compoundname>exchange_state.hpp</compoundname>
    <includes local="no">eosio/datastream.hpp</includes>
    <includes local="no">eosio/serialize.hpp</includes>
    <includedby refid="d3/dcd/hosts_8hpp" local="yes">include/hosts.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/exchange_state.hpp</label>
        <link refid="df/d43/exchange__state_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>eosio/datastream.hpp</label>
      </node>
      <node id="3">
        <label>eosio/serialize.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>include/core.hpp</label>
        <link refid="da/d47/core_8hpp_source"/>
      </node>
      <node id="1">
        <label>include/exchange_state.hpp</label>
        <link refid="df/d43/exchange__state_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/hosts.hpp</label>
        <link refid="d3/dcd/hosts_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d8/d37/structmarket" prot="public">market</innerclass>
    <innerclass refid="d9/d23/structmarket_1_1connector" prot="public">market::connector</innerclass>
    <innerclass refid="df/d55/structexchange__state" prot="public">exchange_state</innerclass>
    <innerclass refid="d4/dd4/structexchange__state_1_1connector" prot="public">exchange_state::connector</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="df/d43/exchange__state_8hpp_1ac0b09ba58a37f5f3ca415be4a02ec7aa" prot="public" static="no">
        <type>double</type>
        <definition>typedef double real_type</definition>
        <argsstring></argsstring>
        <name>real_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/exchange_state.hpp" line="11" column="19" bodyfile="include/exchange_state.hpp" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d43/exchange__state_8hpp_1a3d7f338f5b512483251b0b518beb375c" prot="public" static="no">
        <type>eosio::multi_index&lt;&quot;powermarket&quot;_n, <ref refid="d8/d37/structmarket" kindref="compound">market</ref> &gt;</type>
        <definition>typedef eosio::multi_index&lt;&quot;powermarket&quot;_n, market&gt; market_index</definition>
        <argsstring></argsstring>
        <name>market_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/exchange_state.hpp" line="60" column="31" bodyfile="include/exchange_state.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/d43/exchange__state_8hpp_1ad7b222389478cb9e2f65b78fa9ba5e7a" prot="public" static="no">
        <type>eosio::multi_index&lt; &quot;rammarket&quot;_n, <ref refid="df/d55/structexchange__state" kindref="compound">exchange_state</ref> &gt;</type>
        <definition>typedef eosio::multi_index&lt; &quot;rammarket&quot;_n, exchange_state &gt; rammarket</definition>
        <argsstring></argsstring>
        <name>rammarket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/exchange_state.hpp" line="85" column="31" bodyfile="include/exchange_state.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/datastream.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;eosio/serialize.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>eosio::asset;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>eosio::symbol;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>real_type;</highlight></codeline>
<codeline lineno="22" refid="d8/d37/structmarket" refkind="compound"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[eosio::table,<sp/><ref refid="de/d91/namespaceeosio" kindref="compound">eosio</ref>::contract(&quot;unicore&quot;)]]<sp/><ref refid="d8/d37/structmarket" kindref="compound">market</ref><sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::name<sp/>name;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>vesting_seconds<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::asset<sp/><sp/><sp/><sp/>supply;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="d9/d23/structmarket_1_1connector" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d9/d23/structmarket_1_1connector" kindref="compound">connector</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::asset<sp/><ref refid="d2/d3d/structbalance" kindref="compound">balance</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::name<sp/>contract;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EOSLIB_SERIALIZE(<sp/><ref refid="d9/d23/structmarket_1_1connector" kindref="compound">connector</ref>,<sp/>(<ref refid="d2/d3d/structbalance" kindref="compound">balance</ref>)(weight)(contract))</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d23/structmarket_1_1connector" kindref="compound">connector</ref><sp/>base;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/d23/structmarket_1_1connector" kindref="compound">connector</ref><sp/>quote;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>name.value;<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/>convert_to_exchange(<sp/>connector&amp;<sp/>reserve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/>payment<sp/>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/>convert_from_exchange(<sp/>connector&amp;<sp/>reserve,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/>tokens<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/>convert(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>symbol&amp;<sp/>to<sp/>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/>direct_convert(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>asset&amp;<sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>symbol&amp;<sp/>to<sp/>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int64_t<sp/>get_bancor_output(<sp/>int64_t<sp/>inp_reserve,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>out_reserve,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>inp<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int64_t<sp/>get_bancor_input(<sp/>int64_t<sp/>out_reserve,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>inp_reserve,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>out<sp/>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EOSLIB_SERIALIZE(<sp/><ref refid="d8/d37/structmarket" kindref="compound">market</ref>,<sp/>(name)(vesting_seconds)(supply)(base)(quote)<sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;powermarket&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="d8/d37/structmarket" kindref="compound">market</ref>&gt;<sp/>market_index;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="df/d55/structexchange__state" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[eosio::table,<sp/><ref refid="de/d91/namespaceeosio" kindref="compound">eosio</ref>::contract(&quot;unicore&quot;)]]<sp/><ref refid="df/d55/structexchange__state" kindref="compound">exchange_state</ref><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/><sp/><sp/><sp/>supply;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="d4/dd4/structexchange__state_1_1connector" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="d4/dd4/structexchange__state_1_1connector" kindref="compound">connector</ref><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/><ref refid="d2/d3d/structbalance" kindref="compound">balance</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>weight<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EOSLIB_SERIALIZE(<sp/><ref refid="d4/dd4/structexchange__state_1_1connector" kindref="compound">connector</ref>,<sp/>(<ref refid="d2/d3d/structbalance" kindref="compound">balance</ref>)(weight)<sp/>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dd4/structexchange__state_1_1connector" kindref="compound">connector</ref><sp/>base;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/dd4/structexchange__state_1_1connector" kindref="compound">connector</ref><sp/>quote;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>supply.symbol.raw();<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/>convert_to_exchange(<sp/>connector&amp;<sp/>c,<sp/>asset<sp/>in<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/>convert_from_exchange(<sp/>connector&amp;<sp/>c,<sp/>asset<sp/>in<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>asset<sp/>convert(<sp/>asset<sp/>from,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>symbol&amp;<sp/>to<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EOSLIB_SERIALIZE(<sp/><ref refid="df/d55/structexchange__state" kindref="compound">exchange_state</ref>,<sp/>(supply)(base)(quote)<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;<sp/></highlight><highlight class="stringliteral">&quot;rammarket&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="df/d55/structexchange__state" kindref="compound">exchange_state</ref><sp/>&gt;<sp/>rammarket;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/exchange_state.hpp"/>
  </compounddef>
</doxygen>
