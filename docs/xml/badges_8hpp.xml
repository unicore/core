<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="badges_8hpp" kind="file" language="C++">
    <compoundname>badges.hpp</compoundname>
    <includedby refid="core_8hpp" local="yes">include/core.hpp</includedby>
    <invincdepgraph>
      <node id="1">
        <label>include/badges.hpp</label>
        <link refid="badges_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/core.hpp</label>
        <link refid="core_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structbadges" prot="public">badges</innerclass>
    <innerclass refid="structusbadges" prot="public">usbadges</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="badges_8hpp_1aa59302c29b886a347ec1951d88f6ecb5" prot="public" static="no">
        <type>eosio::multi_index&lt;&quot;badges&quot;_n, <ref refid="structbadges" kindref="compound">badges</ref> &gt;</type>
        <definition>typedef eosio::multi_index&lt;&quot;badges&quot;_n, badges&gt; badge_index</definition>
        <argsstring></argsstring>
        <name>badge_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/badges.hpp" line="19" column="28" bodyfile="include/badges.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="badges_8hpp_1a3c53785b551cd481f446aeeb27ecfb43" prot="public" static="no">
        <type>eosio::multi_index&lt;&quot;usbadges&quot;_n, <ref refid="structusbadges" kindref="compound">usbadges</ref>, eosio::indexed_by&lt;&quot;hostandbadge&quot;_n, eosio::const_mem_fun&lt; <ref refid="structusbadges" kindref="compound">usbadges</ref>, uint128_t, &amp;usbadges::hostandbadge &gt; &gt;, eosio::indexed_by&lt;&quot;hostandtask&quot;_n, eosio::const_mem_fun&lt; <ref refid="structusbadges" kindref="compound">usbadges</ref>, uint128_t, &amp;usbadges::hostandtask &gt; &gt;, eosio::indexed_by&lt;&quot;hostandgoal&quot;_n, eosio::const_mem_fun&lt; <ref refid="structusbadges" kindref="compound">usbadges</ref>, uint128_t, &amp;usbadges::hostandgoal &gt; &gt; &gt;</type>
        <definition>typedef eosio::multi_index&lt;&quot;usbadges&quot;_n, usbadges, eosio::indexed_by&lt;&quot;hostandbadge&quot;_n, eosio::const_mem_fun&lt;usbadges, uint128_t, &amp;usbadges::hostandbadge&gt; &gt;, eosio::indexed_by&lt;&quot;hostandtask&quot;_n, eosio::const_mem_fun&lt;usbadges, uint128_t, &amp;usbadges::hostandtask&gt; &gt;, eosio::indexed_by&lt;&quot;hostandgoal&quot;_n, eosio::const_mem_fun&lt;usbadges, uint128_t, &amp;usbadges::hostandgoal&gt; &gt; &gt; usbadge_index</definition>
        <argsstring></argsstring>
        <name>usbadge_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/badges.hpp" line="55" column="2" bodyfile="include/badges.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="structbadges" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">[[eosio::table,<sp/><ref refid="namespaceeosio" kindref="compound">eosio</ref>::contract(&quot;unicore&quot;)]]<sp/><ref refid="structbadges" kindref="compound">badges</ref>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>id;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::string<sp/>caption;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::string<sp/>description;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::string<sp/>iurl;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::string<sp/>pic;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>total;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>remain;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structpower" kindref="compound">power</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EOSLIB_SERIALIZE(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structbadges" kindref="compound">badges</ref>,<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)(caption)(description)(iurl)(pic)(total)(remain)(<ref refid="structpower" kindref="compound">power</ref>))</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;badges&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structbadges" kindref="compound">badges</ref>&gt;<sp/>badge_index;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structusbadges" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">[[eosio::table,<sp/><ref refid="namespaceeosio" kindref="compound">eosio</ref>::contract(&quot;unicore&quot;)]]<sp/><ref refid="structusbadges" kindref="compound">usbadges</ref>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>id;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::name<sp/>host;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>badge_id;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>netted<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>goal_id;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>task_id;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>count<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::string<sp/>caption;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::string<sp/>description;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::string<sp/>iurl;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::string<sp/>pic;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::string<sp/>comment;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><ref refid="structpower" kindref="compound">power</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::time_point_sec<sp/>first_recieved_at;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::time_point_sec<sp/>last_recieved_at;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>host_key()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>host.value;}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint128_t<sp/>hostandbadge()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>combine_ids(host.value,<sp/>badge_id);<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint128_t<sp/>hostandtask()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>combine_ids(host.value,<sp/>task_id);<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint128_t<sp/>hostandgoal()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>combine_ids(host.value,<sp/>goal_id);<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EOSLIB_SERIALIZE(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structusbadges" kindref="compound">usbadges</ref>,<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)(host)(badge_id)(netted)(goal_id)(task_id)(count)(caption)(description)(iurl)(pic)(comment)(<ref refid="structpower" kindref="compound">power</ref>)(first_recieved_at)(last_recieved_at))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;</highlight><highlight class="stringliteral">&quot;usbadges&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structusbadges" kindref="compound">usbadges</ref>,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::indexed_by&lt;</highlight><highlight class="stringliteral">&quot;hostandbadge&quot;</highlight><highlight class="normal">_n,<sp/>eosio::const_mem_fun&lt;usbadges,<sp/>uint128_t,<sp/>&amp;usbadges::hostandbadge&gt;&gt;,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::indexed_by&lt;</highlight><highlight class="stringliteral">&quot;hostandtask&quot;</highlight><highlight class="normal">_n,<sp/>eosio::const_mem_fun&lt;usbadges,<sp/>uint128_t,<sp/>&amp;usbadges::hostandtask&gt;&gt;,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::indexed_by&lt;</highlight><highlight class="stringliteral">&quot;hostandgoal&quot;</highlight><highlight class="normal">_n,<sp/>eosio::const_mem_fun&lt;usbadges,<sp/>uint128_t,<sp/>&amp;usbadges::hostandgoal&gt;&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/>usbadge_index;</highlight></codeline>
    </programlisting>
    <location file="include/badges.hpp"/>
  </compounddef>
</doxygen>
