<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classunicore" kind="class" language="C++" prot="public">
    <compoundname>unicore</compoundname>
    <basecompoundref prot="public" virt="non-virtual">contract</basecompoundref>
    <includes refid="core_8hpp" local="no">core.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classunicore_1a8f1c99385890a2fe4645c4af8e7fcfc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>unicore::unicore</definition>
        <argsstring>(eosio::name receiver, eosio::name code, eosio::datastream&lt; const char *&gt; ds)</argsstring>
        <name>unicore</name>
        <param>
          <type>eosio::name</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>eosio::datastream&lt; const char *&gt;</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="42" column="1" bodyfile="include/core.hpp" bodystart="42" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1added73f623a6df0537a4daef1c46ed8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::apply</definition>
        <argsstring>(uint64_t receiver, uint64_t code, uint64_t action)</argsstring>
        <name>apply</name>
        <param>
          <type>uint64_t</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a30206473eb9672b7b67d0a85d2035ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::convert</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t balance_id)</argsstring>
        <name>convert</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод обмена баланса на жетон распределения по текущему курсу из числа квантов раунда. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="50" column="1" bodyfile="src/core.cpp" bodystart="2499" bodyend="2554"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a8898e75bc9abe84fd78c15f9de3731f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setparams</definition>
        <argsstring>(eosio::name host, eosio::name chost, uint64_t size_of_pool, uint64_t quants_precision, uint64_t overlap, uint64_t profit_growth, uint64_t base_rate, uint64_t loss_percent, uint64_t compensator_percent, uint64_t pool_limit, uint64_t pool_timeout, uint64_t priority_seconds)</argsstring>
        <name>setparams</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>chost</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>size_of_pool</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>quants_precision</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>overlap</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>profit_growth</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>base_rate</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>loss_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>compensator_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_limit</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_timeout</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>priority_seconds</declname>
        </param>
        <briefdescription>
<para>Публичный метод установки параметров протокола двойной спирали Вызывается пользователем после базовой операции создания хоста и проведения оплаты. Так же вызывается при установке параметров дочернего хоста. Содержит алгоритм финансового ядра. Производит основные расчеты таблиц курсов и валидирует положительность бизнес-дохода. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Математическое ядро алгоритма курса двойной спирали.</para><para>Проверка бизнес-модели на положительный баланс. Остатка на балансе в любой момент должно быть достаточно для выплат всем проигравшим и всем победителям. Если это не так - протокол не позволит себя создать.</para><para>Установка таблиц курсов в область памяти хоста</para>        </inbodydescription>
        <location file="include/core.hpp" line="55" column="1" bodyfile="src/core.cpp" bodystart="1034" bodyend="1266"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ad83b75f3c4afd1ab954d428be8f6f7d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::start</definition>
        <argsstring>(eosio::name host, eosio::name chost)</argsstring>
        <name>start</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>chost</declname>
        </param>
        <briefdescription>
<para>Публичный метод запуска хоста Метод необходимо вызвать для запуска хоста после установки параметров хоста. Добавляет первый цикл, два пула, переключает демонастративный флаг запуска и создает статистические объекты. Подписывается аккаунтом хоста. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="59" column="1" bodyfile="src/core.cpp" bodystart="962" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a25c98e5ea071940b6ab153d71a328a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdraw</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t balance_id)</argsstring>
        <name>withdraw</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод возврата баланса протоколу. Вывод средств возможен только для полностью обновленных (актуальных) балансов. Производит обмен Юнитов на управляющий токен и выплачивает на аккаунт пользователя. </para>        </briefdescription>
        <detaileddescription>
<para>Производит расчет реферальных вознаграждений, генерируемых выплатой, и отправляет их всем партнерам согласно установленной формы.</para><para>Производит финансовое распределение между управляющими компаниями и целевым фондом сообщества.</para><para>Каждый последующий пул, который участник проходит в качестве победителя, генеририрует бизнес-доход, который расчитывается исходя из того, что в текущий момент, средств всех проигравших полностью достаточно наа выплаты всем победителям с остатком. Этот остаток, в прапорции Юнитов пользователя и общего количества Юнитов в раунде, позволяет расчитать моментальную выплату, которая может быть изъята из системы при сохранении абсолютного балланса.</para><para>Изымаемая сумма из общего котла управляющих токенов, разделяется на три потока, определяемые двумя параметрами:<itemizedlist>
<listitem><para>Процент выплат на рефералов. Устанавливается в диапазоне от 0 до 100. Отсекает собой ровно ту часть пирога, которая уходит на выплаты по всем уровням реферальной структуры согласно ее формы.</para></listitem><listitem><para>Процент выплат на корпоративных управляющих. Устанавливается в диапазоне от 0 до 100.</para></listitem><listitem><para>Остаток от остатка распределяется в фонд целей сообщества.</para></listitem></itemizedlist>
</para><para>Таким образом, коэффициенты позволяют распределять единый системный фонд по окружности с тремя секторами, где каждый сектор есть фонд со своим назначением. <linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
<linebreak/>
 Например, если общий доход от движения баланса пользователя по спирали составляет 100 USD, а коэфициенты распределения Рефералов и Корпоративных Управляющих равняются соответственно по 0.5 (50%), то все рефералы получат по 33$, все управляющие получат по 33$, и еще 33$ попадет в фонд целей сообщества. 1$ останется в качестве комиссии округления на делении у протокола.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Номинал Номинал выплачивается если выполняется одно из условий:<itemizedlist>
<listitem><para>баланс куплен в одном из первых двух пулов, а текущий пул не выше второго;</para></listitem><listitem><para>баланс куплен в текущем пуле;</para></listitem><listitem><para>баланс куплен в последнем из возможных пулов;</para></listitem></itemizedlist>
</para><para>Выигрыш или проигрыш. Расчет производится на основе сравнения текущего цвета пула с цветом пула входа. При совпадении цветов - баланс выиграл. При несовпадении - проиграл.</para><para>Выигрыш. Инициирует распределение реферальных вознаграждений и выплаты во все фонды.</para><para>Выплаты в целевой фонд сообщества</para><para>Все кванты победителей должны быть возвращены в пулы.</para>        </inbodydescription>
        <location file="include/core.hpp" line="60" column="1" bodyfile="src/core.cpp" bodystart="2889" bodyend="3206"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a7c554fbaa488514c2fd09879a6b4c662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::priorenter</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t balance_id)</argsstring>
        <name>priorenter</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <briefdescription>
<para>Метод приоритетного входа в новый цикл. Доступен к использованию только при условии наличия предыдущего цикла, в котором участник имеет проигравший баланс. Позволяет зайти частью своего проигравшего баланса одновременно в два пула - первый и второй нового цикла. Использование приоритетного входа возможно только до истечения времени приоритета, которое начинается в момент запуска цикла и продолжается до истечения таймера приоритета. </para>        </briefdescription>
        <detaileddescription>
<para>Метод позволяет проигравшим балансам предыдущего цикла перераспределиться в новом цикле развития так, чтобы быть в самом начале вращательного движения и тем самым, гарантировать выигрыш. В случае успеха исполнения метода, пользователь обменивает один свой старый проигравший баланс на два новых противоположных цветов.</para><para>В ходе исполнения метода решается арифметическая задача перераспределения, при которой вычисляется максимально возможная сумма входа для имеющегося баланса одновременно в два первых пула. Остаток от суммы, который невозможно распределить на новые пулы по причине нераздельности минимальной учетной единицы, возвращается пользователю переводом.</para><para>Приоритетный вход спроектирован таким образом, то если все проигравшие участники одновременно воспользуются им, то в точности 50% внутренней учетной единицы для первого и второго пула будет выкуплено.</para><para>TODO возможно расширение приоритетного входа до 100% от внутренней учетной единицы для первых двух пулов, а так же, продолжение приоритетного входа для всех последующих пулов.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Здесь происходит перерасчет исходя из того, какое колество жетонов пользователь может получить при условии равного выкупа Юнитов из первых двух пулов. Если после расчетов останется остаток, который не может быть равномерно распределен между пулами - он возвращается пользователю.</para><para>Здесь у пользователя есть доступная сумма баланса в токенах, которая меньше чем та, с которой участник может зайти в приоритете &quot;на всю котлету&quot;. Необходимо найти минимальную сумму в ядерных Юнитах, которая удовлетворяет условиям баланса и приоритетного входа.</para>        </inbodydescription>
        <location file="include/core.hpp" line="61" column="1" bodyfile="src/core.cpp" bodystart="400" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1abb1a56452f7d8819475e04e5ad10fe54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refreshbal</definition>
        <argsstring>(eosio::name username, uint64_t balance_id, uint64_t partrefresh)</argsstring>
        <name>refreshbal</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>partrefresh</declname>
        </param>
        <briefdescription>
<para>Публичный метод обновления баланса Пересчет баланса каждого пользователя происходит по его собственному действию. Обновление баланса приводит к пересчету доступной суммы для вывода. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para><linebreak/>
Для расчетов выплат реферальных вознаграждений необходимо решить дифференциальное уравнение.</para>        </inbodydescription>
        <location file="include/core.hpp" line="62" column="1" bodyfile="src/core.cpp" bodystart="1594" bodyend="1871"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a62e02b155f2cd8012d807e60dacd1ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setstartdate</definition>
        <argsstring>(eosio::name host, eosio::time_point_sec start_at)</argsstring>
        <name>setstartdate</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::time_point_sec</type>
          <declname>start_at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="64" column="1" bodyfile="src/core.cpp" bodystart="935" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a43103f3b9bdc5ed37f564cc10446549e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::init</definition>
        <argsstring>(uint64_t system_income)</argsstring>
        <name>init</name>
        <param>
          <type>uint64_t</type>
          <declname>system_income</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="70" column="1" bodyfile="src/core.cpp" bodystart="3" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a2a410729955a5bc11fe3b3051f10a4c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refreshst</definition>
        <argsstring>(eosio::name host)</argsstring>
        <name>refreshst</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Публичный метод обновления состояния Проверяет пул на истечение во времени или завершение целого количества ядерных Юнитов. Запускает новый цикл или добавляет новый пул. </para>        </briefdescription>
        <detaileddescription>
<para>//TODO устранить избыточность</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="72" column="1" bodyfile="src/core.cpp" bodystart="1426" bodyend="1428"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a46cd90e0a4f1b938d4548ca254782cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setbadge</definition>
        <argsstring>(uint64_t id, eosio::name host, eosio::string caption, eosio::string description, eosio::string iurl, eosio::string pic, uint64_t total, uint64_t power)</argsstring>
        <name>setbadge</name>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>caption</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>description</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>iurl</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>pic</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>total</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="75" column="1" bodyfile="src/badges.cpp" bodystart="3" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a40fa6e2fa9fcddf76ba73b261eae6fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::giftbadge</definition>
        <argsstring>(eosio::name host, eosio::name to, uint64_t badge_id, eosio::string comment, bool netted, uint64_t goal_id, uint64_t task_id)</argsstring>
        <name>giftbadge</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>to</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>badge_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>netted</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="76" column="1" bodyfile="src/badges.cpp" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a6e7db779eb5836300fabe105012388c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::backbadge</definition>
        <argsstring>(eosio::name host, eosio::name from, uint64_t usbadge_id, eosio::string comment)</argsstring>
        <name>backbadge</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>usbadge_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Метод возврата значка Может быть использован хостом для возврата выданного значка. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="77" column="1" bodyfile="src/badges.cpp" bodystart="162" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1abab6ddd4a167efde5f0e45a1ffd9dfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setcontent</definition>
        <argsstring>(eosio::name username, eosio::name type, eosio::name lang, eosio::string content)</argsstring>
        <name>setcontent</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>lang</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>content</declname>
        </param>
        <briefdescription>
<para>Модуль CMS Позволяет каждому сообществу использовать веб-конструктор приложений UNI. </para>        </briefdescription>
        <detaileddescription>
<para>Метод установки языковых файлов</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="83" column="1" bodyfile="src/cms.cpp" bodystart="12" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1af6aac321d5880fcb577ba00abea5c38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmcontent</definition>
        <argsstring>(eosio::name username, eosio::name type)</argsstring>
        <name>rmcontent</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Метод удаления языкового файла </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="84" column="1" bodyfile="src/cms.cpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ad0188feae42e22b52afbb6e3c3f70c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setcmsconfig</definition>
        <argsstring>(eosio::name username, eosio::string config)</argsstring>
        <name>setcmsconfig</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Метод установки CMS-конфига </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="85" column="1" bodyfile="src/cms.cpp" bodystart="52" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1aa2341c3f2393be329d759ef09f20367f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setgoal</definition>
        <argsstring>(eosio::name creator, eosio::name host, eosio::name type, std::string title, std::string permlink, std::string description, eosio::asset target, uint64_t duration, uint64_t cashback, bool activated, bool is_batch, uint64_t parent_batch_id, std::string meta)</argsstring>
        <name>setgoal</name>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>permlink</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>description</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>target</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>cashback</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>activated</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_batch</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>parent_batch_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Метод создания цели </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="88" column="1" bodyfile="src/goals.cpp" bodystart="40" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a969e75dd90699b53b75ab8482cbc49d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::dfundgoal</definition>
        <argsstring>(eosio::name architect, eosio::name host, uint64_t goal_id, eosio::asset amount, std::string comment)</argsstring>
        <name>dfundgoal</name>
        <param>
          <type>eosio::name</type>
          <declname>architect</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Метод прямого финансирования цели Используется архитектором для финансирования цели из фонда </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="89" column="1" bodyfile="src/goals.cpp" bodystart="192" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1af6e32936bbe20a612c9348bf5f805982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::fundchildgoa</definition>
        <argsstring>(eosio::name architect, eosio::name host, uint64_t goal_id, eosio::asset amount)</argsstring>
        <name>fundchildgoa</name>
        <param>
          <type>eosio::name</type>
          <declname>architect</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Метод прямого финансирования родительской цели Используется архитектором для наполнения дочерней цели за счет баланса родительской цели </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="90" column="1" bodyfile="src/goals.cpp" bodystart="220" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a1ba1753b7dc4109e94dc7c4c9dbd5400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setgcreator</definition>
        <argsstring>(eosio::name oldcreator, eosio::name newcreator, eosio::name host, uint64_t goal_id)</argsstring>
        <name>setgcreator</name>
        <param>
          <type>eosio::name</type>
          <declname>oldcreator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>newcreator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="92" column="1" bodyfile="src/goals.cpp" bodystart="247" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a2ee6a26c970b05e61c3753791a55dee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::gaccept</definition>
        <argsstring>(eosio::name host, uint64_t goal_id, uint64_t parent_goal_id, bool status)</argsstring>
        <name>gaccept</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>parent_goal_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="94" column="1" bodyfile="src/goals.cpp" bodystart="264" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a2cc7c4ae8c6ea5e604d6666d37d11405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::gpause</definition>
        <argsstring>(eosio::name host, uint64_t goal_id)</argsstring>
        <name>gpause</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="95" column="1" bodyfile="src/goals.cpp" bodystart="307" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a9fd534e0b189439c6f18e99689911b3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::delgoal</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t goal_id)</argsstring>
        <name>delgoal</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
<para>Метод удаления цели </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="97" column="1" bodyfile="src/goals.cpp" bodystart="327" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ac0e6bf94b8bfd28e08c364631a357d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::report</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t goal_id, std::string report)</argsstring>
        <name>report</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>report</declname>
        </param>
        <briefdescription>
<para>Метод создания отчета о завершенной цели </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="98" column="1" bodyfile="src/goals.cpp" bodystart="363" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ac31cf68445b14c4dbdea9684a0556f10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::check</definition>
        <argsstring>(eosio::name architect, eosio::name host, uint64_t goal_id)</argsstring>
        <name>check</name>
        <param>
          <type>eosio::name</type>
          <declname>architect</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
<para>Метод проверки отчета Отчет о достижении цели на текущий момент проверяется только архитектором. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="99" column="1" bodyfile="src/goals.cpp" bodystart="406" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a4faa41a68505840e66f78e350412723c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::gwithdraw</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t goal_id)</argsstring>
        <name>gwithdraw</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
<para>Метод вывода баланса цели Выводит доступный баланс цели на аккаунт создателя цели. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="100" column="1" bodyfile="src/goals.cpp" bodystart="704" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a621817942c7b2758963d4147170b3c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::gsponsor</definition>
        <argsstring>(eosio::name hoperator, eosio::name host, eosio::name reciever, uint64_t goal_id, eosio::asset amount)</argsstring>
        <name>gsponsor</name>
        <param>
          <type>eosio::name</type>
          <declname>hoperator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>reciever</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Метод финансирования цели через оператора сообщества. Позволяет оператору сообщества расходовать баланс целей на перечисления прямым спонсорам. Используется в риверсной экономической модели, когда корневой токен сообщества является котировочным токеном силы сообщества, и накаким другим способом изначально не распределяется, кроме как на спонсоров целей (дефицитная ICO - модель). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="101" column="1" bodyfile="src/goals.cpp" bodystart="574" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1affa39993f35c8e2c8838a956c761cbcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setemi</definition>
        <argsstring>(eosio::name host, uint64_t percent, uint64_t gtop)</argsstring>
        <name>setemi</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
          <defname>hostname</defname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>gtop</declname>
        </param>
        <briefdescription>
<para>Метод установки скорости эмиссии и размера листа финансирования </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="102" column="1" bodyfile="src/goals.cpp" bodystart="677" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ad1ca7dd3eab26146ed184e3bda67f5b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::enablesale</definition>
        <argsstring>(eosio::name host, eosio::name token_contract, eosio::asset asset_on_sale, int64_t sale_shift, eosio::name sale_mode)</argsstring>
        <name>enablesale</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>token_contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>asset_on_sale</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sale_shift</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>sale_mode</declname>
        </param>
        <briefdescription>
<para>Публичный метод включения сейла с хоста. Может быть использован только до вызова метода start при условии, что владелец контракта токена разрешил это. Активирует реализацию управляющего жетона из фонда владельца жетона в режиме финансового котла. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="109" column="1" bodyfile="src/core.cpp" bodystart="2140" bodyend="2227"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a2b873bf336e3c8b5b6e0f9d1823b2497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::addhostofund</definition>
        <argsstring>(uint64_t fund_id, eosio::name host)</argsstring>
        <name>addhostofund</name>
        <param>
          <type>uint64_t</type>
          <declname>fund_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Публичный метод подключения хоста к фонду </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="110" column="1" bodyfile="src/core.cpp" bodystart="2268" bodyend="2297"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a8474a6b0859f13d7283922d5f7c3cd0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmhosfrfund</definition>
        <argsstring>(uint64_t fund_id, eosio::name host)</argsstring>
        <name>rmhosfrfund</name>
        <param>
          <type>uint64_t</type>
          <declname>fund_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="111" column="1" bodyfile="src/core.cpp" bodystart="2230" bodyend="2262"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a69785f67b90bf9b74e5a6c177cb0e249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::transfromgf</definition>
        <argsstring>(eosio::name to, eosio::name token_contract, eosio::asset quantity)</argsstring>
        <name>transfromgf</name>
        <param>
          <type>eosio::name</type>
          <declname>to</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>token_contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
<para>Публичный метод перевода из глобального фонда </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="120" column="1" bodyfile="src/core.cpp" bodystart="2106" bodyend="2133"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ac5b6ba6e6362cc73943265c750429fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setarch</definition>
        <argsstring>(eosio::name host, eosio::name architect)</argsstring>
        <name>setarch</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>architect</declname>
        </param>
        <briefdescription>
<para>Sets the architect. Устанавливает архитектора сообщества, обладающего полномочиями специальных действий. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="124" column="1" bodyfile="src/hosts.cpp" bodystart="35" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1adabf2b3d106784b146a047e35ceec410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::upgrade</definition>
        <argsstring>(eosio::name username, eosio::name platform, std::string title, std::string purpose, uint64_t total_shares, eosio::asset quote_amount, eosio::name quote_token_contract, eosio::asset root_token, eosio::name root_token_contract, bool voting_only_up, uint64_t consensus_percent, uint64_t referral_percent, uint64_t dacs_percent, uint64_t cfund_percent, uint64_t hfund_percent, std::vector&lt; uint64_t &gt; levels, uint64_t emission_percent, uint64_t gtop, std::string meta)</argsstring>
        <name>upgrade</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>platform</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>purpose</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>total_shares</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quote_amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>quote_token_contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>root_token</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>root_token_contract</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>voting_only_up</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>consensus_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>referral_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>dacs_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>cfund_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hfund_percent</declname>
        </param>
        <param>
          <type>std::vector&lt; uint64_t &gt;</type>
          <declname>levels</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>emission_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>gtop</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Метод апгрейда аккаунта до статуса сообщества Принимает ряд параметров, такие как процент консенсуса, реферальный процент, уровни вознаграждений финансовых партнеров, корпоративный процент, а так же параметры рынка силы. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="125" column="1" bodyfile="src/hosts.cpp" bodystart="470" bodyend="626"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1abae3b92d93cbbbd1058005639975f09d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::cchildhost</definition>
        <argsstring>(eosio::name parent_host, eosio::name chost)</argsstring>
        <name>cchildhost</name>
        <param>
          <type>eosio::name</type>
          <declname>parent_host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>chost</declname>
        </param>
        <briefdescription>
<para>Метод создания дочернего хоста Позволяет сообществу на границе циклов изменять параметры финансового ядра, распологая их в области памяти аккаунта дочернего хоста. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="126" column="1" bodyfile="src/hosts.cpp" bodystart="635" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1abb38bcc39c9e3ca74f955944a84274fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::compensator</definition>
        <argsstring>(eosio::name host, uint64_t compensator_percent)</argsstring>
        <name>compensator</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>compensator_percent</declname>
        </param>
        <briefdescription>
<para>Установка компенсатора рисков Устанавливает компенсатор риска для системного жетона </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="127" column="1" bodyfile="src/hosts.cpp" bodystart="53" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a38d070fb8067b91799456f1472ced47d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::edithost</definition>
        <argsstring>(eosio::name architect, eosio::name host, eosio::name platform, eosio::string title, eosio::string purpose, eosio::string manifest, eosio::name power_market_id, eosio::string meta)</argsstring>
        <name>edithost</name>
        <param>
          <type>eosio::name</type>
          <declname>architect</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>platform</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>purpose</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>manifest</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>power_market_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Метод редактирования информации о хосте </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="130" column="1" bodyfile="src/hosts.cpp" bodystart="756" bodyend="824"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1abb22debda627e37951ea15e47fc77985" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::fixs</definition>
        <argsstring>(eosio::name host, uint64_t pool_num)</argsstring>
        <name>fixs</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="131" column="1" bodyfile="src/core.cpp" bodystart="833" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a61965d7a5c449487b565b444659d6cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settype</definition>
        <argsstring>(eosio::name host, eosio::name type)</argsstring>
        <name>settype</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="132" column="1" bodyfile="src/core.cpp" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a9ebdfe87e84d1a283143d274f2337e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setlevels</definition>
        <argsstring>(eosio::name host, std::vector&lt; uint64_t &gt; levels)</argsstring>
        <name>setlevels</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>std::vector&lt; uint64_t &gt;</type>
          <declname>levels</declname>
        </param>
        <briefdescription>
<para>Метод установки уровней вознаграждений </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="133" column="1" bodyfile="src/hosts.cpp" bodystart="435" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1af4454491cb629dc007eed9b6febdd161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settiming</definition>
        <argsstring>(eosio::name host, uint64_t pool_timeout, uint64_t priority_seconds)</argsstring>
        <name>settiming</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_timeout</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>priority_seconds</declname>
        </param>
        <briefdescription>
<para>Метод редактирования времени </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="138" column="1" bodyfile="src/hosts.cpp" bodystart="712" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a2b63d1aac35b533f122286943a54db18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setflows</definition>
        <argsstring>(eosio::name host, uint64_t ref_percent, uint64_t dacs_percent, uint64_t cfund_percent, uint64_t hfund_percent)</argsstring>
        <name>setflows</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ref_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>dacs_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>cfund_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hfund_percent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="139" column="1" bodyfile="src/hosts.cpp" bodystart="732" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a1713b099515838ad2e42391f4dd03b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmben</definition>
        <argsstring>(eosio::name creator, eosio::name username, eosio::name host, uint64_t goal_id)</argsstring>
        <name>rmben</name>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="143" column="1" bodyfile="src/goals.cpp" bodystart="812" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a4c8df6c80a48d2a6f8a73469a470ec2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::addben</definition>
        <argsstring>(eosio::name creator, eosio::name username, eosio::name host, uint64_t goal_id, uint64_t weight)</argsstring>
        <name>addben</name>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="144" column="1" bodyfile="src/goals.cpp" bodystart="773" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a0a2ae5cf5fb3cdf3ba23f0948dd5c391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdrbeninc</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t goal_id)</argsstring>
        <name>withdrbeninc</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="145" column="1" bodyfile="src/goals.cpp" bodystart="740" bodyend="771"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1aabd42ff2a6dcac81d487e65b0bf5dda6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::addvac</definition>
        <argsstring>(uint64_t id, bool is_edit, eosio::name creator, eosio::name host, eosio::name limit_type, eosio::asset income_limit, uint64_t weight, std::string title, std::string descriptor)</argsstring>
        <name>addvac</name>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_edit</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>limit_type</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>income_limit</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="148" column="1" bodyfile="src/hosts.cpp" bodystart="91" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a756863a6910963e79adbb3bfcdf7ba47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmvac</definition>
        <argsstring>(eosio::name host, uint64_t id)</argsstring>
        <name>rmvac</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="149" column="1" bodyfile="src/hosts.cpp" bodystart="172" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a728bf4c6d03c63fa2969a3effe312fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::addvprop</definition>
        <argsstring>(uint64_t id, bool is_edit, eosio::name creator, eosio::name host, uint64_t vac_id, uint64_t weight, std::string why_me, std::string contacts)</argsstring>
        <name>addvprop</name>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_edit</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vac_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>why_me</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>contacts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="151" column="1" bodyfile="src/hosts.cpp" bodystart="133" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1adb6489dbbbb032b012f3faa9e8ba963f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmvprop</definition>
        <argsstring>(eosio::name host, uint64_t vprop_id)</argsstring>
        <name>rmvprop</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vprop_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="152" column="1" bodyfile="src/hosts.cpp" bodystart="231" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a55e754af41251b55a9c6b1cfe0f0f8c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::approvevac</definition>
        <argsstring>(eosio::name host, uint64_t vac_id)</argsstring>
        <name>approvevac</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vac_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="154" column="1" bodyfile="src/hosts.cpp" bodystart="189" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1afcacb23342b138f05740e3bd57d03fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::apprvprop</definition>
        <argsstring>(eosio::name host, uint64_t vprop_id)</argsstring>
        <name>apprvprop</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vprop_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="155" column="1" bodyfile="src/hosts.cpp" bodystart="203" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ac6f84b754aa586043376617165f90eca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::adddac</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t weight, eosio::name limit_type, eosio::asset income_limit, std::string title, std::string descriptor)</argsstring>
        <name>adddac</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>limit_type</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>income_limit</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="158" column="1" bodyfile="src/core.cpp" bodystart="2416" bodyend="2464"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a1a76e2539a42f80b8ac6f514305665c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmdac</definition>
        <argsstring>(eosio::name username, eosio::name host)</argsstring>
        <name>rmdac</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="159" column="1" bodyfile="src/core.cpp" bodystart="2466" bodyend="2489"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ab006e60df2a0c5bcac711ca458e5cbc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::suggestrole</definition>
        <argsstring>(eosio::name username, std::string title, std::string descriptor)</argsstring>
        <name>suggestrole</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="161" column="1" bodyfile="src/core.cpp" bodystart="2399" bodyend="2413"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a00bbf7a3172cc73697b3fcdfc19b7a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdrdacinc</definition>
        <argsstring>(eosio::name username, eosio::name host)</argsstring>
        <name>withdrdacinc</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="174" column="1" bodyfile="src/core.cpp" bodystart="2365" bodyend="2395"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a3a1fde814fc862b339230cfb85505145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setwebsite</definition>
        <argsstring>(eosio::name host, eosio::name ahostname, eosio::string website, eosio::name type, std::string meta)</argsstring>
        <name>setwebsite</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>ahostname</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>website</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="175" column="1" bodyfile="src/hosts.cpp" bodystart="367" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ab1e9b13cec99a231f1c6a71e3edc37c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmahost</definition>
        <argsstring>(eosio::name host, eosio::name ahostname)</argsstring>
        <name>rmahost</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>ahostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="177" column="1" bodyfile="src/hosts.cpp" bodystart="336" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a1f73391b2c692e2c97ca675333aee0ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setahost</definition>
        <argsstring>(eosio::name host, eosio::name ahostname)</argsstring>
        <name>setahost</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>ahostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="178" column="1" bodyfile="src/hosts.cpp" bodystart="255" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1abf1dd4d893faaa4851adced7cfa7770c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::closeahost</definition>
        <argsstring>(eosio::name host)</argsstring>
        <name>closeahost</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="179" column="1" bodyfile="src/hosts.cpp" bodystart="300" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a339ec2fd85cf7ddd182a7e41d0f66f66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::openahost</definition>
        <argsstring>(eosio::name host)</argsstring>
        <name>openahost</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="180" column="1" bodyfile="src/hosts.cpp" bodystart="312" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a78e7d25bcf723965ab405b66327a23e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withpbenefit</definition>
        <argsstring>(eosio::name username, eosio::name host)</argsstring>
        <name>withpbenefit</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Метод вывода силового финансового потока withdraw power quant (withpowerun) Позволяет вывести часть финансового потока, направленного на держателя силы </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="201" column="1" bodyfile="src/shares.cpp" bodystart="99" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ad330ad73fc269d1e37df00b7e9823441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withrsegment</definition>
        <argsstring>(eosio::name username, eosio::name host)</argsstring>
        <name>withrsegment</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Метод вывода остатка партнерского финансового потока withdraw power quant (withpowerun) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="202" column="1" bodyfile="src/ref.cpp" bodystart="7" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ad0eeced7a1cf17a871f0458eb327da6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withrbenefit</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t id)</argsstring>
        <name>withrbenefit</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Метод вывода партнерского финансового потока withdraw power quant (withpowerun) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="204" column="1" bodyfile="src/ref.cpp" bodystart="60" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a00ca80d8fa12bd41448d55cd82c5cd60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refreshpu</definition>
        <argsstring>(eosio::name username, eosio::name host)</argsstring>
        <name>refreshpu</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Метод обновления силового финансового потока </para>        </briefdescription>
        <detaileddescription>
<para>Позволяет обновить доступную часть финансового потока, направленного на держателя силы, а так же собрать доступные реферальные балансы в один объект </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="205" column="1" bodyfile="src/shares.cpp" bodystart="148" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a790c1a22331df2bd9e7f9b9094de7dfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refreshsh</definition>
        <argsstring>(eosio::name owner, uint64_t id)</argsstring>
        <name>refreshsh</name>
        <param>
          <type>eosio::name</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Метод обновления вестинг-баланса. <linebreak/>
Обновляет вестинг-баланс до актуальных параметров продолжительности. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="206" column="1" bodyfile="src/shares.cpp" bodystart="37" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a4dd6d244c3fac428419342dc782f53a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdrawsh</definition>
        <argsstring>(eosio::name owner, uint64_t id)</argsstring>
        <name>withdrawsh</name>
        <param>
          <type>eosio::name</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Вывод вестинг-баланса Обеспечивает вывод доступных средств из вестинг-баланса. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="207" column="1" bodyfile="src/shares.cpp" bodystart="68" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a237ab7bb223b33ba87375e177ced89a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::sellshares</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t shares)</argsstring>
        <name>sellshares</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Публичный метод продажи силы рынку за котировочный токен </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="208" column="1" bodyfile="src/shares.cpp" bodystart="747" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a9464479eb5d28b6c7f9956319077b294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::undelshares</definition>
        <argsstring>(eosio::name from, eosio::name reciever, eosio::name host, uint64_t shares)</argsstring>
        <name>undelshares</name>
        <param>
          <type>eosio::name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>reciever</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Метод возврата делегированной силы </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="209" column="1" bodyfile="src/shares.cpp" bodystart="694" bodyend="740"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1aa989f60384b7167e4e1ff2b4d219a1b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settask</definition>
        <argsstring>(eosio::name host, eosio::name creator, std::string permlink, uint64_t goal_id, uint64_t priority, eosio::string title, eosio::string data, eosio::asset requested, bool is_public, eosio::name doer, eosio::asset for_each, bool with_badge, uint64_t badge_id, uint64_t duration, bool is_batch, uint64_t parent_batch_id, bool is_regular, std::vector&lt; uint64_t &gt; calendar, eosio::time_point_sec start_at, eosio::time_point_sec expired_at, std::string meta)</argsstring>
        <name>settask</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>permlink</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>data</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>requested</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_public</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>for_each</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_badge</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>badge_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>duration</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_batch</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>parent_batch_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_regular</declname>
        </param>
        <param>
          <type>std::vector&lt; uint64_t &gt;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type>eosio::time_point_sec</type>
          <declname>start_at</declname>
        </param>
        <param>
          <type>eosio::time_point_sec</type>
          <declname>expired_at</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Модуль задач Задачи есть составляющие части достижения любой цели. Постановка задач осуществляется только в рамках целей. Задачи могут быть </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>публичными, т.е. достуными к исполнению каждым участником сообщества,</para></listitem><listitem><para>приватными, т.е. доступными к исполнению только внутренним управляющим командам. Публичный метод создания задачи Может использовать только аккаунт хоста на текущий момент.</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="215" column="1" bodyfile="src/tasks.cpp" bodystart="167" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ae8ca388e55f11d3c32430edbaabcf7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::fundtask</definition>
        <argsstring>(eosio::name host, uint64_t task_id, eosio::asset amount, eosio::string comment)</argsstring>
        <name>fundtask</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Публичный метод фондирования задачи Исполняется хостом для пополнения баланса задачи из доступного баланса цели. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="216" column="1" bodyfile="src/tasks.cpp" bodystart="423" bodyend="453"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a0c35d9830c0c05c8f13be48b8cbdf236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::tactivate</definition>
        <argsstring>(eosio::name host, uint64_t task_id)</argsstring>
        <name>tactivate</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Метод активации задачи Вызывается хостом для активации выполнения поставленной задачи. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="217" column="1" bodyfile="src/tasks.cpp" bodystart="733" bodyend="751"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a725477908310816ec80cddbf733af04b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::tdeactivate</definition>
        <argsstring>(eosio::name host, uint64_t task_id)</argsstring>
        <name>tdeactivate</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод деактивации задачи Применимо для публичных задач, когда поставленная цель достигнута или недостижима. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="218" column="1" bodyfile="src/tasks.cpp" bodystart="758" bodyend="776"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a54639a2c971d48407747efdda1b2f2ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::tcomplete</definition>
        <argsstring>(eosio::name host, uint64_t task_id)</argsstring>
        <name>tcomplete</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод деактивации задачи Применимо для публичных задач, когда поставленная цель достигнута или недостижима. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="220" column="1" bodyfile="src/tasks.cpp" bodystart="784" bodyend="804"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1aff7586ddb285e938d5228562eb459234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setpgoal</definition>
        <argsstring>(eosio::name host, uint64_t task_id, uint64_t goal_id)</argsstring>
        <name>setpgoal</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
<para>Метод установки родительской цели </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="222" column="1" bodyfile="src/tasks.cpp" bodystart="505" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a4ff597c20fe7071fa4d48a1e6fb4e654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setdoer</definition>
        <argsstring>(eosio::name host, uint64_t task_id, eosio::name doer)</argsstring>
        <name>setdoer</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <briefdescription>
<para>Метод установки исполнителя </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="223" column="1" bodyfile="src/tasks.cpp" bodystart="535" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a5a31fb29df7ae2b8cbf51625b5c2bc21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::validate</definition>
        <argsstring>(eosio::name host, uint64_t task_id, uint64_t goal_id, eosio::name doer)</argsstring>
        <name>validate</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <briefdescription>
<para>Метод ручной валидации задачи </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="226" column="1" bodyfile="src/tasks.cpp" bodystart="695" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a799e41649cd9bab8a1a9a9c41822925b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::jointask</definition>
        <argsstring>(eosio::name host, uint64_t task_id, eosio::name doer, std::string comment)</argsstring>
        <name>jointask</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Метод предложения себя как исполнителя задачи </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="227" column="1" bodyfile="src/tasks.cpp" bodystart="622" bodyend="663"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a4d4a35a4c18d428c7e70ff7096cfd47d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::canceljtask</definition>
        <argsstring>(eosio::name host, uint64_t task_id, eosio::name doer)</argsstring>
        <name>canceljtask</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <briefdescription>
<para>Метод предложения отклонения заявки деятеля </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="228" column="1" bodyfile="src/tasks.cpp" bodystart="570" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a07802302c610d2dc17f77a3019b81838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settaskmeta</definition>
        <argsstring>(eosio::name host, uint64_t task_id, std::string meta)</argsstring>
        <name>settaskmeta</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Метод ручной валидации задачи </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="230" column="1" bodyfile="src/tasks.cpp" bodystart="671" bodyend="687"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a85136296400d6c3654bc80fcdb835bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setinctask</definition>
        <argsstring>(eosio::name username, uint64_t income_id, bool with_badge, uint64_t my_goal_id, uint64_t my_badge_id)</argsstring>
        <name>setinctask</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>income_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_badge</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>my_goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>my_badge_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="237" column="1" bodyfile="src/tasks.cpp" bodystart="2" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a09d7d2d602069a26875aa1eee250d5f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::deltask</definition>
        <argsstring>(eosio::name host, uint64_t task_id)</argsstring>
        <name>deltask</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Метод удаления задачи Вызывается хостом для удаления поставленной задачи. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="241" column="1" bodyfile="src/tasks.cpp" bodystart="461" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ab10a203c3d6c37fd1cb71a9110c62e8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::paydebt</definition>
        <argsstring>(eosio::name host, uint64_t goal_id)</argsstring>
        <name>paydebt</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
<para>Метод выплаты долга по цели из числа available в счет объектов долга </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="242" column="1" bodyfile="src/goals.cpp" bodystart="614" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a178fc39ee1d642454bddeaa3f6084d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setreport</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t task_id, eosio::string data)</argsstring>
        <name>setreport</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Публичный метод создания отчета о выполненной задаче Применяется исполнителем задачи для того, чтобы отправить отчет на проверку. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="244" column="1" bodyfile="src/tasks.cpp" bodystart="812" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ad041a75ade13b77f67f54c99f7ca7d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::editreport</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t report_id, eosio::string data)</argsstring>
        <name>editreport</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Публиный метод редактирования отчета В случае, если отчет не принят, участник получает возможность отредактировать свой отчет и выслать его на проверку повторно. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="245" column="1" bodyfile="src/tasks.cpp" bodystart="919" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a765b3c6b36dc26922fec8c1236e3d154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::approver</definition>
        <argsstring>(eosio::name host, uint64_t report_id, eosio::string comment)</argsstring>
        <name>approver</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Публичный метод одобрения отчета Используется хостом для того, чтобы принять задачу как выполненную и выдать вознаграждение / награду в виде значка. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="246" column="1" bodyfile="src/tasks.cpp" bodystart="945" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a403175c6abbcf360d36ec0259bccc109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::disapprover</definition>
        <argsstring>(eosio::name host, uint64_t report_id, eosio::string comment)</argsstring>
        <name>disapprover</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Публичный метод отклонения отчета </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="247" column="1" bodyfile="src/tasks.cpp" bodystart="1051" bodyend="1068"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a9c8a515eef8e3dd262372da54945047b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdrawrepo</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t report_id)</argsstring>
        <name>withdrawrepo</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод вывода баланса отчёта </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="249" column="1" bodyfile="src/tasks.cpp" bodystart="1077" bodyend="1128"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ae82cde0f788172b152c6b6896ac75d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::distrepo</definition>
        <argsstring>(eosio::name host, uint64_t report_id)</argsstring>
        <name>distrepo</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод обновления баланса отчёта при распределении баланса цели </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="250" column="1" bodyfile="src/tasks.cpp" bodystart="1138" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ac1ca3033e5f65695c938c3d0621e6bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::vote</definition>
        <argsstring>(eosio::name voter, eosio::name host, uint64_t goal_id, bool up)</argsstring>
        <name>vote</name>
        <param>
          <type>eosio::name</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="254" column="1" bodyfile="src/voting.cpp" bodystart="70" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ace8526f2178dd5662a3d96fa1b9b6c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rvote</definition>
        <argsstring>(eosio::name voter, eosio::name host, uint64_t report_id, bool up)</argsstring>
        <name>rvote</name>
        <param>
          <type>eosio::name</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="255" column="1" bodyfile="src/voting.cpp" bodystart="160" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a7b973d2c279fca2fa0cc08c35ebf1abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setcondition</definition>
        <argsstring>(eosio::name host, eosio::string key, uint64_t value)</argsstring>
        <name>setcondition</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="260" column="1" bodyfile="src/conditions.cpp" bodystart="121" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a624a721f564fd28c295bdeef482bacc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmcondition</definition>
        <argsstring>(eosio::name host, uint64_t key)</argsstring>
        <name>rmcondition</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="261" column="1" bodyfile="src/conditions.cpp" bodystart="146" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1adb0134644edf42ff41b84bca15e6e8ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string unicore::symbol_to_string</definition>
        <argsstring>(eosio::asset val) const</argsstring>
        <name>symbol_to_string</name>
        <param>
          <type>eosio::asset</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Структура хоста </para>        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of an asset.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation of the asset. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="271" column="1" bodyfile="src/hosts.cpp" bodystart="16" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classunicore_1a739255f27ec8bb084f76fcb8cd5c33d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eosio::asset</type>
        <definition>eosio::asset unicore::convert_to_power</definition>
        <argsstring>(eosio::asset quantity, eosio::name host)</argsstring>
        <name>convert_to_power</name>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="49" column="1" bodyfile="src/core.cpp" bodystart="46" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1aae7a94db6860df276fd7821044144a3e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eosio::asset</type>
        <definition>eosio::asset unicore::calculate_asset_from_power</definition>
        <argsstring>(eosio::asset quantity, eosio::name host)</argsstring>
        <name>calculate_asset_from_power</name>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="52" column="1" bodyfile="src/core.cpp" bodystart="65" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a4f4a69c310c073c6cf1ebf41f2c210e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::pay_for_upgrade</definition>
        <argsstring>(eosio::name username, eosio::asset amount, eosio::name code)</argsstring>
        <name>pay_for_upgrade</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Метод оплаты комиссии создания дочернего хоста </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="66" column="1" bodyfile="src/hosts.cpp" bodystart="678" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a8703f9141c36861284ca003a348b61d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refresh_state</definition>
        <argsstring>(eosio::name host)</argsstring>
        <name>refresh_state</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="68" column="1" bodyfile="src/core.cpp" bodystart="1353" bodyend="1416"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a8cdb743e8708845d4a6064d43400d415" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::giftbadge_action</definition>
        <argsstring>(eosio::name host, eosio::name to, uint64_t badge_id, eosio::string comment, bool netted, bool own, uint64_t goal_id, uint64_t task_id)</argsstring>
        <name>giftbadge_action</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>to</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>badge_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>netted</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>own</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Метод передачи значка награждаемому </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">to</parametername>
</parameternamelist>
<parameterdescription>
<para>{ parameter_description } </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">badge_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The badge identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">comment</parametername>
</parameternamelist>
<parameterdescription>
<para>The comment </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="79" column="1" bodyfile="src/badges.cpp" bodystart="61" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ac1a80266ee2fcc4565d3e0924eaf2c60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::deposit</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset amount, eosio::name code, std::string message)</argsstring>
        <name>deposit</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="80" column="1" bodyfile="src/core.cpp" bodystart="1270" bodyend="1321"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a466aba74657c6022cc0d9163bd502625" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::donate_action</definition>
        <argsstring>(eosio::name from, eosio::name host, uint64_t goal_id, eosio::asset quantity, eosio::name code)</argsstring>
        <name>donate_action</name>
        <param>
          <type>eosio::name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Метод спонсорского взноса на цель Позволяет любому участнику произвести финансирование цели из числа собственных средств. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">from</parametername>
</parameternamelist>
<parameterdescription>
<para>The from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">goal_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The goal identifier </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>The quantity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">code</parametername>
</parameternamelist>
<parameterdescription>
<para>The code </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="103" column="1" bodyfile="src/goals.cpp" bodystart="438" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1aacdeaae7b4b591419bd366661b92cd27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eosio::asset</type>
        <definition>eosio::asset unicore::adjust_goals_emission_pool</definition>
        <argsstring>(eosio::name hostname, eosio::asset host_income)</argsstring>
        <name>adjust_goals_emission_pool</name>
        <param>
          <type>eosio::name</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>host_income</declname>
        </param>
        <briefdescription>
<para>Внутренний метод расчета пула эмиссии. Вызывается в момент распределения эмиссии на цели сообщества. Расчет объема эмиссии происходит исходя из параметра life_balance_for_sale завершенного пула, и процента эмиссии, установленного архитектором. Процент эмиссии ограничен от 0 до 1000% относительного живого остатка на продажу в каждом новом пуле. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>The hostname - имя аккаунта хоста</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>{ description_of_the_return_value } </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="104" column="1" bodyfile="src/core.cpp" bodystart="374" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a416ca740d83132d969c0e99d035a5c7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::fund_emi_pool</definition>
        <argsstring>(eosio::name host, eosio::asset amount, eosio::name code)</argsstring>
        <name>fund_emi_pool</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Метод ручного пополнения целевого фонда сообщества. Жетоны, попадающие в целевой фонд сообщества, подлежат распределению на цели с помощью голосования участников по установленным правилам консенсуса. </para>        </briefdescription>
        <detaileddescription>
<para>Метод может не использоваться, поскольку еще одним источником пополнения целевого фонда сообщества является установленный архитектором сообщества процент от финансового оборота ядра.</para><para>Примеры: Выпущен 1 млн жетонов, 90% из которых закреплены в целевом фонде, а 10% распределяются среди участников через прямое расределение любым способом (например, продажей). В этом случае, 90% жетонов должны быть помещены в целевой фонд, что гарантирует эмиссию жетонов на цели сообщества в зависимости от вращения ядра и установленного архитектором процента эмиссии при заранее известном общем количестве жетонов.</para><para>В случае, когда конфигурацией экономики не предусмотрено использование целевого фонда сообществ, или же когда для его пополнения используется только автоматический режим в зависимости от финансового оборота ядра, метод ручного пополнения может не использоваться. И в то же время он всегда доступен любому участнику сообщества простым переводом средств на аккаунт протокола с указанием суб-кода назначения и имени хоста сообщества. <linebreak/>
 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username - имя пользователя, совершающего поолнение. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host - имя аккаунта хоста </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount - сумма для пополнения </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">code</parametername>
</parameternamelist>
<parameterdescription>
<para>The code - контракт токена, поступивший на вход. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="105" column="1" bodyfile="src/core.cpp" bodystart="98" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1aac61e7c884c079854b1987c88abce0c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_asset_to_fund_action</definition>
        <argsstring>(eosio::name username, eosio::asset quantity, eosio::name code)</argsstring>
        <name>add_asset_to_fund_action</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Публичный метод пополнения фонда </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="106" column="1" bodyfile="src/core.cpp" bodystart="2304" bodyend="2324"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a2439f37a892708018e3474efa938d778" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::createfund</definition>
        <argsstring>(eosio::name token_contract, eosio::asset fund_asset, std::string descriptor)</argsstring>
        <name>createfund</name>
        <param>
          <type>eosio::name</type>
          <declname>token_contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>fund_asset</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
<para>Статичный метод создания фонда </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="113" column="1" bodyfile="src/core.cpp" bodystart="2332" bodyend="2363"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a278664e711bbb5194481633ae96bbc75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eosio::asset</type>
        <definition>eosio::asset unicore::buy_action</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset quantity, eosio::name code, bool modify_pool, bool transfer, bool spread_to_funds, eosio::asset summ)</argsstring>
        <name>buy_action</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>modify_pool</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transfer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>spread_to_funds</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>summ</declname>
        </param>
        <briefdescription>
<para>Публичный метод покупки по текущему курсу из числа квантов раунда. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="114" column="1" bodyfile="src/core.cpp" bodystart="2764" bodyend="2864"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a98f88515bc39a8534fbe42aba341ae3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::buy_account</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset quantity, eosio::name code, eosio::name status)</argsstring>
        <name>buy_account</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Публичный метод покупки статуса участника для аккаунта (выкуп гостевого аккаунта у регистратора) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="116" column="1" bodyfile="src/core.cpp" bodystart="2562" bodyend="2644"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a686b70b2ba7f98510b783d4093defdb6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::burn_action</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset quantity, eosio::name code)</argsstring>
        <name>burn_action</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Публичный метод сжигания квантов по текущему курсу из числа квантов раунда. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="118" column="1" bodyfile="src/core.cpp" bodystart="2652" bodyend="2724"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ada4e4997f2a64086d89dd64c26b13cb4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settype_static</definition>
        <argsstring>(eosio::name host, eosio::name type)</argsstring>
        <name>settype_static</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="135" column="1" bodyfile="src/core.cpp" bodystart="31" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a26f7df861487d0d3b018376b9b3fea9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::spread_to_benefactors</definition>
        <argsstring>(eosio::name host, eosio::asset amount, uint64_t goal_id)</argsstring>
        <name>spread_to_benefactors</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="142" column="1" bodyfile="src/goals.cpp" bodystart="846" bodyend="901"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a97e2f30594f2b3dab8302e1c086b5a5d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::spread_to_dacs</definition>
        <argsstring>(eosio::name host, eosio::asset amount)</argsstring>
        <name>spread_to_dacs</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="166" column="1" bodyfile="src/core.cpp" bodystart="3472" bodyend="3520"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a5dab3c2359093e45f4e0b1fa5f41df29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::spread_to_funds</definition>
        <argsstring>(eosio::name host, eosio::asset quantity, eosio::name referal)</argsstring>
        <name>spread_to_funds</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>referal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="168" column="1" bodyfile="src/core.cpp" bodystart="3324" bodyend="3469"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a0c2b0c3fffe564405122f21621aedb78" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::spread_to_refs</definition>
        <argsstring>(eosio::name host, eosio::name username, eosio::asset spread_amount, eosio::asset from_amount)</argsstring>
        <name>spread_to_refs</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>spread_amount</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>from_amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Вычисляем размер выплаты для каждого уровня партнеров и производим выплаты.</para><para>Все неиспользуемые вознаграждения с вышестояющих уровней отправляются на пользователя Все неиспользуемые вознаграждения с вышестояющих уровней отправляются на компании</para><para>Если рефералов у пользователя нет, то переводим все реферальные средства пользователю.<itemizedlist>
<listitem><para>Если рефералов у пользователя нет, то переводим все реферальные средства компании.</para></listitem></itemizedlist>
</para>        </inbodydescription>
        <location file="include/core.hpp" line="170" column="1" bodyfile="src/core.cpp" bodystart="3208" bodyend="3322"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a128c65265d5c63d43c16f01220b06946" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::spread_action</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset quantity, eosio::name code)</argsstring>
        <name>spread_action</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Публичный метод сжигания квантов по текущему курсу из числа квантов раунда. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="172" column="1" bodyfile="src/core.cpp" bodystart="2733" bodyend="2756"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ab899e878b848c48c9f6656c74565970d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t unicore::buyshares_action</definition>
        <argsstring>(eosio::name buyer, eosio::name host, eosio::asset amount, eosio::name code, bool is_frozen)</argsstring>
        <name>buyshares_action</name>
        <param>
          <type>eosio::name</type>
          <declname>buyer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_frozen</declname>
        </param>
        <briefdescription>
<para>Метод покупки силы сообщества Обеспечивает покупку силы сообщества за котировочный токен по внутренней рыночной цене, определяемой с помощью алгоритма банкор. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buyer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buyer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="210" column="1" bodyfile="src/shares.cpp" bodystart="397" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ad357c4583f4d72f085919ad874bf0b28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::delegate_shares_action</definition>
        <argsstring>(eosio::name from, eosio::name reciever, eosio::name host, uint64_t shares)</argsstring>
        <name>delegate_shares_action</name>
        <param>
          <type>eosio::name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>reciever</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Метод делегирования силы. Позволяет делегировать купленную силу для принятия каких-либо решений в пользу любого аккаунта. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="211" column="1" bodyfile="src/shares.cpp" bodystart="588" bodyend="651"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a85158234a313fe5b2dc08b3cd9210dd6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setincoming</definition>
        <argsstring>(eosio::name doer, eosio::name host, uint64_t goal_id, uint64_t task_id)</argsstring>
        <name>setincoming</name>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="232" column="1" bodyfile="src/tasks.cpp" bodystart="58" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a61a8cdde982effe739244f9b4015a5f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::delincoming</definition>
        <argsstring>(eosio::name doer, eosio::name host, uint64_t goal_id, uint64_t task_id)</argsstring>
        <name>delincoming</name>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="233" column="1" bodyfile="src/tasks.cpp" bodystart="119" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1aafefe860d9af675b4bb1a4ec1477cffd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::check_and_gift_netted_badge</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t task_id)</argsstring>
        <name>check_and_gift_netted_badge</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="236" column="1" bodyfile="src/tasks.cpp" bodystart="34" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a9db4a730ab5cb5c91f4af22fcbe314fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::propagate_votes_changes</definition>
        <argsstring>(eosio::name host, eosio::name voter, uint64_t old_power, uint64_t new_power)</argsstring>
        <name>propagate_votes_changes</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>old_power</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>new_power</declname>
        </param>
        <briefdescription>
<para>Обновление счетчика голосов Внутренний метод, используемый для обновления голосов у целей в момент покупки/продажи силы. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">voter</parametername>
</parameternamelist>
<parameterdescription>
<para>The voter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">old_power</parametername>
</parameternamelist>
<parameterdescription>
<para>The old power </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_power</parametername>
</parameternamelist>
<parameterdescription>
<para>The new power </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="257" column="1" bodyfile="src/shares.cpp" bodystart="662" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1abcc8b6f0d5fabea652fb09b641ae1b87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmfromhostwl</definition>
        <argsstring>(eosio::name host, eosio::name username)</argsstring>
        <name>rmfromhostwl</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="262" column="1" bodyfile="src/conditions.cpp" bodystart="70" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a025c27857c9bfe21219241279e0dd61e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::check_burn_status</definition>
        <argsstring>(eosio::name host, eosio::name username, eosio::asset quants_for_user_in_asset)</argsstring>
        <name>check_burn_status</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quants_for_user_in_asset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="263" column="1" bodyfile="src/conditions.cpp" bodystart="20" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a136dfcacb74672c4f8babbe80275ab80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t unicore::getcondition</definition>
        <argsstring>(eosio::name host, eosio::string key)</argsstring>
        <name>getcondition</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="265" column="1" bodyfile="src/conditions.cpp" bodystart="106" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a6944e1980de8d07225c5dd4ee1157634" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::addtohostwl</definition>
        <argsstring>(eosio::name host, eosio::name username)</argsstring>
        <name>addtohostwl</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="267" column="1" bodyfile="src/conditions.cpp" bodystart="79" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a4b3c7544b822d31c8b826001ac1adaa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool unicore::checkcondition</definition>
        <argsstring>(eosio::name host, eosio::string key, uint64_t value)</argsstring>
        <name>checkcondition</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="268" column="1" bodyfile="src/conditions.cpp" bodystart="91" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1acdb13b5d90405d5626709be7f8a6152b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::checkminpwr</definition>
        <argsstring>(eosio::name host, eosio::name username)</argsstring>
        <name>checkminpwr</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="269" column="1" bodyfile="src/conditions.cpp" bodystart="5" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a62e5a50f666b6406f7a786646091f529" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::change_bw_trade_graph</definition>
        <argsstring>(eosio::name host, uint64_t pool_id, uint64_t cycle_num, uint64_t pool_num, uint64_t buy_rate, uint64_t next_buy_rate, uint64_t total_quants, uint64_t remain_quants, std::string color)</argsstring>
        <name>change_bw_trade_graph</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>cycle_num</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_num</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>buy_rate</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>next_buy_rate</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>total_quants</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>remain_quants</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="272" column="1" bodyfile="src/core.cpp" bodystart="636" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a666299956a0903dec8e26b1c5b9b24a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_coredhistory</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t pool_id, eosio::asset amount, std::string action, std::string message)</argsstring>
        <name>add_coredhistory</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>action</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Приватный метод обновления истории ядра </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="274" column="1" bodyfile="src/core.cpp" bodystart="1328" bodyend="1350"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a0ea88fc9a5ee27ea75a85e6b842aeba6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::create_bancor_market</definition>
        <argsstring>(std::string name, uint64_t id, eosio::name host, uint64_t total_shares, eosio::asset quote_amount, eosio::name quote_token_contract, uint64_t vesting_seconds)</argsstring>
        <name>create_bancor_market</name>
        <param>
          <type>std::string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>total_shares</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quote_amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>quote_token_contract</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vesting_seconds</declname>
        </param>
        <briefdescription>
<para>Приватный метод создания банкор-рынка. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">total_shares</parametername>
</parameternamelist>
<parameterdescription>
<para>The total shares </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quote_amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The quote amount </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="276" column="1" bodyfile="src/shares.cpp" bodystart="790" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1af3856ac90d470eddfd5dec3f29cb0dc7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; eosio::asset &gt;</type>
        <definition>std::vector&lt; eosio::asset &gt; unicore::calculate_forecast</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t quants, uint64_t pool_num, eosio::asset purchase_amount, bool calculate_first, bool calculate_zero)</argsstring>
        <name>calculate_forecast</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>quants</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_num</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>purchase_amount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>calculate_first</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>calculate_zero</declname>
        </param>
        <briefdescription>
<para>Метод расчета прогнозов Внутренний метод расчета прогнозов. Внутренний метод расчета прогнозов выплат для последующих 8х бассейнов на основе будущих курсов. Используются только для демонастрации. </para>        </briefdescription>
        <detaileddescription>
<para>TODO Может дополнительно быть реализован в качестве внешнего метода достоверной проверки прогнозов, который с каждым вызовом производит расчет будущих курсов и расширяет массив с данными по желанию пользователя. Устранить избыток кода.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quants</parametername>
</parameternamelist>
<parameterdescription>
<para>The quants </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool number</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The forecast. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="277" column="1" bodyfile="src/core.cpp" bodystart="1890" bodyend="2098"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a415141b20af92120acd7a752d646b1fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::fill_pool</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t quants, eosio::asset amount, uint64_t filled_pool_id)</argsstring>
        <name>fill_pool</name>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>quants</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>filled_pool_id</declname>
        </param>
        <briefdescription>
<para>Внутренний метод заполнения пула. Вызывается в момент совершения депозита пользователем или на приоритетном входе. Создает баланс пользователю и уменьшает количество квантов в пуле. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quants</parametername>
</parameternamelist>
<parameterdescription>
<para>The quants </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filled_pool_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The filled pool identifier </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="278" column="1" bodyfile="src/core.cpp" bodystart="1443" bodyend="1584"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a5801b4011531f5cc142fd1cf28d6b6be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::check_and_modify_sale_fund</definition>
        <argsstring>(eosio::asset amount, hosts acc)</argsstring>
        <name>check_and_modify_sale_fund</name>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type><ref refid="structhosts" kindref="compound">hosts</ref></type>
          <declname>acc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="279" column="1" bodyfile="src/core.cpp" bodystart="3541" bodyend="3567"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1a21ad2432a12016b8907d553fc3c02cc4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::give_shares_with_badge_action</definition>
        <argsstring>(eosio::name host, eosio::name reciever, uint64_t shares)</argsstring>
        <name>give_shares_with_badge_action</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>reciever</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Внутренний метод эмиссии силы. Используется при выдаче знака отличия </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="280" column="1" bodyfile="src/shares.cpp" bodystart="518" bodyend="579"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1aa78e3ba614a74bf7edd3fdfa0b048b23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::back_shares_with_badge_action</definition>
        <argsstring>(eosio::name host, eosio::name from, uint64_t shares)</argsstring>
        <name>back_shares_with_badge_action</name>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Внутренний метод возврата силы при возврате значка. Используется при возврате знака отличия хосту </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="281" column="1" bodyfile="src/shares.cpp" bodystart="469" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classunicore_1ad58e00b35b02b50991c8fdb0307ce3c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_sale_history</definition>
        <argsstring>(hosts acc, rate rate, spiral sp, eosio::asset amount)</argsstring>
        <name>add_sale_history</name>
        <param>
          <type><ref refid="structhosts" kindref="compound">hosts</ref></type>
          <declname>acc</declname>
        </param>
        <param>
          <type><ref refid="structrate" kindref="compound">rate</ref></type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="structspiral" kindref="compound">spiral</ref></type>
          <declname>sp</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="282" column="1" bodyfile="src/core.cpp" bodystart="3522" bodyend="3539"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Содержит все доступные действия, публичные и приватные методы протокола. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="165">
        <label>unicore</label>
        <link refid="classunicore"/>
        <childnode refid="166" relation="public-inheritance">
        </childnode>
      </node>
      <node id="166">
        <label>eosio::contract</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="167">
        <label>unicore</label>
        <link refid="classunicore"/>
        <childnode refid="168" relation="public-inheritance">
        </childnode>
      </node>
      <node id="168">
        <label>eosio::contract</label>
      </node>
    </collaborationgraph>
    <location file="include/core.hpp" line="40" column="1" bodyfile="include/core.hpp" bodystart="40" bodyend="285"/>
    <listofallmembers>
      <member refid="classunicore_1aac61e7c884c079854b1987c88abce0c5" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_asset_to_fund_action</name></member>
      <member refid="classunicore_1a666299956a0903dec8e26b1c5b9b24a9" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_coredhistory</name></member>
      <member refid="classunicore_1ad58e00b35b02b50991c8fdb0307ce3c1" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_sale_history</name></member>
      <member refid="classunicore_1a4c8df6c80a48d2a6f8a73469a470ec2f" prot="public" virt="non-virtual"><scope>unicore</scope><name>addben</name></member>
      <member refid="classunicore_1ac6f84b754aa586043376617165f90eca" prot="public" virt="non-virtual"><scope>unicore</scope><name>adddac</name></member>
      <member refid="classunicore_1a2b873bf336e3c8b5b6e0f9d1823b2497" prot="public" virt="non-virtual"><scope>unicore</scope><name>addhostofund</name></member>
      <member refid="classunicore_1a6944e1980de8d07225c5dd4ee1157634" prot="public" virt="non-virtual"><scope>unicore</scope><name>addtohostwl</name></member>
      <member refid="classunicore_1aabd42ff2a6dcac81d487e65b0bf5dda6" prot="public" virt="non-virtual"><scope>unicore</scope><name>addvac</name></member>
      <member refid="classunicore_1a728bf4c6d03c63fa2969a3effe312fea" prot="public" virt="non-virtual"><scope>unicore</scope><name>addvprop</name></member>
      <member refid="classunicore_1aacdeaae7b4b591419bd366661b92cd27" prot="public" virt="non-virtual"><scope>unicore</scope><name>adjust_goals_emission_pool</name></member>
      <member refid="classunicore_1added73f623a6df0537a4daef1c46ed8b" prot="public" virt="non-virtual"><scope>unicore</scope><name>apply</name></member>
      <member refid="classunicore_1a765b3c6b36dc26922fec8c1236e3d154" prot="public" virt="non-virtual"><scope>unicore</scope><name>approver</name></member>
      <member refid="classunicore_1a55e754af41251b55a9c6b1cfe0f0f8c1" prot="public" virt="non-virtual"><scope>unicore</scope><name>approvevac</name></member>
      <member refid="classunicore_1afcacb23342b138f05740e3bd57d03fde" prot="public" virt="non-virtual"><scope>unicore</scope><name>apprvprop</name></member>
      <member refid="classunicore_1aa78e3ba614a74bf7edd3fdfa0b048b23" prot="public" virt="non-virtual"><scope>unicore</scope><name>back_shares_with_badge_action</name></member>
      <member refid="classunicore_1a6e7db779eb5836300fabe105012388c2" prot="public" virt="non-virtual"><scope>unicore</scope><name>backbadge</name></member>
      <member refid="classunicore_1a686b70b2ba7f98510b783d4093defdb6" prot="public" virt="non-virtual"><scope>unicore</scope><name>burn_action</name></member>
      <member refid="classunicore_1a98f88515bc39a8534fbe42aba341ae3b" prot="public" virt="non-virtual"><scope>unicore</scope><name>buy_account</name></member>
      <member refid="classunicore_1a278664e711bbb5194481633ae96bbc75" prot="public" virt="non-virtual"><scope>unicore</scope><name>buy_action</name></member>
      <member refid="classunicore_1ab899e878b848c48c9f6656c74565970d" prot="public" virt="non-virtual"><scope>unicore</scope><name>buyshares_action</name></member>
      <member refid="classunicore_1aae7a94db6860df276fd7821044144a3e" prot="public" virt="non-virtual"><scope>unicore</scope><name>calculate_asset_from_power</name></member>
      <member refid="classunicore_1af3856ac90d470eddfd5dec3f29cb0dc7" prot="public" virt="non-virtual"><scope>unicore</scope><name>calculate_forecast</name></member>
      <member refid="classunicore_1a4d4a35a4c18d428c7e70ff7096cfd47d" prot="public" virt="non-virtual"><scope>unicore</scope><name>canceljtask</name></member>
      <member refid="classunicore_1abae3b92d93cbbbd1058005639975f09d" prot="public" virt="non-virtual"><scope>unicore</scope><name>cchildhost</name></member>
      <member refid="classunicore_1a62e5a50f666b6406f7a786646091f529" prot="public" virt="non-virtual"><scope>unicore</scope><name>change_bw_trade_graph</name></member>
      <member refid="classunicore_1ac31cf68445b14c4dbdea9684a0556f10" prot="public" virt="non-virtual"><scope>unicore</scope><name>check</name></member>
      <member refid="classunicore_1aafefe860d9af675b4bb1a4ec1477cffd" prot="public" virt="non-virtual"><scope>unicore</scope><name>check_and_gift_netted_badge</name></member>
      <member refid="classunicore_1a5801b4011531f5cc142fd1cf28d6b6be" prot="public" virt="non-virtual"><scope>unicore</scope><name>check_and_modify_sale_fund</name></member>
      <member refid="classunicore_1a025c27857c9bfe21219241279e0dd61e" prot="public" virt="non-virtual"><scope>unicore</scope><name>check_burn_status</name></member>
      <member refid="classunicore_1a4b3c7544b822d31c8b826001ac1adaa2" prot="public" virt="non-virtual"><scope>unicore</scope><name>checkcondition</name></member>
      <member refid="classunicore_1acdb13b5d90405d5626709be7f8a6152b" prot="public" virt="non-virtual"><scope>unicore</scope><name>checkminpwr</name></member>
      <member refid="classunicore_1abf1dd4d893faaa4851adced7cfa7770c" prot="public" virt="non-virtual"><scope>unicore</scope><name>closeahost</name></member>
      <member refid="classunicore_1abb38bcc39c9e3ca74f955944a84274fe" prot="public" virt="non-virtual"><scope>unicore</scope><name>compensator</name></member>
      <member refid="classunicore_1a30206473eb9672b7b67d0a85d2035ff3" prot="public" virt="non-virtual"><scope>unicore</scope><name>convert</name></member>
      <member refid="classunicore_1a739255f27ec8bb084f76fcb8cd5c33d8" prot="public" virt="non-virtual"><scope>unicore</scope><name>convert_to_power</name></member>
      <member refid="classunicore_1a0ea88fc9a5ee27ea75a85e6b842aeba6" prot="public" virt="non-virtual"><scope>unicore</scope><name>create_bancor_market</name></member>
      <member refid="classunicore_1a2439f37a892708018e3474efa938d778" prot="public" virt="non-virtual"><scope>unicore</scope><name>createfund</name></member>
      <member refid="classunicore_1ad357c4583f4d72f085919ad874bf0b28" prot="public" virt="non-virtual"><scope>unicore</scope><name>delegate_shares_action</name></member>
      <member refid="classunicore_1a9fd534e0b189439c6f18e99689911b3e" prot="public" virt="non-virtual"><scope>unicore</scope><name>delgoal</name></member>
      <member refid="classunicore_1a61a8cdde982effe739244f9b4015a5f5" prot="public" virt="non-virtual"><scope>unicore</scope><name>delincoming</name></member>
      <member refid="classunicore_1a09d7d2d602069a26875aa1eee250d5f4" prot="public" virt="non-virtual"><scope>unicore</scope><name>deltask</name></member>
      <member refid="classunicore_1ac1a80266ee2fcc4565d3e0924eaf2c60" prot="public" virt="non-virtual"><scope>unicore</scope><name>deposit</name></member>
      <member refid="classunicore_1a969e75dd90699b53b75ab8482cbc49d3" prot="public" virt="non-virtual"><scope>unicore</scope><name>dfundgoal</name></member>
      <member refid="classunicore_1a403175c6abbcf360d36ec0259bccc109" prot="public" virt="non-virtual"><scope>unicore</scope><name>disapprover</name></member>
      <member refid="classunicore_1ae82cde0f788172b152c6b6896ac75d0d" prot="public" virt="non-virtual"><scope>unicore</scope><name>distrepo</name></member>
      <member refid="classunicore_1a466aba74657c6022cc0d9163bd502625" prot="public" virt="non-virtual"><scope>unicore</scope><name>donate_action</name></member>
      <member refid="classunicore_1a38d070fb8067b91799456f1472ced47d" prot="public" virt="non-virtual"><scope>unicore</scope><name>edithost</name></member>
      <member refid="classunicore_1ad041a75ade13b77f67f54c99f7ca7d29" prot="public" virt="non-virtual"><scope>unicore</scope><name>editreport</name></member>
      <member refid="classunicore_1ad1ca7dd3eab26146ed184e3bda67f5b1" prot="public" virt="non-virtual"><scope>unicore</scope><name>enablesale</name></member>
      <member refid="classunicore_1a415141b20af92120acd7a752d646b1fa" prot="public" virt="non-virtual"><scope>unicore</scope><name>fill_pool</name></member>
      <member refid="classunicore_1abb22debda627e37951ea15e47fc77985" prot="public" virt="non-virtual"><scope>unicore</scope><name>fixs</name></member>
      <member refid="classunicore_1a416ca740d83132d969c0e99d035a5c7f" prot="public" virt="non-virtual"><scope>unicore</scope><name>fund_emi_pool</name></member>
      <member refid="classunicore_1af6e32936bbe20a612c9348bf5f805982" prot="public" virt="non-virtual"><scope>unicore</scope><name>fundchildgoa</name></member>
      <member refid="classunicore_1ae8ca388e55f11d3c32430edbaabcf7e2" prot="public" virt="non-virtual"><scope>unicore</scope><name>fundtask</name></member>
      <member refid="classunicore_1a2ee6a26c970b05e61c3753791a55dee4" prot="public" virt="non-virtual"><scope>unicore</scope><name>gaccept</name></member>
      <member refid="classunicore_1a136dfcacb74672c4f8babbe80275ab80" prot="public" virt="non-virtual"><scope>unicore</scope><name>getcondition</name></member>
      <member refid="classunicore_1a40fa6e2fa9fcddf76ba73b261eae6fef" prot="public" virt="non-virtual"><scope>unicore</scope><name>giftbadge</name></member>
      <member refid="classunicore_1a8cdb743e8708845d4a6064d43400d415" prot="public" virt="non-virtual"><scope>unicore</scope><name>giftbadge_action</name></member>
      <member refid="classunicore_1a21ad2432a12016b8907d553fc3c02cc4" prot="public" virt="non-virtual"><scope>unicore</scope><name>give_shares_with_badge_action</name></member>
      <member refid="classunicore_1a2cc7c4ae8c6ea5e604d6666d37d11405" prot="public" virt="non-virtual"><scope>unicore</scope><name>gpause</name></member>
      <member refid="classunicore_1a621817942c7b2758963d4147170b3c60" prot="public" virt="non-virtual"><scope>unicore</scope><name>gsponsor</name></member>
      <member refid="classunicore_1a4faa41a68505840e66f78e350412723c" prot="public" virt="non-virtual"><scope>unicore</scope><name>gwithdraw</name></member>
      <member refid="classunicore_1a43103f3b9bdc5ed37f564cc10446549e" prot="public" virt="non-virtual"><scope>unicore</scope><name>init</name></member>
      <member refid="classunicore_1a799e41649cd9bab8a1a9a9c41822925b" prot="public" virt="non-virtual"><scope>unicore</scope><name>jointask</name></member>
      <member refid="classunicore_1a339ec2fd85cf7ddd182a7e41d0f66f66" prot="public" virt="non-virtual"><scope>unicore</scope><name>openahost</name></member>
      <member refid="classunicore_1a4f4a69c310c073c6cf1ebf41f2c210e8" prot="public" virt="non-virtual"><scope>unicore</scope><name>pay_for_upgrade</name></member>
      <member refid="classunicore_1ab10a203c3d6c37fd1cb71a9110c62e8a" prot="public" virt="non-virtual"><scope>unicore</scope><name>paydebt</name></member>
      <member refid="classunicore_1a7c554fbaa488514c2fd09879a6b4c662" prot="public" virt="non-virtual"><scope>unicore</scope><name>priorenter</name></member>
      <member refid="classunicore_1a9db4a730ab5cb5c91f4af22fcbe314fc" prot="public" virt="non-virtual"><scope>unicore</scope><name>propagate_votes_changes</name></member>
      <member refid="classunicore_1a8703f9141c36861284ca003a348b61d0" prot="public" virt="non-virtual"><scope>unicore</scope><name>refresh_state</name></member>
      <member refid="classunicore_1abb1a56452f7d8819475e04e5ad10fe54" prot="public" virt="non-virtual"><scope>unicore</scope><name>refreshbal</name></member>
      <member refid="classunicore_1a00ca80d8fa12bd41448d55cd82c5cd60" prot="public" virt="non-virtual"><scope>unicore</scope><name>refreshpu</name></member>
      <member refid="classunicore_1a790c1a22331df2bd9e7f9b9094de7dfb" prot="public" virt="non-virtual"><scope>unicore</scope><name>refreshsh</name></member>
      <member refid="classunicore_1a2a410729955a5bc11fe3b3051f10a4c9" prot="public" virt="non-virtual"><scope>unicore</scope><name>refreshst</name></member>
      <member refid="classunicore_1ac0e6bf94b8bfd28e08c364631a357d91" prot="public" virt="non-virtual"><scope>unicore</scope><name>report</name></member>
      <member refid="classunicore_1ab1e9b13cec99a231f1c6a71e3edc37c6" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmahost</name></member>
      <member refid="classunicore_1a1713b099515838ad2e42391f4dd03b6f" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmben</name></member>
      <member refid="classunicore_1a624a721f564fd28c295bdeef482bacc8" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmcondition</name></member>
      <member refid="classunicore_1af6aac321d5880fcb577ba00abea5c38f" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmcontent</name></member>
      <member refid="classunicore_1a1a76e2539a42f80b8ac6f514305665c8" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmdac</name></member>
      <member refid="classunicore_1abcc8b6f0d5fabea652fb09b641ae1b87" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmfromhostwl</name></member>
      <member refid="classunicore_1a8474a6b0859f13d7283922d5f7c3cd0a" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmhosfrfund</name></member>
      <member refid="classunicore_1a756863a6910963e79adbb3bfcdf7ba47" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmvac</name></member>
      <member refid="classunicore_1adb6489dbbbb032b012f3faa9e8ba963f" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmvprop</name></member>
      <member refid="classunicore_1ace8526f2178dd5662a3d96fa1b9b6c7f" prot="public" virt="non-virtual"><scope>unicore</scope><name>rvote</name></member>
      <member refid="classunicore_1a237ab7bb223b33ba87375e177ced89a2" prot="public" virt="non-virtual"><scope>unicore</scope><name>sellshares</name></member>
      <member refid="classunicore_1a1f73391b2c692e2c97ca675333aee0ad" prot="public" virt="non-virtual"><scope>unicore</scope><name>setahost</name></member>
      <member refid="classunicore_1ac5b6ba6e6362cc73943265c750429fd4" prot="public" virt="non-virtual"><scope>unicore</scope><name>setarch</name></member>
      <member refid="classunicore_1a46cd90e0a4f1b938d4548ca254782cfe" prot="public" virt="non-virtual"><scope>unicore</scope><name>setbadge</name></member>
      <member refid="classunicore_1ad0188feae42e22b52afbb6e3c3f70c86" prot="public" virt="non-virtual"><scope>unicore</scope><name>setcmsconfig</name></member>
      <member refid="classunicore_1a7b973d2c279fca2fa0cc08c35ebf1abe" prot="public" virt="non-virtual"><scope>unicore</scope><name>setcondition</name></member>
      <member refid="classunicore_1abab6ddd4a167efde5f0e45a1ffd9dfba" prot="public" virt="non-virtual"><scope>unicore</scope><name>setcontent</name></member>
      <member refid="classunicore_1a4ff597c20fe7071fa4d48a1e6fb4e654" prot="public" virt="non-virtual"><scope>unicore</scope><name>setdoer</name></member>
      <member refid="classunicore_1affa39993f35c8e2c8838a956c761cbcc" prot="public" virt="non-virtual"><scope>unicore</scope><name>setemi</name></member>
      <member refid="classunicore_1a2b63d1aac35b533f122286943a54db18" prot="public" virt="non-virtual"><scope>unicore</scope><name>setflows</name></member>
      <member refid="classunicore_1a1ba1753b7dc4109e94dc7c4c9dbd5400" prot="public" virt="non-virtual"><scope>unicore</scope><name>setgcreator</name></member>
      <member refid="classunicore_1aa2341c3f2393be329d759ef09f20367f" prot="public" virt="non-virtual"><scope>unicore</scope><name>setgoal</name></member>
      <member refid="classunicore_1a85158234a313fe5b2dc08b3cd9210dd6" prot="public" virt="non-virtual"><scope>unicore</scope><name>setincoming</name></member>
      <member refid="classunicore_1a85136296400d6c3654bc80fcdb835bd3" prot="public" virt="non-virtual"><scope>unicore</scope><name>setinctask</name></member>
      <member refid="classunicore_1a9ebdfe87e84d1a283143d274f2337e84" prot="public" virt="non-virtual"><scope>unicore</scope><name>setlevels</name></member>
      <member refid="classunicore_1a8898e75bc9abe84fd78c15f9de3731f5" prot="public" virt="non-virtual"><scope>unicore</scope><name>setparams</name></member>
      <member refid="classunicore_1aff7586ddb285e938d5228562eb459234" prot="public" virt="non-virtual"><scope>unicore</scope><name>setpgoal</name></member>
      <member refid="classunicore_1a178fc39ee1d642454bddeaa3f6084d00" prot="public" virt="non-virtual"><scope>unicore</scope><name>setreport</name></member>
      <member refid="classunicore_1a62e02b155f2cd8012d807e60dacd1ace" prot="public" virt="non-virtual"><scope>unicore</scope><name>setstartdate</name></member>
      <member refid="classunicore_1aa989f60384b7167e4e1ff2b4d219a1b3" prot="public" virt="non-virtual"><scope>unicore</scope><name>settask</name></member>
      <member refid="classunicore_1a07802302c610d2dc17f77a3019b81838" prot="public" virt="non-virtual"><scope>unicore</scope><name>settaskmeta</name></member>
      <member refid="classunicore_1af4454491cb629dc007eed9b6febdd161" prot="public" virt="non-virtual"><scope>unicore</scope><name>settiming</name></member>
      <member refid="classunicore_1a61965d7a5c449487b565b444659d6cd7" prot="public" virt="non-virtual"><scope>unicore</scope><name>settype</name></member>
      <member refid="classunicore_1ada4e4997f2a64086d89dd64c26b13cb4" prot="public" virt="non-virtual"><scope>unicore</scope><name>settype_static</name></member>
      <member refid="classunicore_1a3a1fde814fc862b339230cfb85505145" prot="public" virt="non-virtual"><scope>unicore</scope><name>setwebsite</name></member>
      <member refid="classunicore_1a128c65265d5c63d43c16f01220b06946" prot="public" virt="non-virtual"><scope>unicore</scope><name>spread_action</name></member>
      <member refid="classunicore_1a26f7df861487d0d3b018376b9b3fea9d" prot="public" virt="non-virtual"><scope>unicore</scope><name>spread_to_benefactors</name></member>
      <member refid="classunicore_1a97e2f30594f2b3dab8302e1c086b5a5d" prot="public" virt="non-virtual"><scope>unicore</scope><name>spread_to_dacs</name></member>
      <member refid="classunicore_1a5dab3c2359093e45f4e0b1fa5f41df29" prot="public" virt="non-virtual"><scope>unicore</scope><name>spread_to_funds</name></member>
      <member refid="classunicore_1a0c2b0c3fffe564405122f21621aedb78" prot="public" virt="non-virtual"><scope>unicore</scope><name>spread_to_refs</name></member>
      <member refid="classunicore_1ad83b75f3c4afd1ab954d428be8f6f7d7" prot="public" virt="non-virtual"><scope>unicore</scope><name>start</name></member>
      <member refid="classunicore_1ab006e60df2a0c5bcac711ca458e5cbc4" prot="public" virt="non-virtual"><scope>unicore</scope><name>suggestrole</name></member>
      <member refid="classunicore_1adb0134644edf42ff41b84bca15e6e8ff" prot="public" virt="non-virtual"><scope>unicore</scope><name>symbol_to_string</name></member>
      <member refid="classunicore_1a0c35d9830c0c05c8f13be48b8cbdf236" prot="public" virt="non-virtual"><scope>unicore</scope><name>tactivate</name></member>
      <member refid="classunicore_1a54639a2c971d48407747efdda1b2f2ca" prot="public" virt="non-virtual"><scope>unicore</scope><name>tcomplete</name></member>
      <member refid="classunicore_1a725477908310816ec80cddbf733af04b" prot="public" virt="non-virtual"><scope>unicore</scope><name>tdeactivate</name></member>
      <member refid="classunicore_1a69785f67b90bf9b74e5a6c177cb0e249" prot="public" virt="non-virtual"><scope>unicore</scope><name>transfromgf</name></member>
      <member refid="classunicore_1a9464479eb5d28b6c7f9956319077b294" prot="public" virt="non-virtual"><scope>unicore</scope><name>undelshares</name></member>
      <member refid="classunicore_1a8f1c99385890a2fe4645c4af8e7fcfc7" prot="public" virt="non-virtual"><scope>unicore</scope><name>unicore</name></member>
      <member refid="classunicore_1adabf2b3d106784b146a047e35ceec410" prot="public" virt="non-virtual"><scope>unicore</scope><name>upgrade</name></member>
      <member refid="classunicore_1a5a31fb29df7ae2b8cbf51625b5c2bc21" prot="public" virt="non-virtual"><scope>unicore</scope><name>validate</name></member>
      <member refid="classunicore_1ac1ca3033e5f65695c938c3d0621e6bfb" prot="public" virt="non-virtual"><scope>unicore</scope><name>vote</name></member>
      <member refid="classunicore_1a25c98e5ea071940b6ab153d71a328a5c" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdraw</name></member>
      <member refid="classunicore_1a9c8a515eef8e3dd262372da54945047b" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdrawrepo</name></member>
      <member refid="classunicore_1a4dd6d244c3fac428419342dc782f53a1" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdrawsh</name></member>
      <member refid="classunicore_1a0a2ae5cf5fb3cdf3ba23f0948dd5c391" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdrbeninc</name></member>
      <member refid="classunicore_1a00bbf7a3172cc73697b3fcdfc19b7a4b" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdrdacinc</name></member>
      <member refid="classunicore_1a78e7d25bcf723965ab405b66327a23e7" prot="public" virt="non-virtual"><scope>unicore</scope><name>withpbenefit</name></member>
      <member refid="classunicore_1ad0eeced7a1cf17a871f0458eb327da6e" prot="public" virt="non-virtual"><scope>unicore</scope><name>withrbenefit</name></member>
      <member refid="classunicore_1ad330ad73fc269d1e37df00b7e9823441" prot="public" virt="non-virtual"><scope>unicore</scope><name>withrsegment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
