<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="d5/dea/classunicore" kind="class" language="C++" prot="public">
    <compoundname>unicore</compoundname>
    <basecompoundref prot="public" virt="non-virtual">eosio::contract</basecompoundref>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d5/dea/classunicore_1af1f9179d8b6a77f7222f7f734e9c5c6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>unicore::unicore</definition>
        <argsstring>(eosio::name receiver, eosio::name code, eosio::datastream&lt; const char * &gt; ds)</argsstring>
        <name>unicore</name>
        <qualifiedname>unicore::unicore</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>eosio::datastream&lt; const char * &gt;</type>
          <declname>ds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="58" column="9" bodyfile="include/core.hpp" bodystart="58" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1added73f623a6df0537a4daef1c46ed8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::apply</definition>
        <argsstring>(uint64_t receiver, uint64_t code, uint64_t action)</argsstring>
        <name>apply</name>
        <qualifiedname>unicore::apply</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>receiver</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="60" column="14"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a4106f772fa1e8c6199cba1dd028b4d9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::sellbalance</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t balance_id)</argsstring>
        <name>sellbalance</name>
        <qualifiedname>unicore::sellbalance</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод продажи баланса </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="66" column="15" bodyfile="src/core.cpp" bodystart="1939" bodyend="1975"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ad78ec4cb7cfdae094fbf20e5814aaf40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::cancelsellba</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t balance_id)</argsstring>
        <name>cancelsellba</name>
        <qualifiedname>unicore::cancelsellba</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод продажи баланса </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="67" column="15" bodyfile="src/core.cpp" bodystart="1988" bodyend="2026"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a6b7d4a19e6bbf88e9dd2ff7ff36491a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::pull</definition>
        <argsstring>(eosio::name host, eosio::name username, eosio::asset amount)</argsstring>
        <name>pull</name>
        <qualifiedname>unicore::pull</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="71" column="15" bodyfile="src/core.cpp" bodystart="564" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a93f28f6dc48f52400ab30810fcf8659d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::exittail</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t id)</argsstring>
        <name>exittail</name>
        <qualifiedname>unicore::exittail</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="72" column="15" bodyfile="src/core.cpp" bodystart="586" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ad66a0c294e0fff041ab4a1fd7111d364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::changemode</definition>
        <argsstring>(eosio::name host, eosio::name mode)</argsstring>
        <name>changemode</name>
        <qualifiedname>unicore::changemode</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Публичный метод включения сейла с хоста. Может быть использован только до вызова метода start при условии, что владелец контракта токена разрешил это. Активирует реализацию управляющего жетона из фонда владельца жетона в режиме финансового котла. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="74" column="15" bodyfile="src/core.cpp" bodystart="3841" bodyend="3853"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a30206473eb9672b7b67d0a85d2035ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::convert</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t balance_id)</argsstring>
        <name>convert</name>
        <qualifiedname>unicore::convert</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод обмена баланса на жетон распределения по текущему курсу из числа квантов раунда. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="77" column="15" bodyfile="src/core.cpp" bodystart="4262" bodyend="4362"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a8898e75bc9abe84fd78c15f9de3731f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setparams</definition>
        <argsstring>(eosio::name host, eosio::name chost, uint64_t size_of_pool, uint64_t quants_precision, uint64_t overlap, uint64_t profit_growth, uint64_t base_rate, uint64_t loss_percent, uint64_t compensator_percent, uint64_t pool_limit, uint64_t pool_timeout, uint64_t priority_seconds)</argsstring>
        <name>setparams</name>
        <qualifiedname>unicore::setparams</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>chost</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>size_of_pool</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>quants_precision</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>overlap</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>profit_growth</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>base_rate</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>loss_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>compensator_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_limit</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_timeout</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>priority_seconds</declname>
        </param>
        <briefdescription>
<para>Публичный метод установки параметров протокола двойной спирали Вызывается пользователем после базовой операции создания хоста и проведения оплаты. Так же вызывается при установке параметров дочернего хоста. Содержит алгоритм финансового ядра. Производит основные расчеты таблиц курсов и валидирует положительность бизнес-дохода. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Математическое ядро алгоритма курса двойной спирали.</para>
<para>Проверка бизнес-модели на положительный баланс. Остатка на балансе в любой момент должно быть достаточно для выплат всем проигравшим и всем победителям. Если это не так - протокол не позволит себя создать.</para>
<para>Установка таблиц курсов в область памяти хоста</para>
        </inbodydescription>
        <location file="include/core.hpp" line="81" column="15" bodyfile="src/core.cpp" bodystart="1552" bodyend="1734"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ad83b75f3c4afd1ab954d428be8f6f7d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::start</definition>
        <argsstring>(eosio::name host, eosio::name chost)</argsstring>
        <name>start</name>
        <qualifiedname>unicore::start</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>chost</declname>
        </param>
        <briefdescription>
<para>Публичный метод запуска хоста Метод необходимо вызвать для запуска хоста после установки параметров хоста. Добавляет первый цикл, два пула, переключает демонастративный флаг запуска и создает статистические объекты. Подписывается аккаунтом хоста. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="85" column="15" bodyfile="src/core.cpp" bodystart="1447" bodyend="1541"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a25c98e5ea071940b6ab153d71a328a5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdraw</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t balance_id)</argsstring>
        <name>withdraw</name>
        <qualifiedname>unicore::withdraw</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод возврата баланса протоколу. Вывод средств возможен только для полностью обновленных (актуальных) балансов. Производит обмен Юнитов на управляющий токен и выплачивает на аккаунт пользователя. </para>
        </briefdescription>
        <detaileddescription>
<para>Производит расчет реферальных вознаграждений, генерируемых выплатой, и отправляет их всем партнерам согласно установленной формы.</para>
<para>Производит финансовое распределение между управляющими компаниями и целевым фондом сообщества.</para>
<para>Каждый последующий пул, который участник проходит в качестве победителя, генеририрует бизнес-доход, который расчитывается исходя из того, что в текущий момент, средств всех проигравших полностью достаточно наа выплаты всем победителям с остатком. Этот остаток, в прапорции Юнитов пользователя и общего количества Юнитов в раунде, позволяет расчитать моментальную выплату, которая может быть изъята из системы при сохранении абсолютного балланса.</para>
<para>Изымаемая сумма из общего котла управляющих токенов, разделяется на три потока, определяемые двумя параметрами:<itemizedlist>
<listitem><para>Процент выплат на рефералов. Устанавливается в диапазоне от 0 до 100. Отсекает собой ровно ту часть пирога, которая уходит на выплаты по всем уровням реферальной структуры согласно ее формы.</para>
</listitem><listitem><para>Процент выплат на корпоративных управляющих. Устанавливается в диапазоне от 0 до 100.</para>
</listitem><listitem><para>Остаток от остатка распределяется в фонд целей сообщества.</para>
</listitem></itemizedlist>
</para>
<para>Таким образом, коэффициенты позволяют распределять единый системный фонд по окружности с тремя секторами, где каждый сектор есть фонд со своим назначением. <linebreak/>
</para>
<para>Например, если общий доход от движения баланса пользователя по спирали составляет 100 USD, а коэфициенты распределения Рефералов и Корпоративных Управляющих равняются соответственно по 0.5 (50%), то все рефералы получат по 33$, все управляющие получат по 33$, и еще 33$ попадет в фонд целей сообщества. 1$ останется в качестве комиссии округления на делении у протокола.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Номинал Номинал выплачивается если выполняется одно из условий:<itemizedlist>
<listitem><para>баланс куплен в одном из первых двух пулов, а текущий пул не выше второго;</para>
</listitem><listitem><para>баланс куплен в текущем пуле;</para>
</listitem><listitem><para>баланс куплен в последнем из возможных пулов;</para>
</listitem></itemizedlist>
</para>
<para>Выигрыш или проигрыш. Расчет производится на основе сравнения текущего цвета пула с цветом пула входа. При совпадении цветов - баланс выиграл. При несовпадении - проиграл.</para>
<para>Выигрыш. Инициирует распределение реферальных вознаграждений и выплаты во все фонды.</para>
<para>Все кванты победителей должны быть возвращены в пулы.</para>
        </inbodydescription>
        <location file="include/core.hpp" line="86" column="15" bodyfile="src/core.cpp" bodystart="3105" bodyend="3324"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a87baad04108855090bad593e2135f659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdrawsold</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t balance_id)</argsstring>
        <name>withdrawsold</name>
        <qualifiedname>unicore::withdrawsold</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод возврата баланса протоколу. Вывод средств возможен только для полностью обновленных (актуальных) балансов. Производит обмен Юнитов на управляющий токен и выплачивает на аккаунт пользователя. </para>
        </briefdescription>
        <detaileddescription>
<para>Производит расчет реферальных вознаграждений, генерируемых выплатой, и отправляет их всем партнерам согласно установленной формы.</para>
<para>Производит финансовое распределение между управляющими компаниями и целевым фондом сообщества.</para>
<para>Каждый последующий пул, который участник проходит в качестве победителя, генеририрует бизнес-доход, который расчитывается исходя из того, что в текущий момент, средств всех проигравших полностью достаточно наа выплаты всем победителям с остатком. Этот остаток, в прапорции Юнитов пользователя и общего количества Юнитов в раунде, позволяет расчитать моментальную выплату, которая может быть изъята из системы при сохранении абсолютного балланса.</para>
<para>Изымаемая сумма из общего котла управляющих токенов, разделяется на три потока, определяемые двумя параметрами:<itemizedlist>
<listitem><para>Процент выплат на рефералов. Устанавливается в диапазоне от 0 до 100. Отсекает собой ровно ту часть пирога, которая уходит на выплаты по всем уровням реферальной структуры согласно ее формы.</para>
</listitem><listitem><para>Процент выплат на корпоративных управляющих. Устанавливается в диапазоне от 0 до 100.</para>
</listitem><listitem><para>Остаток от остатка распределяется в фонд целей сообщества.</para>
</listitem></itemizedlist>
</para>
<para>Таким образом, коэффициенты позволяют распределять единый системный фонд по окружности с тремя секторами, где каждый сектор есть фонд со своим назначением. <linebreak/>
</para>
<para>Например, если общий доход от движения баланса пользователя по спирали составляет 100 USD, а коэфициенты распределения Рефералов и Корпоративных Управляющих равняются соответственно по 0.5 (50%), то все рефералы получат по 33$, все управляющие получат по 33$, и еще 33$ попадет в фонд целей сообщества. 1$ останется в качестве комиссии округления на делении у протокола.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="87" column="15" bodyfile="src/core.cpp" bodystart="3038" bodyend="3079"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a7c554fbaa488514c2fd09879a6b4c662" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::priorenter</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t balance_id)</argsstring>
        <name>priorenter</name>
        <qualifiedname>unicore::priorenter</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <briefdescription>
<para>Метод приоритетного входа в новый цикл. Доступен к использованию только при условии наличия предыдущего цикла, в котором участник имеет проигравший баланс. Позволяет зайти частью своего проигравшего баланса одновременно в два пула - первый и второй нового цикла. Использование приоритетного входа возможно только до истечения времени приоритета, которое начинается в момент запуска цикла и продолжается до истечения таймера приоритета. </para>
        </briefdescription>
        <detaileddescription>
<para>Метод позволяет проигравшим балансам предыдущего цикла перераспределиться в новом цикле развития так, чтобы быть в самом начале вращательного движения и тем самым, гарантировать выигрыш. В случае успеха исполнения метода, пользователь обменивает один свой старый проигравший баланс на два новых противоположных цветов.</para>
<para>В ходе исполнения метода решается арифметическая задача перераспределения, при которой вычисляется максимально возможная сумма входа для имеющегося баланса одновременно в два первых пула. Остаток от суммы, который невозможно распределить на новые пулы по причине нераздельности минимальной учетной единицы, возвращается пользователю переводом.</para>
<para>Приоритетный вход спроектирован таким образом, то если все проигравшие участники одновременно воспользуются им, то в точности 50% внутренней учетной единицы для первого и второго пула будет выкуплено.</para>
<para>TODO возможно расширение приоритетного входа до 100% от внутренней учетной единицы для первых двух пулов, а так же, продолжение приоритетного входа для всех последующих пулов.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="89" column="15" bodyfile="src/core.cpp" bodystart="499" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ac49cba08a940a6e04c02cd59d080546d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refreshbal</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t balance_id, uint64_t partrefresh)</argsstring>
        <name>refreshbal</name>
        <qualifiedname>unicore::refreshbal</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>partrefresh</declname>
        </param>
        <briefdescription>
<para>Публичный метод обновления баланса Пересчет баланса каждого пользователя происходит по его собственному действию. Обновление баланса приводит к пересчету доступной суммы для вывода. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Для расчетов выплат реферальных вознаграждений необходимо решить дифференциальное уравнение.</para>
        </inbodydescription>
        <location file="include/core.hpp" line="90" column="15" bodyfile="src/core.cpp" bodystart="2331" bodyend="2671"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a62e02b155f2cd8012d807e60dacd1ace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setstartdate</definition>
        <argsstring>(eosio::name host, eosio::time_point_sec start_at)</argsstring>
        <name>setstartdate</name>
        <qualifiedname>unicore::setstartdate</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::time_point_sec</type>
          <declname>start_at</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="92" column="15" bodyfile="src/core.cpp" bodystart="1420" bodyend="1439"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a6115ab90c58512801dd5a275991c6e23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::checkstatus</definition>
        <argsstring>(eosio::name host, eosio::name username)</argsstring>
        <name>checkstatus</name>
        <qualifiedname>unicore::checkstatus</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="93" column="15" bodyfile="src/conditions.cpp" bodystart="260" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a43103f3b9bdc5ed37f564cc10446549e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::init</definition>
        <argsstring>(uint64_t system_income)</argsstring>
        <name>init</name>
        <qualifiedname>unicore::init</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>system_income</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="101" column="15" bodyfile="src/core.cpp" bodystart="78" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a1ca7506ffee845732e8beedc1bd0a48b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refreshst</definition>
        <argsstring>(eosio::name username, eosio::name host)</argsstring>
        <name>refreshst</name>
        <qualifiedname>unicore::refreshst</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Публичный метод обновления состояния Проверяет пул на истечение во времени или завершение целого количества ядерных Юнитов. Запускает новый цикл или добавляет новый пул. </para>
        </briefdescription>
        <detaileddescription>
<para>//TODO устранить избыточность</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="103" column="15" bodyfile="src/core.cpp" bodystart="1925" bodyend="1927"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a46cd90e0a4f1b938d4548ca254782cfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setbadge</definition>
        <argsstring>(uint64_t id, eosio::name host, eosio::string caption, eosio::string description, eosio::string iurl, eosio::string pic, uint64_t total, uint64_t power)</argsstring>
        <name>setbadge</name>
        <qualifiedname>unicore::setbadge</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>caption</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>description</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>iurl</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>pic</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>total</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>power</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="106" column="15" bodyfile="src/badges.cpp" bodystart="3" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a40fa6e2fa9fcddf76ba73b261eae6fef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::giftbadge</definition>
        <argsstring>(eosio::name host, eosio::name to, uint64_t badge_id, eosio::string comment, bool netted, uint64_t goal_id, uint64_t task_id)</argsstring>
        <name>giftbadge</name>
        <qualifiedname>unicore::giftbadge</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>to</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>badge_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>netted</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="107" column="15" bodyfile="src/badges.cpp" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a6e7db779eb5836300fabe105012388c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::backbadge</definition>
        <argsstring>(eosio::name host, eosio::name from, uint64_t usbadge_id, eosio::string comment)</argsstring>
        <name>backbadge</name>
        <qualifiedname>unicore::backbadge</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>usbadge_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Метод возврата значка Может быть использован хостом для возврата выданного значка. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="108" column="15" bodyfile="src/badges.cpp" bodystart="166" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a18f2e74d2df77472a29c9143539d458c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::delbadge</definition>
        <argsstring>(eosio::name host, uint64_t badge_id)</argsstring>
        <name>delbadge</name>
        <qualifiedname>unicore::delbadge</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>badge_id</declname>
        </param>
        <briefdescription>
<para>Метод удаления значка </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">badge_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The badge identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="109" column="15" bodyfile="src/badges.cpp" bodystart="75" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a8bd2f03e84d9077693a7e0d6a7bcd7b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settcrbadge</definition>
        <argsstring>(eosio::name host, uint64_t badge_id)</argsstring>
        <name>settcrbadge</name>
        <qualifiedname>unicore::settcrbadge</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>badge_id</declname>
        </param>
        <briefdescription>
<para>Метод установки значка создателю действия </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">badge_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The badge identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="113" column="15" bodyfile="src/badges.cpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1abab6ddd4a167efde5f0e45a1ffd9dfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setcontent</definition>
        <argsstring>(eosio::name username, eosio::name type, eosio::name lang, eosio::string content)</argsstring>
        <name>setcontent</name>
        <qualifiedname>unicore::setcontent</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>lang</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>content</declname>
        </param>
        <briefdescription>
<para>Модуль CMS Позволяет каждому сообществу использовать веб-конструктор приложений UNI. </para>
        </briefdescription>
        <detaileddescription>
<para>Метод установки языковых файлов</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="116" column="15" bodyfile="src/cms.cpp" bodystart="12" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1af6aac321d5880fcb577ba00abea5c38f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmcontent</definition>
        <argsstring>(eosio::name username, eosio::name type)</argsstring>
        <name>rmcontent</name>
        <qualifiedname>unicore::rmcontent</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Метод удаления языкового файла </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="117" column="15" bodyfile="src/cms.cpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ad0188feae42e22b52afbb6e3c3f70c86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setcmsconfig</definition>
        <argsstring>(eosio::name username, eosio::string config)</argsstring>
        <name>setcmsconfig</name>
        <qualifiedname>unicore::setcmsconfig</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>config</declname>
        </param>
        <briefdescription>
<para>Метод установки CMS-конфига </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="118" column="15" bodyfile="src/cms.cpp" bodystart="52" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a75113bd9a43ae5f28c359eb1f641cc66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setgoal</definition>
        <argsstring>(eosio::name creator, eosio::name host, uint64_t parent_id, std::string title, std::string description, eosio::asset target, std::string meta)</argsstring>
        <name>setgoal</name>
        <qualifiedname>unicore::setgoal</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>parent_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>description</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>target</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Модуль целей. Использует долю потока эмиссии для финансирования целей сообщества. Каждый участник может предложить цель к финансированию. Суть и смысл цели ограничен только желаниями сообщества. Каждая цель должна пройти минимальный порог процента собранных голосов от держателей силы сообщества. Цели, прошедшие порог консенсуса сообщества, попадают в лист финансирования. Все цели в листе финансирования получают равный поток финансирования относительно друг друга. Финансирование поступает в объект баланса цели в момент перехода на каждый следующий пул, или напрямую из фонда сообщества по подписи архитектора. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para>Метод создания цели</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="121" column="15" bodyfile="src/goals.cpp" bodystart="20" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1acf83a7ccf1589f5a19b5ae7d48741abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::editgoal</definition>
        <argsstring>(eosio::name editor, eosio::name host, uint64_t goal_id, std::string title, std::string description, std::string meta)</argsstring>
        <name>editgoal</name>
        <qualifiedname>unicore::editgoal</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>editor</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>description</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Модуль целей. Использует долю потока эмиссии для финансирования целей сообщества. Каждый участник может предложить цель к финансированию. Суть и смысл цели ограничен только желаниями сообщества. Каждая цель должна пройти минимальный порог процента собранных голосов от держателей силы сообщества. Цели, прошедшие порог консенсуса сообщества, попадают в лист финансирования. Все цели в листе финансирования получают равный поток финансирования относительно друг друга. Финансирование поступает в объект баланса цели в момент перехода на каждый следующий пул, или напрямую из фонда сообщества по подписи архитектора. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para>Метод создания цели</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="122" column="15" bodyfile="src/goals.cpp" bodystart="124" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a969e75dd90699b53b75ab8482cbc49d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::dfundgoal</definition>
        <argsstring>(eosio::name architect, eosio::name host, uint64_t goal_id, eosio::asset amount, std::string comment)</argsstring>
        <name>dfundgoal</name>
        <qualifiedname>unicore::dfundgoal</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>architect</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Метод прямого финансирования цели Используется архитектором для финансирования цели из фонда </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="126" column="15" bodyfile="src/goals.cpp" bodystart="179" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1af6e32936bbe20a612c9348bf5f805982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::fundchildgoa</definition>
        <argsstring>(eosio::name architect, eosio::name host, uint64_t goal_id, eosio::asset amount)</argsstring>
        <name>fundchildgoa</name>
        <qualifiedname>unicore::fundchildgoa</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>architect</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Метод прямого финансирования родительской цели Используется архитектором для наполнения дочерней цели за счет баланса родительской цели </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="127" column="15" bodyfile="src/goals.cpp" bodystart="207" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a1ba1753b7dc4109e94dc7c4c9dbd5400" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setgcreator</definition>
        <argsstring>(eosio::name oldcreator, eosio::name newcreator, eosio::name host, uint64_t goal_id)</argsstring>
        <name>setgcreator</name>
        <qualifiedname>unicore::setgcreator</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>oldcreator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>newcreator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="129" column="15" bodyfile="src/goals.cpp" bodystart="234" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a2ee6a26c970b05e61c3753791a55dee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::gaccept</definition>
        <argsstring>(eosio::name host, uint64_t goal_id, uint64_t parent_goal_id, bool status)</argsstring>
        <name>gaccept</name>
        <qualifiedname>unicore::gaccept</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>parent_goal_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="131" column="15" bodyfile="src/goals.cpp" bodystart="251" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a2cc7c4ae8c6ea5e604d6666d37d11405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::gpause</definition>
        <argsstring>(eosio::name host, uint64_t goal_id)</argsstring>
        <name>gpause</name>
        <qualifiedname>unicore::gpause</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="132" column="15" bodyfile="src/goals.cpp" bodystart="279" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a5eb41b2064caedd44380c2c68b095a18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setbenefac</definition>
        <argsstring>(eosio::name host, uint64_t goal_id, eosio::name benefactor)</argsstring>
        <name>setbenefac</name>
        <qualifiedname>unicore::setbenefac</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>benefactor</declname>
        </param>
        <briefdescription>
<para>Метод прямого финансирования цели Используется архитектором для финансирования цели из фонда </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="133" column="15" bodyfile="src/goals.cpp" bodystart="153" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a9fd534e0b189439c6f18e99689911b3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::delgoal</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t goal_id)</argsstring>
        <name>delgoal</name>
        <qualifiedname>unicore::delgoal</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
<para>Метод удаления цели </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="135" column="15" bodyfile="src/goals.cpp" bodystart="299" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ac0e6bf94b8bfd28e08c364631a357d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::report</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t goal_id, std::string report)</argsstring>
        <name>report</name>
        <qualifiedname>unicore::report</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>report</declname>
        </param>
        <briefdescription>
<para>Метод создания отчета о завершенной цели </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="136" column="15" bodyfile="src/goals.cpp" bodystart="335" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ac31cf68445b14c4dbdea9684a0556f10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::check</definition>
        <argsstring>(eosio::name architect, eosio::name host, uint64_t goal_id)</argsstring>
        <name>check</name>
        <qualifiedname>unicore::check</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>architect</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
<para>Метод проверки отчета Отчет о достижении цели на текущий момент проверяется только архитектором. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="137" column="15" bodyfile="src/goals.cpp" bodystart="392" bodyend="426"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a4faa41a68505840e66f78e350412723c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::gwithdraw</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t goal_id)</argsstring>
        <name>gwithdraw</name>
        <qualifiedname>unicore::gwithdraw</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
<para>Метод вывода баланса цели Выводит доступный баланс цели на аккаунт создателя цели. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="138" column="15" bodyfile="src/goals.cpp" bodystart="529" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a621817942c7b2758963d4147170b3c60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::gsponsor</definition>
        <argsstring>(eosio::name hoperator, eosio::name host, eosio::name reciever, uint64_t goal_id, eosio::asset amount)</argsstring>
        <name>gsponsor</name>
        <qualifiedname>unicore::gsponsor</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>hoperator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>reciever</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Метод финансирования цели через оператора сообщества. Позволяет оператору сообщества расходовать баланс целей на перечисления прямым спонсорам. Используется в риверсной экономической модели, когда корневой токен сообщества является котировочным токеном силы сообщества, и накаким другим способом изначально не распределяется, кроме как на спонсоров целей (дефицитная ICO - модель). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="139" column="15" bodyfile="src/goals.cpp" bodystart="689" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1affa39993f35c8e2c8838a956c761cbcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setemi</definition>
        <argsstring>(eosio::name host, uint64_t percent, uint64_t gtop)</argsstring>
        <name>setemi</name>
        <qualifiedname>unicore::setemi</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
          <defname>hostname</defname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>gtop</declname>
        </param>
        <briefdescription>
<para>Метод установки скорости эмиссии и размера листа финансирования </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="140" column="15" bodyfile="src/goals.cpp" bodystart="502" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ad1ca7dd3eab26146ed184e3bda67f5b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::enablesale</definition>
        <argsstring>(eosio::name host, eosio::name token_contract, eosio::asset asset_on_sale, int64_t sale_shift, eosio::name sale_mode)</argsstring>
        <name>enablesale</name>
        <qualifiedname>unicore::enablesale</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>token_contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>asset_on_sale</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>sale_shift</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>sale_mode</declname>
        </param>
        <briefdescription>
<para>Публичный метод включения сейла с хоста. Может быть использован только до вызова метода start при условии, что владелец контракта токена разрешил это. Активирует реализацию управляющего жетона из фонда владельца жетона в режиме финансового котла. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="149" column="15" bodyfile="src/core.cpp" bodystart="3875" bodyend="3877"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a2b873bf336e3c8b5b6e0f9d1823b2497" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::addhostofund</definition>
        <argsstring>(uint64_t fund_id, eosio::name host)</argsstring>
        <name>addhostofund</name>
        <qualifiedname>unicore::addhostofund</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>fund_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Публичный метод подключения хоста к фонду </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="150" column="15" bodyfile="src/core.cpp" bodystart="3888" bodyend="3890"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a8474a6b0859f13d7283922d5f7c3cd0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmhosfrfund</definition>
        <argsstring>(uint64_t fund_id, eosio::name host)</argsstring>
        <name>rmhosfrfund</name>
        <qualifiedname>unicore::rmhosfrfund</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>fund_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="151" column="15" bodyfile="src/core.cpp" bodystart="3880" bodyend="3882"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a69785f67b90bf9b74e5a6c177cb0e249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::transfromgf</definition>
        <argsstring>(eosio::name to, eosio::name token_contract, eosio::asset quantity)</argsstring>
        <name>transfromgf</name>
        <qualifiedname>unicore::transfromgf</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>to</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>token_contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
<para>Публичный метод перевода из глобального фонда </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="161" column="15" bodyfile="src/core.cpp" bodystart="3866" bodyend="3868"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ac5b6ba6e6362cc73943265c750429fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setarch</definition>
        <argsstring>(eosio::name host, eosio::name architect)</argsstring>
        <name>setarch</name>
        <qualifiedname>unicore::setarch</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>architect</declname>
        </param>
        <briefdescription>
<para>Sets the architect. Устанавливает архитектора сообщества, обладающего полномочиями специальных действий. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="165" column="15" bodyfile="src/hosts.cpp" bodystart="35" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1aa33794e9a7b05c77c9c6eb7b8790902e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setconsensus</definition>
        <argsstring>(eosio::name host, uint64_t consensus_percent, bool voting_only_up)</argsstring>
        <name>setconsensus</name>
        <qualifiedname>unicore::setconsensus</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>consensus_percent</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>voting_only_up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="166" column="15" bodyfile="src/hosts.cpp" bodystart="466" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1adabf2b3d106784b146a047e35ceec410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::upgrade</definition>
        <argsstring>(eosio::name username, eosio::name platform, std::string title, std::string purpose, uint64_t total_shares, eosio::asset quote_amount, eosio::name quote_token_contract, eosio::asset root_token, eosio::name root_token_contract, bool voting_only_up, uint64_t consensus_percent, uint64_t referral_percent, uint64_t dacs_percent, uint64_t cfund_percent, uint64_t hfund_percent, std::vector&lt; uint64_t &gt; levels, uint64_t emission_percent, uint64_t gtop, std::string meta)</argsstring>
        <name>upgrade</name>
        <qualifiedname>unicore::upgrade</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>platform</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>purpose</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>total_shares</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quote_amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>quote_token_contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>root_token</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>root_token_contract</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>voting_only_up</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>consensus_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>referral_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>dacs_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>cfund_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hfund_percent</declname>
        </param>
        <param>
          <type>std::vector&lt; uint64_t &gt;</type>
          <declname>levels</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>emission_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>gtop</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Метод апгрейда аккаунта до статуса сообщества Принимает ряд параметров, такие как процент консенсуса, реферальный процент, уровни вознаграждений финансовых партнеров, корпоративный процент, а так же параметры рынка силы. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="168" column="15" bodyfile="src/hosts.cpp" bodystart="489" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1abae3b92d93cbbbd1058005639975f09d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::cchildhost</definition>
        <argsstring>(eosio::name parent_host, eosio::name chost)</argsstring>
        <name>cchildhost</name>
        <qualifiedname>unicore::cchildhost</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>parent_host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>chost</declname>
        </param>
        <briefdescription>
<para>Метод создания дочернего хоста Позволяет сообществу на границе циклов изменять параметры финансового ядра, распологая их в области памяти аккаунта дочернего хоста. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="169" column="15" bodyfile="src/hosts.cpp" bodystart="649" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1abb38bcc39c9e3ca74f955944a84274fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::compensator</definition>
        <argsstring>(eosio::name host, uint64_t compensator_percent)</argsstring>
        <name>compensator</name>
        <qualifiedname>unicore::compensator</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>compensator_percent</declname>
        </param>
        <briefdescription>
<para>Установка компенсатора рисков Устанавливает компенсатор риска для системного жетона </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="170" column="15" bodyfile="src/hosts.cpp" bodystart="55" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a38d070fb8067b91799456f1472ced47d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::edithost</definition>
        <argsstring>(eosio::name architect, eosio::name host, eosio::name platform, eosio::string title, eosio::string purpose, eosio::string manifest, eosio::name power_market_id, eosio::string meta)</argsstring>
        <name>edithost</name>
        <qualifiedname>unicore::edithost</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>architect</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>platform</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>purpose</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>manifest</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>power_market_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Метод редактирования информации о хосте </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="173" column="15" bodyfile="src/hosts.cpp" bodystart="766" bodyend="838"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ac4b0a6600a52794f394271c8c7aea78e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::fixs</definition>
        <argsstring>(eosio::name host, eosio::name username)</argsstring>
        <name>fixs</name>
        <qualifiedname>unicore::fixs</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="174" column="15" bodyfile="src/core.cpp" bodystart="1094" bodyend="1417"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a61965d7a5c449487b565b444659d6cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settype</definition>
        <argsstring>(eosio::name host, eosio::name type)</argsstring>
        <name>settype</name>
        <qualifiedname>unicore::settype</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="175" column="15" bodyfile="src/core.cpp" bodystart="99" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a9ebdfe87e84d1a283143d274f2337e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setlevels</definition>
        <argsstring>(eosio::name host, std::vector&lt; uint64_t &gt; levels)</argsstring>
        <name>setlevels</name>
        <qualifiedname>unicore::setlevels</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>std::vector&lt; uint64_t &gt;</type>
          <declname>levels</declname>
        </param>
        <briefdescription>
<para>Метод установки уровней вознаграждений </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="176" column="15" bodyfile="src/hosts.cpp" bodystart="438" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1af4454491cb629dc007eed9b6febdd161" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settiming</definition>
        <argsstring>(eosio::name host, uint64_t pool_timeout, uint64_t priority_seconds)</argsstring>
        <name>settiming</name>
        <qualifiedname>unicore::settiming</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_timeout</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>priority_seconds</declname>
        </param>
        <briefdescription>
<para>Метод редактирования времени </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="181" column="15" bodyfile="src/hosts.cpp" bodystart="721" bodyend="739"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a2b63d1aac35b533f122286943a54db18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setflows</definition>
        <argsstring>(eosio::name host, uint64_t ref_percent, uint64_t dacs_percent, uint64_t cfund_percent, uint64_t hfund_percent)</argsstring>
        <name>setflows</name>
        <qualifiedname>unicore::setflows</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>ref_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>dacs_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>cfund_percent</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>hfund_percent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="182" column="15" bodyfile="src/hosts.cpp" bodystart="742" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ad7d827f78709c7ea5a4d72b864e356b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refrollback</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t balance_id)</argsstring>
        <name>refrollback</name>
        <qualifiedname>unicore::refrollback</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="184" column="15" bodyfile="src/core.cpp" bodystart="3635" bodyend="3649"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a1713b099515838ad2e42391f4dd03b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmben</definition>
        <argsstring>(eosio::name creator, eosio::name username, eosio::name host, uint64_t goal_id)</argsstring>
        <name>rmben</name>
        <qualifiedname>unicore::rmben</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="189" column="15" bodyfile="src/goals.cpp" bodystart="586" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a4c8df6c80a48d2a6f8a73469a470ec2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::addben</definition>
        <argsstring>(eosio::name creator, eosio::name username, eosio::name host, uint64_t goal_id, uint64_t weight)</argsstring>
        <name>addben</name>
        <qualifiedname>unicore::addben</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>weight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="190" column="15" bodyfile="src/goals.cpp" bodystart="581" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a0a2ae5cf5fb3cdf3ba23f0948dd5c391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdrbeninc</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t goal_id)</argsstring>
        <name>withdrbeninc</name>
        <qualifiedname>unicore::withdrbeninc</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="191" column="15" bodyfile="src/goals.cpp" bodystart="576" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1aabd42ff2a6dcac81d487e65b0bf5dda6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::addvac</definition>
        <argsstring>(uint64_t id, bool is_edit, eosio::name creator, eosio::name host, eosio::name limit_type, eosio::asset income_limit, uint64_t weight, std::string title, std::string descriptor)</argsstring>
        <name>addvac</name>
        <qualifiedname>unicore::addvac</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_edit</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>limit_type</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>income_limit</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="194" column="15" bodyfile="src/hosts.cpp" bodystart="94" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a756863a6910963e79adbb3bfcdf7ba47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmvac</definition>
        <argsstring>(eosio::name host, uint64_t id)</argsstring>
        <name>rmvac</name>
        <qualifiedname>unicore::rmvac</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="195" column="15" bodyfile="src/hosts.cpp" bodystart="175" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a728bf4c6d03c63fa2969a3effe312fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::addvprop</definition>
        <argsstring>(uint64_t id, bool is_edit, eosio::name creator, eosio::name host, uint64_t vac_id, uint64_t weight, std::string why_me, std::string contacts)</argsstring>
        <name>addvprop</name>
        <qualifiedname>unicore::addvprop</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_edit</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vac_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>why_me</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>contacts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="197" column="15" bodyfile="src/hosts.cpp" bodystart="136" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1adb6489dbbbb032b012f3faa9e8ba963f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmvprop</definition>
        <argsstring>(eosio::name host, uint64_t vprop_id)</argsstring>
        <name>rmvprop</name>
        <qualifiedname>unicore::rmvprop</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vprop_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="198" column="15" bodyfile="src/hosts.cpp" bodystart="234" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a55e754af41251b55a9c6b1cfe0f0f8c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::approvevac</definition>
        <argsstring>(eosio::name host, uint64_t vac_id)</argsstring>
        <name>approvevac</name>
        <qualifiedname>unicore::approvevac</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vac_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="200" column="15" bodyfile="src/hosts.cpp" bodystart="192" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1afcacb23342b138f05740e3bd57d03fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::apprvprop</definition>
        <argsstring>(eosio::name host, uint64_t vprop_id)</argsstring>
        <name>apprvprop</name>
        <qualifiedname>unicore::apprvprop</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vprop_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="201" column="15" bodyfile="src/hosts.cpp" bodystart="206" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ac6f84b754aa586043376617165f90eca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::adddac</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t weight, eosio::name limit_type, eosio::asset income_limit, std::string title, std::string descriptor)</argsstring>
        <name>adddac</name>
        <qualifiedname>unicore::adddac</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>limit_type</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>income_limit</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="204" column="15" bodyfile="src/core.cpp" bodystart="2934" bodyend="2985"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a1a76e2539a42f80b8ac6f514305665c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmdac</definition>
        <argsstring>(eosio::name username, eosio::name host)</argsstring>
        <name>rmdac</name>
        <qualifiedname>unicore::rmdac</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="205" column="15" bodyfile="src/core.cpp" bodystart="2987" bodyend="3010"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ab006e60df2a0c5bcac711ca458e5cbc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::suggestrole</definition>
        <argsstring>(eosio::name username, std::string title, std::string descriptor)</argsstring>
        <name>suggestrole</name>
        <qualifiedname>unicore::suggestrole</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="207" column="15" bodyfile="src/core.cpp" bodystart="4241" bodyend="4244"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a00bbf7a3172cc73697b3fcdfc19b7a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdrdacinc</definition>
        <argsstring>(eosio::name username, eosio::name host)</argsstring>
        <name>withdrdacinc</name>
        <qualifiedname>unicore::withdrdacinc</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="221" column="15" bodyfile="src/core.cpp" bodystart="2888" bodyend="2929"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a3a1fde814fc862b339230cfb85505145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setwebsite</definition>
        <argsstring>(eosio::name host, eosio::name ahostname, eosio::string website, eosio::name type, std::string meta)</argsstring>
        <name>setwebsite</name>
        <qualifiedname>unicore::setwebsite</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>ahostname</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>website</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="222" column="15" bodyfile="src/hosts.cpp" bodystart="370" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ab1e9b13cec99a231f1c6a71e3edc37c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmahost</definition>
        <argsstring>(eosio::name host, eosio::name ahostname)</argsstring>
        <name>rmahost</name>
        <qualifiedname>unicore::rmahost</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>ahostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="224" column="15" bodyfile="src/hosts.cpp" bodystart="339" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a1f73391b2c692e2c97ca675333aee0ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setahost</definition>
        <argsstring>(eosio::name host, eosio::name ahostname)</argsstring>
        <name>setahost</name>
        <qualifiedname>unicore::setahost</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>ahostname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="225" column="15" bodyfile="src/hosts.cpp" bodystart="258" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1abf1dd4d893faaa4851adced7cfa7770c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::closeahost</definition>
        <argsstring>(eosio::name host)</argsstring>
        <name>closeahost</name>
        <qualifiedname>unicore::closeahost</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="226" column="15" bodyfile="src/hosts.cpp" bodystart="303" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a339ec2fd85cf7ddd182a7e41d0f66f66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::openahost</definition>
        <argsstring>(eosio::name host)</argsstring>
        <name>openahost</name>
        <qualifiedname>unicore::openahost</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="227" column="15" bodyfile="src/hosts.cpp" bodystart="315" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a1d513eaa3bf7901c0e15f6eb29ec2248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withrbalance</definition>
        <argsstring>(eosio::name username, eosio::name host)</argsstring>
        <name>withrbalance</name>
        <qualifiedname>unicore::withrbalance</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Метод вывода остатка партнерского финансового потока withdraw power quant (withpowerun) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="253" column="15" bodyfile="src/ref.cpp" bodystart="71" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a8f13b428c3709df192313619de467bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setwithdrwal</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::string wallet)</argsstring>
        <name>setwithdrwal</name>
        <qualifiedname>unicore::setwithdrwal</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>wallet</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="254" column="15" bodyfile="src/ref.cpp" bodystart="4" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a52383862f9906901d50df26866929b42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::cancrefwithd</definition>
        <argsstring>(eosio::name host, uint64_t id, eosio::string comment)</argsstring>
        <name>cancrefwithd</name>
        <qualifiedname>unicore::cancrefwithd</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="256" column="15" bodyfile="src/ref.cpp" bodystart="38" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a2572b07703cf4bf093bf6efe97d43d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::complrefwith</definition>
        <argsstring>(eosio::name host, uint64_t id, eosio::string comment)</argsstring>
        <name>complrefwith</name>
        <qualifiedname>unicore::complrefwith</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="257" column="15" bodyfile="src/ref.cpp" bodystart="20" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a6610107dbd6899f308a9a82eb0a564b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::dispmarket</definition>
        <argsstring>(eosio::name host)</argsstring>
        <name>dispmarket</name>
        <qualifiedname>unicore::dispmarket</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Disable power market. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="259" column="15" bodyfile="src/shares.cpp" bodystart="879" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a7b2388eda0fc5b96b121442a7aa639fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::enpmarket</definition>
        <argsstring>(eosio::name host)</argsstring>
        <name>enpmarket</name>
        <qualifiedname>unicore::enpmarket</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
<para>Enable power market. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">status</parametername>
</parameternamelist>
<parameterdescription>
<para>The status </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="260" column="15" bodyfile="src/shares.cpp" bodystart="901" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a1c942e650452def47c1bf266d194bcde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::emitquote</definition>
        <argsstring>(eosio::name host, eosio::asset amount, eosio::name contract)</argsstring>
        <name>emitquote</name>
        <qualifiedname>unicore::emitquote</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>contract</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="262" column="15" bodyfile="src/shares.cpp" bodystart="81" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ac6bd8e8450d3d3d2388b1c211b7c4fc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::emitpower</definition>
        <argsstring>(eosio::name host, eosio::name username, int64_t user_shares, bool is_change)</argsstring>
        <name>emitpower</name>
        <qualifiedname>unicore::emitpower</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>user_shares</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_change</declname>
        </param>
        <briefdescription>
<para>Метод эмиссии силы с аукциона </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="263" column="15" bodyfile="src/shares.cpp" bodystart="136" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1aeeedb6c7a52c952b51bb4ff112629071" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::emitpower2</definition>
        <argsstring>(eosio::name host, uint64_t goal_id, uint64_t shares)</argsstring>
        <name>emitpower2</name>
        <qualifiedname>unicore::emitpower2</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Метод эмиссии силы с аукциона на цель </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="264" column="15" bodyfile="src/shares.cpp" bodystart="195" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ac6f27ab917494d9500648b5586d54365" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::emittomarket</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t user_shares, eosio::asset amount)</argsstring>
        <name>emittomarket</name>
        <qualifiedname>unicore::emittomarket</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>user_shares</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="265" column="15" bodyfile="src/shares.cpp" bodystart="92" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ad0eeced7a1cf17a871f0458eb327da6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withrbenefit</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t id)</argsstring>
        <name>withrbenefit</name>
        <qualifiedname>unicore::withrbenefit</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Метод вывода партнерского финансового потока withdraw power quant (withpowerun) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="266" column="15" bodyfile="src/ref.cpp" bodystart="109" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a81fed612b49e04c2c369d1151cf0b2c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withpbenefit</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t log_id)</argsstring>
        <name>withpbenefit</name>
        <qualifiedname>unicore::withpbenefit</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>log_id</declname>
        </param>
        <briefdescription>
<para>Метод вывода силового финансового потока withdraw power quant (withpowerun) Позволяет вывести часть финансового потока, направленного на держателя силы </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="267" column="15" bodyfile="src/shares.cpp" bodystart="395" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ada81287b3256f24da040a25861bc497e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refreshpu</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t log_id)</argsstring>
        <name>refreshpu</name>
        <qualifiedname>unicore::refreshpu</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>log_id</declname>
        </param>
        <briefdescription>
<para>Метод обновления силового финансового потока </para>
        </briefdescription>
        <detaileddescription>
<para>Позволяет обновить доступную часть финансового потока, направленного на держателя силы, а так же собрать доступные реферальные балансы в один объект </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="268" column="15" bodyfile="src/shares.cpp" bodystart="496" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a790c1a22331df2bd9e7f9b9094de7dfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refreshsh</definition>
        <argsstring>(eosio::name owner, uint64_t id)</argsstring>
        <name>refreshsh</name>
        <qualifiedname>unicore::refreshsh</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Метод обновления вестинг-баланса. <linebreak/>
 Обновляет вестинг-баланс до актуальных параметров продолжительности. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="269" column="15" bodyfile="src/shares.cpp" bodystart="330" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a4dd6d244c3fac428419342dc782f53a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdrawsh</definition>
        <argsstring>(eosio::name owner, uint64_t id)</argsstring>
        <name>withdrawsh</name>
        <qualifiedname>unicore::withdrawsh</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Вывод вестинг-баланса Обеспечивает вывод доступных средств из вестинг-баланса. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="270" column="15" bodyfile="src/shares.cpp" bodystart="361" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a237ab7bb223b33ba87375e177ced89a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::sellshares</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t shares)</argsstring>
        <name>sellshares</name>
        <qualifiedname>unicore::sellshares</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Публичный метод продажи силы рынку за котировочный токен </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="271" column="15" bodyfile="src/shares.cpp" bodystart="233" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a9464479eb5d28b6c7f9956319077b294" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::undelshares</definition>
        <argsstring>(eosio::name from, eosio::name reciever, eosio::name host, uint64_t shares)</argsstring>
        <name>undelshares</name>
        <qualifiedname>unicore::undelshares</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>reciever</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Метод возврата делегированной силы </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="272" column="15" bodyfile="src/shares.cpp" bodystart="1036" bodyend="1080"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a55bb8fbaa4a87f889073ace85359847c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settask</definition>
        <argsstring>(eosio::name host, eosio::name creator, std::string permlink, uint64_t goal_id, uint64_t priority, eosio::string title, eosio::string data, eosio::asset requested, bool is_public, eosio::name doer, eosio::asset for_each, bool with_badge, uint64_t badge_id, bool is_batch, uint64_t parent_batch_id, bool is_regular, std::vector&lt; uint64_t &gt; calendar, eosio::time_point_sec start_at, eosio::time_point_sec expired_at, std::string meta)</argsstring>
        <name>settask</name>
        <qualifiedname>unicore::settask</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>creator</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>permlink</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>priority</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>title</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>data</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>requested</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_public</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>for_each</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_badge</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>badge_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_batch</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>parent_batch_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_regular</declname>
        </param>
        <param>
          <type>std::vector&lt; uint64_t &gt;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type>eosio::time_point_sec</type>
          <declname>start_at</declname>
        </param>
        <param>
          <type>eosio::time_point_sec</type>
          <declname>expired_at</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Модуль задач Задачи есть составляющие части достижения любой цели. Постановка задач осуществляется только в рамках целей. Задачи могут быть </para>
        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>публичными, т.е. достуными к исполнению каждым участником сообщества,</para>
</listitem><listitem><para>приватными, т.е. доступными к исполнению только внутренним управляющим командам.</para>
</listitem></itemizedlist>
</para>
<para>Публичный метод создания задачи Может использовать только аккаунт хоста на текущий момент.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="278" column="15" bodyfile="src/tasks.cpp" bodystart="167" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ae8ca388e55f11d3c32430edbaabcf7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::fundtask</definition>
        <argsstring>(eosio::name host, uint64_t task_id, eosio::asset amount, eosio::string comment)</argsstring>
        <name>fundtask</name>
        <qualifiedname>unicore::fundtask</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Публичный метод фондирования задачи Исполняется хостом для пополнения баланса задачи из доступного баланса цели. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="279" column="15" bodyfile="src/tasks.cpp" bodystart="375" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a0c35d9830c0c05c8f13be48b8cbdf236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::tactivate</definition>
        <argsstring>(eosio::name host, uint64_t task_id)</argsstring>
        <name>tactivate</name>
        <qualifiedname>unicore::tactivate</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Метод активации задачи Вызывается хостом для активации выполнения поставленной задачи. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="280" column="15" bodyfile="src/tasks.cpp" bodystart="709" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a725477908310816ec80cddbf733af04b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::tdeactivate</definition>
        <argsstring>(eosio::name host, uint64_t task_id)</argsstring>
        <name>tdeactivate</name>
        <qualifiedname>unicore::tdeactivate</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод деактивации задачи Применимо для публичных задач, когда поставленная цель достигнута или недостижима. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="281" column="15" bodyfile="src/tasks.cpp" bodystart="734" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a54639a2c971d48407747efdda1b2f2ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::tcomplete</definition>
        <argsstring>(eosio::name host, uint64_t task_id)</argsstring>
        <name>tcomplete</name>
        <qualifiedname>unicore::tcomplete</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод деактивации задачи Применимо для публичных задач, когда поставленная цель достигнута или недостижима. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="283" column="15" bodyfile="src/tasks.cpp" bodystart="760" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1aff7586ddb285e938d5228562eb459234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setpgoal</definition>
        <argsstring>(eosio::name host, uint64_t task_id, uint64_t goal_id)</argsstring>
        <name>setpgoal</name>
        <qualifiedname>unicore::setpgoal</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
<para>Метод установки родительской цели </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="285" column="15" bodyfile="src/tasks.cpp" bodystart="454" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a4ff597c20fe7071fa4d48a1e6fb4e654" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setdoer</definition>
        <argsstring>(eosio::name host, uint64_t task_id, eosio::name doer)</argsstring>
        <name>setdoer</name>
        <qualifiedname>unicore::setdoer</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <briefdescription>
<para>Метод установки исполнителя </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="286" column="15" bodyfile="src/tasks.cpp" bodystart="484" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ab3fd8bba8c576e2966c8db8efbb30ed9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setpriority</definition>
        <argsstring>(eosio::name host, uint64_t task_id, uint64_t priority)</argsstring>
        <name>setpriority</name>
        <qualifiedname>unicore::setpriority</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>priority</declname>
        </param>
        <briefdescription>
<para>Метод ручной валидации задачи </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="288" column="15" bodyfile="src/tasks.cpp" bodystart="646" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a5a31fb29df7ae2b8cbf51625b5c2bc21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::validate</definition>
        <argsstring>(eosio::name host, uint64_t task_id, uint64_t goal_id, eosio::name doer)</argsstring>
        <name>validate</name>
        <qualifiedname>unicore::validate</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <briefdescription>
<para>Метод ручной валидации задачи </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="290" column="15" bodyfile="src/tasks.cpp" bodystart="671" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a799e41649cd9bab8a1a9a9c41822925b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::jointask</definition>
        <argsstring>(eosio::name host, uint64_t task_id, eosio::name doer, std::string comment)</argsstring>
        <name>jointask</name>
        <qualifiedname>unicore::jointask</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Метод предложения себя как исполнителя задачи </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="291" column="15" bodyfile="src/tasks.cpp" bodystart="571" bodyend="612"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a4d4a35a4c18d428c7e70ff7096cfd47d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::canceljtask</definition>
        <argsstring>(eosio::name host, uint64_t task_id, eosio::name doer)</argsstring>
        <name>canceljtask</name>
        <qualifiedname>unicore::canceljtask</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <briefdescription>
<para>Метод предложения отклонения заявки деятеля </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="292" column="15" bodyfile="src/tasks.cpp" bodystart="519" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a07802302c610d2dc17f77a3019b81838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settaskmeta</definition>
        <argsstring>(eosio::name host, uint64_t task_id, std::string meta)</argsstring>
        <name>settaskmeta</name>
        <qualifiedname>unicore::settaskmeta</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>meta</declname>
        </param>
        <briefdescription>
<para>Метод ручной валидации задачи </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="294" column="15" bodyfile="src/tasks.cpp" bodystart="620" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a85136296400d6c3654bc80fcdb835bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setinctask</definition>
        <argsstring>(eosio::name username, uint64_t income_id, bool with_badge, uint64_t my_goal_id, uint64_t my_badge_id)</argsstring>
        <name>setinctask</name>
        <qualifiedname>unicore::setinctask</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>income_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>with_badge</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>my_goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>my_badge_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="301" column="15" bodyfile="src/tasks.cpp" bodystart="2" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a09d7d2d602069a26875aa1eee250d5f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::deltask</definition>
        <argsstring>(eosio::name host, uint64_t task_id)</argsstring>
        <name>deltask</name>
        <qualifiedname>unicore::deltask</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Метод удаления задачи Вызывается хостом для удаления поставленной задачи. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="305" column="15" bodyfile="src/tasks.cpp" bodystart="413" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ab10a203c3d6c37fd1cb71a9110c62e8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::paydebt</definition>
        <argsstring>(eosio::name host, uint64_t goal_id)</argsstring>
        <name>paydebt</name>
        <qualifiedname>unicore::paydebt</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
<para>Метод выплаты долга по цели из числа available в счет объектов долга </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The new value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="306" column="15" bodyfile="src/goals.cpp" bodystart="439" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a5fe24aa5ccba7c0c9e94e6a2728e9717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setreport</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t task_id, eosio::string data, uint64_t duration_secs, eosio::asset asset_per_hour)</argsstring>
        <name>setreport</name>
        <qualifiedname>unicore::setreport</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>duration_secs</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>asset_per_hour</declname>
        </param>
        <briefdescription>
<para>Публичный метод создания отчета о выполненной задаче Применяется исполнителем задачи для того, чтобы отправить отчет на проверку. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="308" column="15" bodyfile="src/tasks.cpp" bodystart="788" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ad041a75ade13b77f67f54c99f7ca7d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::editreport</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t report_id, eosio::string data)</argsstring>
        <name>editreport</name>
        <qualifiedname>unicore::editreport</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Публиный метод редактирования отчета В случае, если отчет не принят, участник получает возможность отредактировать свой отчет и выслать его на проверку повторно. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="309" column="15" bodyfile="src/tasks.cpp" bodystart="922" bodyend="940"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a765b3c6b36dc26922fec8c1236e3d154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::approver</definition>
        <argsstring>(eosio::name host, uint64_t report_id, eosio::string comment)</argsstring>
        <name>approver</name>
        <qualifiedname>unicore::approver</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Публичный метод одобрения отчета Используется хостом для того, чтобы принять задачу как выполненную и выдать вознаграждение / награду в виде значка. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="310" column="15" bodyfile="src/tasks.cpp" bodystart="982" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a403175c6abbcf360d36ec0259bccc109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::disapprover</definition>
        <argsstring>(eosio::name host, uint64_t report_id, eosio::string comment)</argsstring>
        <name>disapprover</name>
        <qualifiedname>unicore::disapprover</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
<para>Публичный метод отклонения отчета </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="311" column="15" bodyfile="src/tasks.cpp" bodystart="1207" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a4f00e24c90f922c4361338cc2c33e90b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::delreport</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t report_id)</argsstring>
        <name>delreport</name>
        <qualifiedname>unicore::delreport</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <briefdescription>
<para>Публиный метод удаления отчета В случае, если действие считается завершенным, отчёт может удалить участник или хост </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="312" column="15" bodyfile="src/tasks.cpp" bodystart="949" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a9c8a515eef8e3dd262372da54945047b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::withdrawrepo</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t report_id)</argsstring>
        <name>withdrawrepo</name>
        <qualifiedname>unicore::withdrawrepo</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод вывода баланса отчёта </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="314" column="15" bodyfile="src/tasks.cpp" bodystart="1233" bodyend="1286"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ada9bc4ba6623c0013d07688ea015bdd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::distrepo</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t report_id)</argsstring>
        <name>distrepo</name>
        <qualifiedname>unicore::distrepo</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <briefdescription>
<para>Публичный метод обновления баланса отчёта при распределении баланса цели </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="315" column="15" bodyfile="src/tasks.cpp" bodystart="1296" bodyend="1342"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ac1ca3033e5f65695c938c3d0621e6bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::vote</definition>
        <argsstring>(eosio::name voter, eosio::name host, uint64_t goal_id, bool up)</argsstring>
        <name>vote</name>
        <qualifiedname>unicore::vote</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="319" column="15" bodyfile="src/voting.cpp" bodystart="70" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ace8526f2178dd5662a3d96fa1b9b6c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rvote</definition>
        <argsstring>(eosio::name voter, eosio::name host, uint64_t report_id, bool up)</argsstring>
        <name>rvote</name>
        <qualifiedname>unicore::rvote</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>report_id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>up</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="320" column="15" bodyfile="src/voting.cpp" bodystart="188" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a7b973d2c279fca2fa0cc08c35ebf1abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setcondition</definition>
        <argsstring>(eosio::name host, eosio::string key, uint64_t value)</argsstring>
        <name>setcondition</name>
        <qualifiedname>unicore::setcondition</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="325" column="15" bodyfile="src/conditions.cpp" bodystart="270" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a624a721f564fd28c295bdeef482bacc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmcondition</definition>
        <argsstring>(eosio::name host, uint64_t key)</argsstring>
        <name>rmcondition</name>
        <qualifiedname>unicore::rmcondition</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="326" column="15" bodyfile="src/conditions.cpp" bodystart="295" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1adb0134644edf42ff41b84bca15e6e8ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string unicore::symbol_to_string</definition>
        <argsstring>(eosio::asset val) const</argsstring>
        <name>symbol_to_string</name>
        <qualifiedname>unicore::symbol_to_string</qualifiedname>
        <param>
          <type>eosio::asset</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Структура хоста </para>
        </briefdescription>
        <detaileddescription>
<para>Returns a string representation of an asset.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation of the asset. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="341" column="21" bodyfile="src/hosts.cpp" bodystart="16" bodyend="27"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d5/dea/classunicore_1af46a364466899a3d5b0721e91752e80f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::cut_tail</definition>
        <argsstring>(uint64_t current_pool_id, eosio::name host)</argsstring>
        <name>cut_tail</name>
        <qualifiedname>unicore::cut_tail</qualifiedname>
        <param>
          <type>uint64_t</type>
          <declname>current_pool_id</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="64" column="21" bodyfile="src/core.cpp" bodystart="608" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a6a16c00718366ac4b6ed6c28e4a7f44f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::buybalance</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t balance_id, eosio::asset amount, eosio::name contract)</argsstring>
        <name>buybalance</name>
        <qualifiedname>unicore::buybalance</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>balance_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>contract</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="69" column="21" bodyfile="src/core.cpp" bodystart="2029" bodyend="2173"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a739255f27ec8bb084f76fcb8cd5c33d8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eosio::asset</type>
        <definition>eosio::asset unicore::convert_to_power</definition>
        <argsstring>(eosio::asset quantity, eosio::name host)</argsstring>
        <name>convert_to_power</name>
        <qualifiedname>unicore::convert_to_power</qualifiedname>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="76" column="29" bodyfile="src/core.cpp" bodystart="4376" bodyend="4379"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1aae7a94db6860df276fd7821044144a3e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eosio::asset</type>
        <definition>eosio::asset unicore::calculate_asset_from_power</definition>
        <argsstring>(eosio::asset quantity, eosio::name host)</argsstring>
        <name>calculate_asset_from_power</name>
        <qualifiedname>unicore::calculate_asset_from_power</qualifiedname>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="79" column="29" bodyfile="src/core.cpp" bodystart="4248" bodyend="4251"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a6e184d7fb717ae159b2efe6bed7d3171" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool unicore::get_status_expiration</definition>
        <argsstring>(eosio::name host, eosio::name username)</argsstring>
        <name>get_status_expiration</name>
        <qualifiedname>unicore::get_status_expiration</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="95" column="21" bodyfile="src/conditions.cpp" bodystart="51" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a4f4a69c310c073c6cf1ebf41f2c210e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::pay_for_upgrade</definition>
        <argsstring>(eosio::name username, eosio::asset amount, eosio::name code)</argsstring>
        <name>pay_for_upgrade</name>
        <qualifiedname>unicore::pay_for_upgrade</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Метод оплаты комиссии создания дочернего хоста </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="97" column="21" bodyfile="src/hosts.cpp" bodystart="692" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a8703f9141c36861284ca003a348b61d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::refresh_state</definition>
        <argsstring>(eosio::name host)</argsstring>
        <name>refresh_state</name>
        <qualifiedname>unicore::refresh_state</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="99" column="21" bodyfile="src/core.cpp" bodystart="1831" bodyend="1915"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a8cdb743e8708845d4a6064d43400d415" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::giftbadge_action</definition>
        <argsstring>(eosio::name host, eosio::name to, uint64_t badge_id, eosio::string comment, bool netted, bool own, uint64_t goal_id, uint64_t task_id)</argsstring>
        <name>giftbadge_action</name>
        <qualifiedname>unicore::giftbadge_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>to</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>badge_id</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>comment</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>netted</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>own</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
<para>Метод передачи значка награждаемому </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">to</parametername>
</parameternamelist>
<parameterdescription>
<para>{ parameter_description } </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">badge_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The badge identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">comment</parametername>
</parameternamelist>
<parameterdescription>
<para>The comment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="111" column="21" bodyfile="src/badges.cpp" bodystart="95" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ac1a80266ee2fcc4565d3e0924eaf2c60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::deposit</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset amount, eosio::name code, std::string message)</argsstring>
        <name>deposit</name>
        <qualifiedname>unicore::deposit</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="112" column="21" bodyfile="src/core.cpp" bodystart="1737" bodyend="1799"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a466aba74657c6022cc0d9163bd502625" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::donate_action</definition>
        <argsstring>(eosio::name from, eosio::name host, uint64_t goal_id, eosio::asset quantity, eosio::name code)</argsstring>
        <name>donate_action</name>
        <qualifiedname>unicore::donate_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Метод спонсорского взноса на цель Позволяет любому участнику произвести финансирование цели из числа собственных средств. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">from</parametername>
</parameternamelist>
<parameterdescription>
<para>The from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">goal_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The goal identifier </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>The quantity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">code</parametername>
</parameternamelist>
<parameterdescription>
<para>The code </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="141" column="21" bodyfile="src/goals.cpp" bodystart="605" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1aacdeaae7b4b591419bd366661b92cd27" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eosio::asset</type>
        <definition>eosio::asset unicore::adjust_goals_emission_pool</definition>
        <argsstring>(eosio::name hostname, eosio::asset host_income)</argsstring>
        <name>adjust_goals_emission_pool</name>
        <qualifiedname>unicore::adjust_goals_emission_pool</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>hostname</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>host_income</declname>
        </param>
        <briefdescription>
<para>Внутренний метод расчета пула эмиссии. Вызывается в момент распределения эмиссии на цели сообщества. Расчет объема эмиссии происходит исходя из параметра life_balance_for_sale завершенного пула, и процента эмиссии, установленного архитектором. Процент эмиссии ограничен от 0 до 1000% относительного живого остатка на продажу в каждом новом пуле. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">hostname</parametername>
</parameternamelist>
<parameterdescription>
<para>The hostname - имя аккаунта хоста</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>{ description_of_the_return_value } </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="142" column="29" bodyfile="src/core.cpp" bodystart="473" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a416ca740d83132d969c0e99d035a5c7f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::fund_emi_pool</definition>
        <argsstring>(eosio::name host, eosio::asset amount, eosio::name code)</argsstring>
        <name>fund_emi_pool</name>
        <qualifiedname>unicore::fund_emi_pool</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Метод ручного пополнения целевого фонда сообщества. Жетоны, попадающие в целевой фонд сообщества, подлежат распределению на цели с помощью голосования участников по установленным правилам консенсуса. <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para>Метод может не использоваться, поскольку еще одним источником пополнения целевого фонда сообщества является установленный архитектором сообщества процент от финансового оборота ядра.</para>
<para>Примеры: Выпущен 1 млн жетонов, 90% из которых закреплены в целевом фонде, а 10% распределяются среди участников через прямое расределение любым способом (например, продажей). В этом случае, 90% жетонов должны быть помещены в целевой фонд, что гарантирует эмиссию жетонов на цели сообщества в зависимости от вращения ядра и установленного архитектором процента эмиссии при заранее известном общем количестве жетонов.</para>
<para>В случае, когда конфигурацией экономики не предусмотрено использование целевого фонда сообществ, или же когда для его пополнения используется только автоматический режим в зависимости от финансового оборота ядра, метод ручного пополнения может не использоваться. И в то же время он всегда доступен любому участнику сообщества простым переводом средств на аккаунт протокола с указанием суб-кода назначения и имени хоста сообщества. <linebreak/>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username - имя пользователя, совершающего поолнение. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host - имя аккаунта хоста </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount - сумма для пополнения </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">code</parametername>
</parameternamelist>
<parameterdescription>
<para>The code - контракт токена, поступивший на вход. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="143" column="21" bodyfile="src/core.cpp" bodystart="139" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1aac61e7c884c079854b1987c88abce0c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_asset_to_fund_action</definition>
        <argsstring>(eosio::name username, eosio::asset quantity, eosio::name code)</argsstring>
        <name>add_asset_to_fund_action</name>
        <qualifiedname>unicore::add_asset_to_fund_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Публичный метод пополнения фонда </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="144" column="21" bodyfile="src/core.cpp" bodystart="3897" bodyend="3901"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ae2c987c41fbc733887704499bd38d817" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eosio::asset</type>
        <definition>eosio::asset unicore::emit</definition>
        <argsstring>(eosio::name host, eosio::asset host_income, eosio::asset max_income)</argsstring>
        <name>emit</name>
        <qualifiedname>unicore::emit</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>host_income</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>max_income</declname>
        </param>
        <briefdescription>
<para>внутренний метод эмиссии, который вызывается в момент распределения целевого фонда сообщества на цели участников. Вызывается в момент переключения порядкового номера пула на каждый последующий. Эмитирует в балансы активных целей сообщества установленный архитектором процент от свободного финансового потока из заранее накопленного в фонде целей сообщества. </para>
        </briefdescription>
        <detaileddescription>
<para>Фонд целей сообщества пополняется в момент вывода выигрыша каждым победителем или прямым пополнением любым участником.</para>
<para>Фонд целей сообщества расходуется исходя из текущего финансового оборота в спирали при переключении раунда на каждый следующий.</para>
<para>Распределение в момент переключения пулов определяется параметром процента эмиссии от живого остатка на продажу, что представляет собой линию обратной связи от динамики вращения ядра. <linebreak/>
</para>
<para>Таким образом, целевой фонд сообщества пополняется и расходуется согласно гибкому набору правил, обеспечивающих циркуляцию.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host - имя аккаунта хоста </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="146" column="29" bodyfile="src/core.cpp" bodystart="173" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a2439f37a892708018e3474efa938d778" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::createfund</definition>
        <argsstring>(eosio::name token_contract, eosio::asset fund_asset, std::string descriptor)</argsstring>
        <name>createfund</name>
        <qualifiedname>unicore::createfund</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>token_contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>fund_asset</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
<para>Статичный метод создания фонда </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="153" column="21" bodyfile="src/core.cpp" bodystart="4024" bodyend="4026"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a278664e711bbb5194481633ae96bbc75" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>eosio::asset</type>
        <definition>eosio::asset unicore::buy_action</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset quantity, eosio::name code, bool modify_pool, bool transfer, bool spread_to_funds, eosio::asset summ)</argsstring>
        <name>buy_action</name>
        <qualifiedname>unicore::buy_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>modify_pool</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>transfer</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>spread_to_funds</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>summ</declname>
        </param>
        <briefdescription>
<para>Публичный метод покупки по текущему курсу из числа квантов раунда. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="154" column="29" bodyfile="src/core.cpp" bodystart="3919" bodyend="4015"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ae66f29125edf4a39df2c803f6bf683de" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t unicore::get_status_level</definition>
        <argsstring>(eosio::name host, eosio::name username)</argsstring>
        <name>get_status_level</name>
        <qualifiedname>unicore::get_status_level</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="155" column="25" bodyfile="src/conditions.cpp" bodystart="20" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a98f88515bc39a8534fbe42aba341ae3b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::buy_account</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset quantity, eosio::name code, eosio::name status)</argsstring>
        <name>buy_account</name>
        <qualifiedname>unicore::buy_account</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Публичный метод покупки статуса участника для аккаунта (выкуп гостевого аккаунта у регистратора) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="156" column="21" bodyfile="src/core.cpp" bodystart="4035" bodyend="4038"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a6ad2fe18dc872283eeff5387d2815b34" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::burn_action</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset quantity, eosio::name code, eosio::name status)</argsstring>
        <name>burn_action</name>
        <qualifiedname>unicore::burn_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Публичный метод сжигания квантов по текущему курсу из числа квантов раунда. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="158" column="21" bodyfile="src/core.cpp" bodystart="4046" bodyend="4138"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a90df462e8509eeb8bc99507dd01177ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::subscribe_action</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset quantity, eosio::name code, eosio::name status)</argsstring>
        <name>subscribe_action</name>
        <qualifiedname>unicore::subscribe_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Публичный метод сжигания квантов по текущему курсу из числа квантов раунда. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="159" column="21" bodyfile="src/core.cpp" bodystart="4146" bodyend="4238"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ada4e4997f2a64086d89dd64c26b13cb4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::settype_static</definition>
        <argsstring>(eosio::name host, eosio::name type)</argsstring>
        <name>settype_static</name>
        <qualifiedname>unicore::settype_static</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="178" column="21" bodyfile="src/core.cpp" bodystart="106" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a26f7df861487d0d3b018376b9b3fea9d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::spread_to_benefactors</definition>
        <argsstring>(eosio::name host, eosio::asset amount, uint64_t goal_id)</argsstring>
        <name>spread_to_benefactors</name>
        <qualifiedname>unicore::spread_to_benefactors</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="188" column="21" bodyfile="src/goals.cpp" bodystart="591" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1afeb232e31b7652496d86a68569dd62a2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::spread_to_dacs</definition>
        <argsstring>(eosio::name host, eosio::asset amount, eosio::name contract)</argsstring>
        <name>spread_to_dacs</name>
        <qualifiedname>unicore::spread_to_dacs</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>contract</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="212" column="21" bodyfile="src/core.cpp" bodystart="3652" bodyend="3690"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a91253a98ae3d992beed6a5b8be6b1359" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::spread_to_funds</definition>
        <argsstring>(eosio::name code, eosio::name host, eosio::asset quantity, std::string comment)</argsstring>
        <name>spread_to_funds</name>
        <qualifiedname>unicore::spread_to_funds</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>comment</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="214" column="21" bodyfile="src/core.cpp" bodystart="3328" bodyend="3484"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ae4493bcc24bab9ee182c4e3c18340af5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::spread_to_refs</definition>
        <argsstring>(eosio::name host, eosio::name username, eosio::asset spread_amount, eosio::asset from_amount, eosio::name token_contract)</argsstring>
        <name>spread_to_refs</name>
        <qualifiedname>unicore::spread_to_refs</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>spread_amount</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>from_amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>token_contract</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Вычисляем размер выплаты для каждого уровня партнеров и производим выплаты.</para>
<para>Все неиспользуемые вознаграждения с вышестояющих уровней отправляются на пользователя Все неиспользуемые вознаграждения с вышестояющих уровней отправляются на компании</para>
<para>Если рефералов у пользователя нет, то переводим все реферальные средства пользователю.<itemizedlist>
<listitem><para>Если рефералов у пользователя нет, то переводим все реферальные средства компании.</para>
</listitem></itemizedlist>
</para>
        </inbodydescription>
        <location file="include/core.hpp" line="216" column="21" bodyfile="src/core.cpp" bodystart="3486" bodyend="3632"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a128c65265d5c63d43c16f01220b06946" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::spread_action</definition>
        <argsstring>(eosio::name username, eosio::name host, eosio::asset quantity, eosio::name code)</argsstring>
        <name>spread_action</name>
        <qualifiedname>unicore::spread_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <briefdescription>
<para>Публичный метод распределения входящих токенов среди фондов хоста и партнёров реферала </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="218" column="21" bodyfile="src/core.cpp" bodystart="4372" bodyend="4374"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a50d1ea6189e97d6efbc677a0eca77972" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::log_event_with_shares</definition>
        <argsstring>(eosio::name username, eosio::name host, int64_t new_power)</argsstring>
        <name>log_event_with_shares</name>
        <qualifiedname>unicore::log_event_with_shares</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>new_power</declname>
        </param>
        <briefdescription>
<para>Внутренний метод логирования событий покупки силы Используется для расчета доли владения в финансовом потоке cfund в рамках границы пула </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="219" column="21" bodyfile="src/shares.cpp" bodystart="603" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ab12150d1a6c030b516570428d793fe59" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_user_stat</definition>
        <argsstring>(eosio::name type, eosio::name username, eosio::name contract, eosio::asset nominal_amount, eosio::asset withdraw_amount)</argsstring>
        <name>add_user_stat</name>
        <qualifiedname>unicore::add_user_stat</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>nominal_amount</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>withdraw_amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="240" column="21" bodyfile="src/core.cpp" bodystart="3795" bodyend="3832"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a56b244e1844c4a87274572f347da0b1b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_ref_stat</definition>
        <argsstring>(eosio::name username, eosio::name contract, eosio::asset withdrawed)</argsstring>
        <name>add_ref_stat</name>
        <qualifiedname>unicore::add_ref_stat</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>withdrawed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="241" column="21" bodyfile="src/core.cpp" bodystart="3693" bodyend="3720"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a2fe5aff5a36375df6784527e72023c1f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_host_stat</definition>
        <argsstring>(eosio::name type, eosio::name username, eosio::name host, eosio::asset amount)</argsstring>
        <name>add_host_stat</name>
        <qualifiedname>unicore::add_host_stat</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="242" column="21" bodyfile="src/core.cpp" bodystart="3745" bodyend="3768"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a983dd6de8e0e9479ea2f3f54ff4242c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_core_stat</definition>
        <argsstring>(eosio::name type, eosio::name host, eosio::asset amount)</argsstring>
        <name>add_core_stat</name>
        <qualifiedname>unicore::add_core_stat</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="244" column="21" bodyfile="src/core.cpp" bodystart="3722" bodyend="3742"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1adec560bb7bc5867f7730d70dbd26c040" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_host_stat2</definition>
        <argsstring>(eosio::name type, eosio::name username, eosio::name host, eosio::asset amount)</argsstring>
        <name>add_host_stat2</name>
        <qualifiedname>unicore::add_host_stat2</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="245" column="21" bodyfile="src/core.cpp" bodystart="3772" bodyend="3791"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ab899e878b848c48c9f6656c74565970d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t unicore::buyshares_action</definition>
        <argsstring>(eosio::name buyer, eosio::name host, eosio::asset amount, eosio::name code, bool is_frozen)</argsstring>
        <name>buyshares_action</name>
        <qualifiedname>unicore::buyshares_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>buyer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>code</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>is_frozen</declname>
        </param>
        <briefdescription>
<para>Метод покупки силы сообщества Обеспечивает покупку силы сообщества за котировочный токен по внутренней рыночной цене, определяемой с помощью алгоритма банкор. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">buyer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buyer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="273" column="25" bodyfile="src/shares.cpp" bodystart="1092" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ad357c4583f4d72f085919ad874bf0b28" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::delegate_shares_action</definition>
        <argsstring>(eosio::name from, eosio::name reciever, eosio::name host, uint64_t shares)</argsstring>
        <name>delegate_shares_action</name>
        <qualifiedname>unicore::delegate_shares_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>reciever</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Метод делегирования силы. Позволяет делегировать купленную силу для принятия каких-либо решений в пользу любого аккаунта. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="274" column="21" bodyfile="src/shares.cpp" bodystart="963" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a85158234a313fe5b2dc08b3cd9210dd6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::setincoming</definition>
        <argsstring>(eosio::name doer, eosio::name host, uint64_t goal_id, uint64_t task_id)</argsstring>
        <name>setincoming</name>
        <qualifiedname>unicore::setincoming</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="296" column="21" bodyfile="src/tasks.cpp" bodystart="58" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a61a8cdde982effe739244f9b4015a5f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::delincoming</definition>
        <argsstring>(eosio::name doer, eosio::name host, uint64_t goal_id, uint64_t task_id)</argsstring>
        <name>delincoming</name>
        <qualifiedname>unicore::delincoming</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>doer</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>goal_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="297" column="21" bodyfile="src/tasks.cpp" bodystart="119" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1aafefe860d9af675b4bb1a4ec1477cffd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::check_and_gift_netted_badge</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t task_id)</argsstring>
        <name>check_and_gift_netted_badge</name>
        <qualifiedname>unicore::check_and_gift_netted_badge</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>task_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="300" column="21" bodyfile="src/tasks.cpp" bodystart="34" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a9db4a730ab5cb5c91f4af22fcbe314fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::propagate_votes_changes</definition>
        <argsstring>(eosio::name host, eosio::name voter, uint64_t old_power, uint64_t new_power)</argsstring>
        <name>propagate_votes_changes</name>
        <qualifiedname>unicore::propagate_votes_changes</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>voter</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>old_power</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>new_power</declname>
        </param>
        <briefdescription>
<para>Обновление счетчика голосов Внутренний метод, используемый для обновления голосов у целей в момент покупки/продажи силы. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">voter</parametername>
</parameternamelist>
<parameterdescription>
<para>The voter </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">old_power</parametername>
</parameternamelist>
<parameterdescription>
<para>The old power </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">new_power</parametername>
</parameternamelist>
<parameterdescription>
<para>The new power </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="322" column="21" bodyfile="src/shares.cpp" bodystart="845" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1abcc8b6f0d5fabea652fb09b641ae1b87" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::rmfromhostwl</definition>
        <argsstring>(eosio::name host, eosio::name username)</argsstring>
        <name>rmfromhostwl</name>
        <qualifiedname>unicore::rmfromhostwl</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="327" column="21" bodyfile="src/conditions.cpp" bodystart="209" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1abda1506d33303ad7f636add05f23bdec" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::check_status</definition>
        <argsstring>(eosio::name host, eosio::name username, eosio::asset amount, eosio::name status)</argsstring>
        <name>check_status</name>
        <qualifiedname>unicore::check_status</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="328" column="21" bodyfile="src/conditions.cpp" bodystart="138" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a70e0500828a945f0bf0296f42a957122" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::check_subscribe</definition>
        <argsstring>(eosio::name host, eosio::name username, eosio::asset amount, eosio::name status)</argsstring>
        <name>check_subscribe</name>
        <qualifiedname>unicore::check_subscribe</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="329" column="21" bodyfile="src/conditions.cpp" bodystart="71" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a5bbadbc337a31956d537c3515bbf2c67" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_balance</definition>
        <argsstring>(eosio::name payer, eosio::asset quantity, eosio::name contract)</argsstring>
        <name>add_balance</name>
        <qualifiedname>unicore::add_balance</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>payer</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>contract</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="331" column="21" bodyfile="src/core.cpp" bodystart="4" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1aaec525402319988e751ffb6f852915fc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::sub_balance</definition>
        <argsstring>(eosio::name username, eosio::asset quantity, eosio::name contract)</argsstring>
        <name>sub_balance</name>
        <qualifiedname>unicore::sub_balance</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>contract</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="332" column="21" bodyfile="src/core.cpp" bodystart="30" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a136dfcacb74672c4f8babbe80275ab80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t unicore::getcondition</definition>
        <argsstring>(eosio::name host, eosio::string key)</argsstring>
        <name>getcondition</name>
        <qualifiedname>unicore::getcondition</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="335" column="25" bodyfile="src/conditions.cpp" bodystart="245" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a6944e1980de8d07225c5dd4ee1157634" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::addtohostwl</definition>
        <argsstring>(eosio::name host, eosio::name username)</argsstring>
        <name>addtohostwl</name>
        <qualifiedname>unicore::addtohostwl</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="337" column="21" bodyfile="src/conditions.cpp" bodystart="218" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a4b3c7544b822d31c8b826001ac1adaa2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool unicore::checkcondition</definition>
        <argsstring>(eosio::name host, eosio::string key, uint64_t value)</argsstring>
        <name>checkcondition</name>
        <qualifiedname>unicore::checkcondition</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::string</type>
          <declname>key</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="338" column="21" bodyfile="src/conditions.cpp" bodystart="230" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1acdb13b5d90405d5626709be7f8a6152b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::checkminpwr</definition>
        <argsstring>(eosio::name host, eosio::name username)</argsstring>
        <name>checkminpwr</name>
        <qualifiedname>unicore::checkminpwr</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="339" column="21" bodyfile="src/conditions.cpp" bodystart="5" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a62e5a50f666b6406f7a786646091f529" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::change_bw_trade_graph</definition>
        <argsstring>(eosio::name host, uint64_t pool_id, uint64_t cycle_num, uint64_t pool_num, uint64_t buy_rate, uint64_t next_buy_rate, uint64_t total_quants, uint64_t remain_quants, std::string color)</argsstring>
        <name>change_bw_trade_graph</name>
        <qualifiedname>unicore::change_bw_trade_graph</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_id</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>cycle_num</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_num</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>buy_rate</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>next_buy_rate</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>total_quants</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>remain_quants</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="342" column="21" bodyfile="src/core.cpp" bodystart="854" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a666299956a0903dec8e26b1c5b9b24a9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_coredhistory</definition>
        <argsstring>(eosio::name host, eosio::name username, uint64_t pool_id, eosio::asset amount, std::string action, std::string message)</argsstring>
        <name>add_coredhistory</name>
        <qualifiedname>unicore::add_coredhistory</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_id</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>action</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Приватный метод обновления истории ядра </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="344" column="21" bodyfile="src/core.cpp" bodystart="1806" bodyend="1828"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a5de74806b91ad0550be87b1a0f4ee278" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::make_vesting_action</definition>
        <argsstring>(eosio::name owner, eosio::name host, eosio::name contract, eosio::asset amount, uint64_t vesting_seconds, eosio::name type)</argsstring>
        <name>make_vesting_action</name>
        <qualifiedname>unicore::make_vesting_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>contract</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vesting_seconds</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Создание вестинг-баланса Внутренний метод, используемый при обратном обмене силы сообщества на котировочный токен. Обеспечивает линейную выдачу жетонов в продолжительности времени. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">owner</parametername>
</parameternamelist>
<parameterdescription>
<para>The owner </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="346" column="21" bodyfile="src/shares.cpp" bodystart="11" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a06ceba9e7f91a8731e6510252b67c20c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::create_bancor_market</definition>
        <argsstring>(eosio::name name, eosio::name host, uint64_t total_shares, eosio::asset quote_amount, eosio::name quote_token_contract, uint64_t vesting_seconds)</argsstring>
        <name>create_bancor_market</name>
        <qualifiedname>unicore::create_bancor_market</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>name</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>total_shares</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>quote_amount</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>quote_token_contract</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>vesting_seconds</declname>
        </param>
        <briefdescription>
<para>Приватный метод создания банкор-рынка. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">total_shares</parametername>
</parameternamelist>
<parameterdescription>
<para>The total shares </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quote_amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The quote amount </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="347" column="21" bodyfile="src/shares.cpp" bodystart="926" bodyend="947"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1af3856ac90d470eddfd5dec3f29cb0dc7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; eosio::asset &gt;</type>
        <definition>std::vector&lt; eosio::asset &gt; unicore::calculate_forecast</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t quants, uint64_t pool_num, eosio::asset purchase_amount, bool calculate_first, bool calculate_zero)</argsstring>
        <name>calculate_forecast</name>
        <qualifiedname>unicore::calculate_forecast</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>quants</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>pool_num</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>purchase_amount</declname>
          <defname>available_amount</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>calculate_first</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>calculate_zero</declname>
        </param>
        <briefdescription>
<para>Метод расчета прогнозов Внутренний метод расчета прогнозов. Внутренний метод расчета прогнозов выплат для последующих 8х бассейнов на основе будущих курсов. Используются только для демонастрации. </para>
        </briefdescription>
        <detaileddescription>
<para>TODO Может дополнительно быть реализован в качестве внешнего метода достоверной проверки прогнозов, который с каждым вызовом производит расчет будущих курсов и расширяет массив с данными по желанию пользователя. Устранить избыток кода.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quants</parametername>
</parameternamelist>
<parameterdescription>
<para>The quants </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pool_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The pool number</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The forecast. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="348" column="29" bodyfile="src/core.cpp" bodystart="2690" bodyend="2884"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a415141b20af92120acd7a752d646b1fa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::fill_pool</definition>
        <argsstring>(eosio::name username, eosio::name host, uint64_t quants, eosio::asset amount, uint64_t filled_pool_id)</argsstring>
        <name>fill_pool</name>
        <qualifiedname>unicore::fill_pool</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>username</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>quants</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>filled_pool_id</declname>
        </param>
        <briefdescription>
<para>Внутренний метод заполнения пула. Вызывается в момент совершения депозита пользователем или на приоритетном входе. Создает баланс пользователю и уменьшает количество квантов в пуле. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">username</parametername>
</parameternamelist>
<parameterdescription>
<para>The username </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">host</parametername>
</parameternamelist>
<parameterdescription>
<para>The host </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quants</parametername>
</parameternamelist>
<parameterdescription>
<para>The quants </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">amount</parametername>
</parameternamelist>
<parameterdescription>
<para>The amount </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">filled_pool_id</parametername>
</parameternamelist>
<parameterdescription>
<para>The filled pool identifier </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="349" column="21" bodyfile="src/core.cpp" bodystart="2187" bodyend="2321"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a5801b4011531f5cc142fd1cf28d6b6be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::check_and_modify_sale_fund</definition>
        <argsstring>(eosio::asset amount, hosts acc)</argsstring>
        <name>check_and_modify_sale_fund</name>
        <qualifiedname>unicore::check_and_modify_sale_fund</qualifiedname>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <param>
          <type><ref refid="d4/d9e/structhosts" kindref="compound">hosts</ref></type>
          <declname>acc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="350" column="21" bodyfile="src/core.cpp" bodystart="3908" bodyend="3911"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a21ad2432a12016b8907d553fc3c02cc4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::give_shares_with_badge_action</definition>
        <argsstring>(eosio::name host, eosio::name reciever, uint64_t shares)</argsstring>
        <name>give_shares_with_badge_action</name>
        <qualifiedname>unicore::give_shares_with_badge_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>reciever</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Внутренний метод эмиссии силы. Используется при выдаче знака отличия <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="351" column="21" bodyfile="src/shares.cpp" bodystart="795" bodyend="833"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1aa78e3ba614a74bf7edd3fdfa0b048b23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::back_shares_with_badge_action</definition>
        <argsstring>(eosio::name host, eosio::name from, uint64_t shares)</argsstring>
        <name>back_shares_with_badge_action</name>
        <qualifiedname>unicore::back_shares_with_badge_action</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>host</declname>
        </param>
        <param>
          <type>eosio::name</type>
          <declname>from</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>shares</declname>
        </param>
        <briefdescription>
<para>Внутренний метод возврата силы при возврате значка. Используется при возврате знака отличия хосту </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">op</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="352" column="21" bodyfile="src/shares.cpp" bodystart="760" bodyend="785"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1ad58e00b35b02b50991c8fdb0307ce3c1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unicore::add_sale_history</definition>
        <argsstring>(hosts acc, rate rate, spiral sp, eosio::asset amount)</argsstring>
        <name>add_sale_history</name>
        <qualifiedname>unicore::add_sale_history</qualifiedname>
        <param>
          <type><ref refid="d4/d9e/structhosts" kindref="compound">hosts</ref></type>
          <declname>acc</declname>
        </param>
        <param>
          <type><ref refid="db/d40/structrate" kindref="compound">rate</ref></type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="d5/de5/structspiral" kindref="compound">spiral</ref></type>
          <declname>sp</declname>
        </param>
        <param>
          <type>eosio::asset</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="353" column="21" bodyfile="src/core.cpp" bodystart="3904" bodyend="3906"/>
      </memberdef>
      <memberdef kind="function" id="d5/dea/classunicore_1a73dc68e40a6170fe1d09943842fd7739" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t unicore::get_global_id</definition>
        <argsstring>(eosio::name key)</argsstring>
        <name>get_global_id</name>
        <qualifiedname>unicore::get_global_id</qualifiedname>
        <param>
          <type>eosio::name</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/core.hpp" line="355" column="25" bodyfile="src/core.cpp" bodystart="56" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>eosio::contract</label>
      </node>
      <node id="1">
        <label>unicore</label>
        <link refid="d5/dea/classunicore"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>eosio::contract</label>
      </node>
      <node id="1">
        <label>unicore</label>
        <link refid="d5/dea/classunicore"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/core.hpp" line="56" column="1" bodyfile="include/core.hpp" bodystart="56" bodyend="357"/>
    <listofallmembers>
      <member refid="d5/dea/classunicore_1aac61e7c884c079854b1987c88abce0c5" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_asset_to_fund_action</name></member>
      <member refid="d5/dea/classunicore_1a5bbadbc337a31956d537c3515bbf2c67" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_balance</name></member>
      <member refid="d5/dea/classunicore_1a983dd6de8e0e9479ea2f3f54ff4242c1" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_core_stat</name></member>
      <member refid="d5/dea/classunicore_1a666299956a0903dec8e26b1c5b9b24a9" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_coredhistory</name></member>
      <member refid="d5/dea/classunicore_1a2fe5aff5a36375df6784527e72023c1f" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_host_stat</name></member>
      <member refid="d5/dea/classunicore_1adec560bb7bc5867f7730d70dbd26c040" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_host_stat2</name></member>
      <member refid="d5/dea/classunicore_1a56b244e1844c4a87274572f347da0b1b" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_ref_stat</name></member>
      <member refid="d5/dea/classunicore_1ad58e00b35b02b50991c8fdb0307ce3c1" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_sale_history</name></member>
      <member refid="d5/dea/classunicore_1ab12150d1a6c030b516570428d793fe59" prot="public" virt="non-virtual"><scope>unicore</scope><name>add_user_stat</name></member>
      <member refid="d5/dea/classunicore_1a4c8df6c80a48d2a6f8a73469a470ec2f" prot="public" virt="non-virtual"><scope>unicore</scope><name>addben</name></member>
      <member refid="d5/dea/classunicore_1ac6f84b754aa586043376617165f90eca" prot="public" virt="non-virtual"><scope>unicore</scope><name>adddac</name></member>
      <member refid="d5/dea/classunicore_1a2b873bf336e3c8b5b6e0f9d1823b2497" prot="public" virt="non-virtual"><scope>unicore</scope><name>addhostofund</name></member>
      <member refid="d5/dea/classunicore_1a6944e1980de8d07225c5dd4ee1157634" prot="public" virt="non-virtual"><scope>unicore</scope><name>addtohostwl</name></member>
      <member refid="d5/dea/classunicore_1aabd42ff2a6dcac81d487e65b0bf5dda6" prot="public" virt="non-virtual"><scope>unicore</scope><name>addvac</name></member>
      <member refid="d5/dea/classunicore_1a728bf4c6d03c63fa2969a3effe312fea" prot="public" virt="non-virtual"><scope>unicore</scope><name>addvprop</name></member>
      <member refid="d5/dea/classunicore_1aacdeaae7b4b591419bd366661b92cd27" prot="public" virt="non-virtual"><scope>unicore</scope><name>adjust_goals_emission_pool</name></member>
      <member refid="d5/dea/classunicore_1added73f623a6df0537a4daef1c46ed8b" prot="public" virt="non-virtual"><scope>unicore</scope><name>apply</name></member>
      <member refid="d5/dea/classunicore_1a765b3c6b36dc26922fec8c1236e3d154" prot="public" virt="non-virtual"><scope>unicore</scope><name>approver</name></member>
      <member refid="d5/dea/classunicore_1a55e754af41251b55a9c6b1cfe0f0f8c1" prot="public" virt="non-virtual"><scope>unicore</scope><name>approvevac</name></member>
      <member refid="d5/dea/classunicore_1afcacb23342b138f05740e3bd57d03fde" prot="public" virt="non-virtual"><scope>unicore</scope><name>apprvprop</name></member>
      <member refid="d5/dea/classunicore_1aa78e3ba614a74bf7edd3fdfa0b048b23" prot="public" virt="non-virtual"><scope>unicore</scope><name>back_shares_with_badge_action</name></member>
      <member refid="d5/dea/classunicore_1a6e7db779eb5836300fabe105012388c2" prot="public" virt="non-virtual"><scope>unicore</scope><name>backbadge</name></member>
      <member refid="d5/dea/classunicore_1a6ad2fe18dc872283eeff5387d2815b34" prot="public" virt="non-virtual"><scope>unicore</scope><name>burn_action</name></member>
      <member refid="d5/dea/classunicore_1a98f88515bc39a8534fbe42aba341ae3b" prot="public" virt="non-virtual"><scope>unicore</scope><name>buy_account</name></member>
      <member refid="d5/dea/classunicore_1a278664e711bbb5194481633ae96bbc75" prot="public" virt="non-virtual"><scope>unicore</scope><name>buy_action</name></member>
      <member refid="d5/dea/classunicore_1a6a16c00718366ac4b6ed6c28e4a7f44f" prot="public" virt="non-virtual"><scope>unicore</scope><name>buybalance</name></member>
      <member refid="d5/dea/classunicore_1ab899e878b848c48c9f6656c74565970d" prot="public" virt="non-virtual"><scope>unicore</scope><name>buyshares_action</name></member>
      <member refid="d5/dea/classunicore_1aae7a94db6860df276fd7821044144a3e" prot="public" virt="non-virtual"><scope>unicore</scope><name>calculate_asset_from_power</name></member>
      <member refid="d5/dea/classunicore_1af3856ac90d470eddfd5dec3f29cb0dc7" prot="public" virt="non-virtual"><scope>unicore</scope><name>calculate_forecast</name></member>
      <member refid="d5/dea/classunicore_1a4d4a35a4c18d428c7e70ff7096cfd47d" prot="public" virt="non-virtual"><scope>unicore</scope><name>canceljtask</name></member>
      <member refid="d5/dea/classunicore_1ad78ec4cb7cfdae094fbf20e5814aaf40" prot="public" virt="non-virtual"><scope>unicore</scope><name>cancelsellba</name></member>
      <member refid="d5/dea/classunicore_1a52383862f9906901d50df26866929b42" prot="public" virt="non-virtual"><scope>unicore</scope><name>cancrefwithd</name></member>
      <member refid="d5/dea/classunicore_1abae3b92d93cbbbd1058005639975f09d" prot="public" virt="non-virtual"><scope>unicore</scope><name>cchildhost</name></member>
      <member refid="d5/dea/classunicore_1a62e5a50f666b6406f7a786646091f529" prot="public" virt="non-virtual"><scope>unicore</scope><name>change_bw_trade_graph</name></member>
      <member refid="d5/dea/classunicore_1ad66a0c294e0fff041ab4a1fd7111d364" prot="public" virt="non-virtual"><scope>unicore</scope><name>changemode</name></member>
      <member refid="d5/dea/classunicore_1ac31cf68445b14c4dbdea9684a0556f10" prot="public" virt="non-virtual"><scope>unicore</scope><name>check</name></member>
      <member refid="d5/dea/classunicore_1aafefe860d9af675b4bb1a4ec1477cffd" prot="public" virt="non-virtual"><scope>unicore</scope><name>check_and_gift_netted_badge</name></member>
      <member refid="d5/dea/classunicore_1a5801b4011531f5cc142fd1cf28d6b6be" prot="public" virt="non-virtual"><scope>unicore</scope><name>check_and_modify_sale_fund</name></member>
      <member refid="d5/dea/classunicore_1abda1506d33303ad7f636add05f23bdec" prot="public" virt="non-virtual"><scope>unicore</scope><name>check_status</name></member>
      <member refid="d5/dea/classunicore_1a70e0500828a945f0bf0296f42a957122" prot="public" virt="non-virtual"><scope>unicore</scope><name>check_subscribe</name></member>
      <member refid="d5/dea/classunicore_1a4b3c7544b822d31c8b826001ac1adaa2" prot="public" virt="non-virtual"><scope>unicore</scope><name>checkcondition</name></member>
      <member refid="d5/dea/classunicore_1acdb13b5d90405d5626709be7f8a6152b" prot="public" virt="non-virtual"><scope>unicore</scope><name>checkminpwr</name></member>
      <member refid="d5/dea/classunicore_1a6115ab90c58512801dd5a275991c6e23" prot="public" virt="non-virtual"><scope>unicore</scope><name>checkstatus</name></member>
      <member refid="d5/dea/classunicore_1abf1dd4d893faaa4851adced7cfa7770c" prot="public" virt="non-virtual"><scope>unicore</scope><name>closeahost</name></member>
      <member refid="d5/dea/classunicore_1abb38bcc39c9e3ca74f955944a84274fe" prot="public" virt="non-virtual"><scope>unicore</scope><name>compensator</name></member>
      <member refid="d5/dea/classunicore_1a2572b07703cf4bf093bf6efe97d43d29" prot="public" virt="non-virtual"><scope>unicore</scope><name>complrefwith</name></member>
      <member refid="d5/dea/classunicore_1a30206473eb9672b7b67d0a85d2035ff3" prot="public" virt="non-virtual"><scope>unicore</scope><name>convert</name></member>
      <member refid="d5/dea/classunicore_1a739255f27ec8bb084f76fcb8cd5c33d8" prot="public" virt="non-virtual"><scope>unicore</scope><name>convert_to_power</name></member>
      <member refid="d5/dea/classunicore_1a06ceba9e7f91a8731e6510252b67c20c" prot="public" virt="non-virtual"><scope>unicore</scope><name>create_bancor_market</name></member>
      <member refid="d5/dea/classunicore_1a2439f37a892708018e3474efa938d778" prot="public" virt="non-virtual"><scope>unicore</scope><name>createfund</name></member>
      <member refid="d5/dea/classunicore_1af46a364466899a3d5b0721e91752e80f" prot="public" virt="non-virtual"><scope>unicore</scope><name>cut_tail</name></member>
      <member refid="d5/dea/classunicore_1a18f2e74d2df77472a29c9143539d458c" prot="public" virt="non-virtual"><scope>unicore</scope><name>delbadge</name></member>
      <member refid="d5/dea/classunicore_1ad357c4583f4d72f085919ad874bf0b28" prot="public" virt="non-virtual"><scope>unicore</scope><name>delegate_shares_action</name></member>
      <member refid="d5/dea/classunicore_1a9fd534e0b189439c6f18e99689911b3e" prot="public" virt="non-virtual"><scope>unicore</scope><name>delgoal</name></member>
      <member refid="d5/dea/classunicore_1a61a8cdde982effe739244f9b4015a5f5" prot="public" virt="non-virtual"><scope>unicore</scope><name>delincoming</name></member>
      <member refid="d5/dea/classunicore_1a4f00e24c90f922c4361338cc2c33e90b" prot="public" virt="non-virtual"><scope>unicore</scope><name>delreport</name></member>
      <member refid="d5/dea/classunicore_1a09d7d2d602069a26875aa1eee250d5f4" prot="public" virt="non-virtual"><scope>unicore</scope><name>deltask</name></member>
      <member refid="d5/dea/classunicore_1ac1a80266ee2fcc4565d3e0924eaf2c60" prot="public" virt="non-virtual"><scope>unicore</scope><name>deposit</name></member>
      <member refid="d5/dea/classunicore_1a969e75dd90699b53b75ab8482cbc49d3" prot="public" virt="non-virtual"><scope>unicore</scope><name>dfundgoal</name></member>
      <member refid="d5/dea/classunicore_1a403175c6abbcf360d36ec0259bccc109" prot="public" virt="non-virtual"><scope>unicore</scope><name>disapprover</name></member>
      <member refid="d5/dea/classunicore_1a6610107dbd6899f308a9a82eb0a564b2" prot="public" virt="non-virtual"><scope>unicore</scope><name>dispmarket</name></member>
      <member refid="d5/dea/classunicore_1ada9bc4ba6623c0013d07688ea015bdd0" prot="public" virt="non-virtual"><scope>unicore</scope><name>distrepo</name></member>
      <member refid="d5/dea/classunicore_1a466aba74657c6022cc0d9163bd502625" prot="public" virt="non-virtual"><scope>unicore</scope><name>donate_action</name></member>
      <member refid="d5/dea/classunicore_1acf83a7ccf1589f5a19b5ae7d48741abe" prot="public" virt="non-virtual"><scope>unicore</scope><name>editgoal</name></member>
      <member refid="d5/dea/classunicore_1a38d070fb8067b91799456f1472ced47d" prot="public" virt="non-virtual"><scope>unicore</scope><name>edithost</name></member>
      <member refid="d5/dea/classunicore_1ad041a75ade13b77f67f54c99f7ca7d29" prot="public" virt="non-virtual"><scope>unicore</scope><name>editreport</name></member>
      <member refid="d5/dea/classunicore_1ae2c987c41fbc733887704499bd38d817" prot="public" virt="non-virtual"><scope>unicore</scope><name>emit</name></member>
      <member refid="d5/dea/classunicore_1ac6bd8e8450d3d3d2388b1c211b7c4fc6" prot="public" virt="non-virtual"><scope>unicore</scope><name>emitpower</name></member>
      <member refid="d5/dea/classunicore_1aeeedb6c7a52c952b51bb4ff112629071" prot="public" virt="non-virtual"><scope>unicore</scope><name>emitpower2</name></member>
      <member refid="d5/dea/classunicore_1a1c942e650452def47c1bf266d194bcde" prot="public" virt="non-virtual"><scope>unicore</scope><name>emitquote</name></member>
      <member refid="d5/dea/classunicore_1ac6f27ab917494d9500648b5586d54365" prot="public" virt="non-virtual"><scope>unicore</scope><name>emittomarket</name></member>
      <member refid="d5/dea/classunicore_1ad1ca7dd3eab26146ed184e3bda67f5b1" prot="public" virt="non-virtual"><scope>unicore</scope><name>enablesale</name></member>
      <member refid="d5/dea/classunicore_1a7b2388eda0fc5b96b121442a7aa639fc" prot="public" virt="non-virtual"><scope>unicore</scope><name>enpmarket</name></member>
      <member refid="d5/dea/classunicore_1a93f28f6dc48f52400ab30810fcf8659d" prot="public" virt="non-virtual"><scope>unicore</scope><name>exittail</name></member>
      <member refid="d5/dea/classunicore_1a415141b20af92120acd7a752d646b1fa" prot="public" virt="non-virtual"><scope>unicore</scope><name>fill_pool</name></member>
      <member refid="d5/dea/classunicore_1ac4b0a6600a52794f394271c8c7aea78e" prot="public" virt="non-virtual"><scope>unicore</scope><name>fixs</name></member>
      <member refid="d5/dea/classunicore_1a416ca740d83132d969c0e99d035a5c7f" prot="public" virt="non-virtual"><scope>unicore</scope><name>fund_emi_pool</name></member>
      <member refid="d5/dea/classunicore_1af6e32936bbe20a612c9348bf5f805982" prot="public" virt="non-virtual"><scope>unicore</scope><name>fundchildgoa</name></member>
      <member refid="d5/dea/classunicore_1ae8ca388e55f11d3c32430edbaabcf7e2" prot="public" virt="non-virtual"><scope>unicore</scope><name>fundtask</name></member>
      <member refid="d5/dea/classunicore_1a2ee6a26c970b05e61c3753791a55dee4" prot="public" virt="non-virtual"><scope>unicore</scope><name>gaccept</name></member>
      <member refid="d5/dea/classunicore_1a73dc68e40a6170fe1d09943842fd7739" prot="public" virt="non-virtual"><scope>unicore</scope><name>get_global_id</name></member>
      <member refid="d5/dea/classunicore_1a6e184d7fb717ae159b2efe6bed7d3171" prot="public" virt="non-virtual"><scope>unicore</scope><name>get_status_expiration</name></member>
      <member refid="d5/dea/classunicore_1ae66f29125edf4a39df2c803f6bf683de" prot="public" virt="non-virtual"><scope>unicore</scope><name>get_status_level</name></member>
      <member refid="d5/dea/classunicore_1a136dfcacb74672c4f8babbe80275ab80" prot="public" virt="non-virtual"><scope>unicore</scope><name>getcondition</name></member>
      <member refid="d5/dea/classunicore_1a40fa6e2fa9fcddf76ba73b261eae6fef" prot="public" virt="non-virtual"><scope>unicore</scope><name>giftbadge</name></member>
      <member refid="d5/dea/classunicore_1a8cdb743e8708845d4a6064d43400d415" prot="public" virt="non-virtual"><scope>unicore</scope><name>giftbadge_action</name></member>
      <member refid="d5/dea/classunicore_1a21ad2432a12016b8907d553fc3c02cc4" prot="public" virt="non-virtual"><scope>unicore</scope><name>give_shares_with_badge_action</name></member>
      <member refid="d5/dea/classunicore_1a2cc7c4ae8c6ea5e604d6666d37d11405" prot="public" virt="non-virtual"><scope>unicore</scope><name>gpause</name></member>
      <member refid="d5/dea/classunicore_1a621817942c7b2758963d4147170b3c60" prot="public" virt="non-virtual"><scope>unicore</scope><name>gsponsor</name></member>
      <member refid="d5/dea/classunicore_1a4faa41a68505840e66f78e350412723c" prot="public" virt="non-virtual"><scope>unicore</scope><name>gwithdraw</name></member>
      <member refid="d5/dea/classunicore_1a43103f3b9bdc5ed37f564cc10446549e" prot="public" virt="non-virtual"><scope>unicore</scope><name>init</name></member>
      <member refid="d5/dea/classunicore_1a799e41649cd9bab8a1a9a9c41822925b" prot="public" virt="non-virtual"><scope>unicore</scope><name>jointask</name></member>
      <member refid="d5/dea/classunicore_1a50d1ea6189e97d6efbc677a0eca77972" prot="public" virt="non-virtual"><scope>unicore</scope><name>log_event_with_shares</name></member>
      <member refid="d5/dea/classunicore_1a5de74806b91ad0550be87b1a0f4ee278" prot="public" virt="non-virtual"><scope>unicore</scope><name>make_vesting_action</name></member>
      <member refid="d5/dea/classunicore_1a339ec2fd85cf7ddd182a7e41d0f66f66" prot="public" virt="non-virtual"><scope>unicore</scope><name>openahost</name></member>
      <member refid="d5/dea/classunicore_1a4f4a69c310c073c6cf1ebf41f2c210e8" prot="public" virt="non-virtual"><scope>unicore</scope><name>pay_for_upgrade</name></member>
      <member refid="d5/dea/classunicore_1ab10a203c3d6c37fd1cb71a9110c62e8a" prot="public" virt="non-virtual"><scope>unicore</scope><name>paydebt</name></member>
      <member refid="d5/dea/classunicore_1a7c554fbaa488514c2fd09879a6b4c662" prot="public" virt="non-virtual"><scope>unicore</scope><name>priorenter</name></member>
      <member refid="d5/dea/classunicore_1a9db4a730ab5cb5c91f4af22fcbe314fc" prot="public" virt="non-virtual"><scope>unicore</scope><name>propagate_votes_changes</name></member>
      <member refid="d5/dea/classunicore_1a6b7d4a19e6bbf88e9dd2ff7ff36491a8" prot="public" virt="non-virtual"><scope>unicore</scope><name>pull</name></member>
      <member refid="d5/dea/classunicore_1a8703f9141c36861284ca003a348b61d0" prot="public" virt="non-virtual"><scope>unicore</scope><name>refresh_state</name></member>
      <member refid="d5/dea/classunicore_1ac49cba08a940a6e04c02cd59d080546d" prot="public" virt="non-virtual"><scope>unicore</scope><name>refreshbal</name></member>
      <member refid="d5/dea/classunicore_1ada81287b3256f24da040a25861bc497e" prot="public" virt="non-virtual"><scope>unicore</scope><name>refreshpu</name></member>
      <member refid="d5/dea/classunicore_1a790c1a22331df2bd9e7f9b9094de7dfb" prot="public" virt="non-virtual"><scope>unicore</scope><name>refreshsh</name></member>
      <member refid="d5/dea/classunicore_1a1ca7506ffee845732e8beedc1bd0a48b" prot="public" virt="non-virtual"><scope>unicore</scope><name>refreshst</name></member>
      <member refid="d5/dea/classunicore_1ad7d827f78709c7ea5a4d72b864e356b9" prot="public" virt="non-virtual"><scope>unicore</scope><name>refrollback</name></member>
      <member refid="d5/dea/classunicore_1ac0e6bf94b8bfd28e08c364631a357d91" prot="public" virt="non-virtual"><scope>unicore</scope><name>report</name></member>
      <member refid="d5/dea/classunicore_1ab1e9b13cec99a231f1c6a71e3edc37c6" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmahost</name></member>
      <member refid="d5/dea/classunicore_1a1713b099515838ad2e42391f4dd03b6f" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmben</name></member>
      <member refid="d5/dea/classunicore_1a624a721f564fd28c295bdeef482bacc8" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmcondition</name></member>
      <member refid="d5/dea/classunicore_1af6aac321d5880fcb577ba00abea5c38f" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmcontent</name></member>
      <member refid="d5/dea/classunicore_1a1a76e2539a42f80b8ac6f514305665c8" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmdac</name></member>
      <member refid="d5/dea/classunicore_1abcc8b6f0d5fabea652fb09b641ae1b87" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmfromhostwl</name></member>
      <member refid="d5/dea/classunicore_1a8474a6b0859f13d7283922d5f7c3cd0a" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmhosfrfund</name></member>
      <member refid="d5/dea/classunicore_1a756863a6910963e79adbb3bfcdf7ba47" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmvac</name></member>
      <member refid="d5/dea/classunicore_1adb6489dbbbb032b012f3faa9e8ba963f" prot="public" virt="non-virtual"><scope>unicore</scope><name>rmvprop</name></member>
      <member refid="d5/dea/classunicore_1ace8526f2178dd5662a3d96fa1b9b6c7f" prot="public" virt="non-virtual"><scope>unicore</scope><name>rvote</name></member>
      <member refid="d5/dea/classunicore_1a4106f772fa1e8c6199cba1dd028b4d9e" prot="public" virt="non-virtual"><scope>unicore</scope><name>sellbalance</name></member>
      <member refid="d5/dea/classunicore_1a237ab7bb223b33ba87375e177ced89a2" prot="public" virt="non-virtual"><scope>unicore</scope><name>sellshares</name></member>
      <member refid="d5/dea/classunicore_1a1f73391b2c692e2c97ca675333aee0ad" prot="public" virt="non-virtual"><scope>unicore</scope><name>setahost</name></member>
      <member refid="d5/dea/classunicore_1ac5b6ba6e6362cc73943265c750429fd4" prot="public" virt="non-virtual"><scope>unicore</scope><name>setarch</name></member>
      <member refid="d5/dea/classunicore_1a46cd90e0a4f1b938d4548ca254782cfe" prot="public" virt="non-virtual"><scope>unicore</scope><name>setbadge</name></member>
      <member refid="d5/dea/classunicore_1a5eb41b2064caedd44380c2c68b095a18" prot="public" virt="non-virtual"><scope>unicore</scope><name>setbenefac</name></member>
      <member refid="d5/dea/classunicore_1ad0188feae42e22b52afbb6e3c3f70c86" prot="public" virt="non-virtual"><scope>unicore</scope><name>setcmsconfig</name></member>
      <member refid="d5/dea/classunicore_1a7b973d2c279fca2fa0cc08c35ebf1abe" prot="public" virt="non-virtual"><scope>unicore</scope><name>setcondition</name></member>
      <member refid="d5/dea/classunicore_1aa33794e9a7b05c77c9c6eb7b8790902e" prot="public" virt="non-virtual"><scope>unicore</scope><name>setconsensus</name></member>
      <member refid="d5/dea/classunicore_1abab6ddd4a167efde5f0e45a1ffd9dfba" prot="public" virt="non-virtual"><scope>unicore</scope><name>setcontent</name></member>
      <member refid="d5/dea/classunicore_1a4ff597c20fe7071fa4d48a1e6fb4e654" prot="public" virt="non-virtual"><scope>unicore</scope><name>setdoer</name></member>
      <member refid="d5/dea/classunicore_1affa39993f35c8e2c8838a956c761cbcc" prot="public" virt="non-virtual"><scope>unicore</scope><name>setemi</name></member>
      <member refid="d5/dea/classunicore_1a2b63d1aac35b533f122286943a54db18" prot="public" virt="non-virtual"><scope>unicore</scope><name>setflows</name></member>
      <member refid="d5/dea/classunicore_1a1ba1753b7dc4109e94dc7c4c9dbd5400" prot="public" virt="non-virtual"><scope>unicore</scope><name>setgcreator</name></member>
      <member refid="d5/dea/classunicore_1a75113bd9a43ae5f28c359eb1f641cc66" prot="public" virt="non-virtual"><scope>unicore</scope><name>setgoal</name></member>
      <member refid="d5/dea/classunicore_1a85158234a313fe5b2dc08b3cd9210dd6" prot="public" virt="non-virtual"><scope>unicore</scope><name>setincoming</name></member>
      <member refid="d5/dea/classunicore_1a85136296400d6c3654bc80fcdb835bd3" prot="public" virt="non-virtual"><scope>unicore</scope><name>setinctask</name></member>
      <member refid="d5/dea/classunicore_1a9ebdfe87e84d1a283143d274f2337e84" prot="public" virt="non-virtual"><scope>unicore</scope><name>setlevels</name></member>
      <member refid="d5/dea/classunicore_1a8898e75bc9abe84fd78c15f9de3731f5" prot="public" virt="non-virtual"><scope>unicore</scope><name>setparams</name></member>
      <member refid="d5/dea/classunicore_1aff7586ddb285e938d5228562eb459234" prot="public" virt="non-virtual"><scope>unicore</scope><name>setpgoal</name></member>
      <member refid="d5/dea/classunicore_1ab3fd8bba8c576e2966c8db8efbb30ed9" prot="public" virt="non-virtual"><scope>unicore</scope><name>setpriority</name></member>
      <member refid="d5/dea/classunicore_1a5fe24aa5ccba7c0c9e94e6a2728e9717" prot="public" virt="non-virtual"><scope>unicore</scope><name>setreport</name></member>
      <member refid="d5/dea/classunicore_1a62e02b155f2cd8012d807e60dacd1ace" prot="public" virt="non-virtual"><scope>unicore</scope><name>setstartdate</name></member>
      <member refid="d5/dea/classunicore_1a55bb8fbaa4a87f889073ace85359847c" prot="public" virt="non-virtual"><scope>unicore</scope><name>settask</name></member>
      <member refid="d5/dea/classunicore_1a07802302c610d2dc17f77a3019b81838" prot="public" virt="non-virtual"><scope>unicore</scope><name>settaskmeta</name></member>
      <member refid="d5/dea/classunicore_1a8bd2f03e84d9077693a7e0d6a7bcd7b8" prot="public" virt="non-virtual"><scope>unicore</scope><name>settcrbadge</name></member>
      <member refid="d5/dea/classunicore_1af4454491cb629dc007eed9b6febdd161" prot="public" virt="non-virtual"><scope>unicore</scope><name>settiming</name></member>
      <member refid="d5/dea/classunicore_1a61965d7a5c449487b565b444659d6cd7" prot="public" virt="non-virtual"><scope>unicore</scope><name>settype</name></member>
      <member refid="d5/dea/classunicore_1ada4e4997f2a64086d89dd64c26b13cb4" prot="public" virt="non-virtual"><scope>unicore</scope><name>settype_static</name></member>
      <member refid="d5/dea/classunicore_1a3a1fde814fc862b339230cfb85505145" prot="public" virt="non-virtual"><scope>unicore</scope><name>setwebsite</name></member>
      <member refid="d5/dea/classunicore_1a8f13b428c3709df192313619de467bd1" prot="public" virt="non-virtual"><scope>unicore</scope><name>setwithdrwal</name></member>
      <member refid="d5/dea/classunicore_1a128c65265d5c63d43c16f01220b06946" prot="public" virt="non-virtual"><scope>unicore</scope><name>spread_action</name></member>
      <member refid="d5/dea/classunicore_1a26f7df861487d0d3b018376b9b3fea9d" prot="public" virt="non-virtual"><scope>unicore</scope><name>spread_to_benefactors</name></member>
      <member refid="d5/dea/classunicore_1afeb232e31b7652496d86a68569dd62a2" prot="public" virt="non-virtual"><scope>unicore</scope><name>spread_to_dacs</name></member>
      <member refid="d5/dea/classunicore_1a91253a98ae3d992beed6a5b8be6b1359" prot="public" virt="non-virtual"><scope>unicore</scope><name>spread_to_funds</name></member>
      <member refid="d5/dea/classunicore_1ae4493bcc24bab9ee182c4e3c18340af5" prot="public" virt="non-virtual"><scope>unicore</scope><name>spread_to_refs</name></member>
      <member refid="d5/dea/classunicore_1ad83b75f3c4afd1ab954d428be8f6f7d7" prot="public" virt="non-virtual"><scope>unicore</scope><name>start</name></member>
      <member refid="d5/dea/classunicore_1aaec525402319988e751ffb6f852915fc" prot="public" virt="non-virtual"><scope>unicore</scope><name>sub_balance</name></member>
      <member refid="d5/dea/classunicore_1a90df462e8509eeb8bc99507dd01177ff" prot="public" virt="non-virtual"><scope>unicore</scope><name>subscribe_action</name></member>
      <member refid="d5/dea/classunicore_1ab006e60df2a0c5bcac711ca458e5cbc4" prot="public" virt="non-virtual"><scope>unicore</scope><name>suggestrole</name></member>
      <member refid="d5/dea/classunicore_1adb0134644edf42ff41b84bca15e6e8ff" prot="public" virt="non-virtual"><scope>unicore</scope><name>symbol_to_string</name></member>
      <member refid="d5/dea/classunicore_1a0c35d9830c0c05c8f13be48b8cbdf236" prot="public" virt="non-virtual"><scope>unicore</scope><name>tactivate</name></member>
      <member refid="d5/dea/classunicore_1a54639a2c971d48407747efdda1b2f2ca" prot="public" virt="non-virtual"><scope>unicore</scope><name>tcomplete</name></member>
      <member refid="d5/dea/classunicore_1a725477908310816ec80cddbf733af04b" prot="public" virt="non-virtual"><scope>unicore</scope><name>tdeactivate</name></member>
      <member refid="d5/dea/classunicore_1a69785f67b90bf9b74e5a6c177cb0e249" prot="public" virt="non-virtual"><scope>unicore</scope><name>transfromgf</name></member>
      <member refid="d5/dea/classunicore_1a9464479eb5d28b6c7f9956319077b294" prot="public" virt="non-virtual"><scope>unicore</scope><name>undelshares</name></member>
      <member refid="d5/dea/classunicore_1af1f9179d8b6a77f7222f7f734e9c5c6e" prot="public" virt="non-virtual"><scope>unicore</scope><name>unicore</name></member>
      <member refid="d5/dea/classunicore_1adabf2b3d106784b146a047e35ceec410" prot="public" virt="non-virtual"><scope>unicore</scope><name>upgrade</name></member>
      <member refid="d5/dea/classunicore_1a5a31fb29df7ae2b8cbf51625b5c2bc21" prot="public" virt="non-virtual"><scope>unicore</scope><name>validate</name></member>
      <member refid="d5/dea/classunicore_1ac1ca3033e5f65695c938c3d0621e6bfb" prot="public" virt="non-virtual"><scope>unicore</scope><name>vote</name></member>
      <member refid="d5/dea/classunicore_1a25c98e5ea071940b6ab153d71a328a5c" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdraw</name></member>
      <member refid="d5/dea/classunicore_1a9c8a515eef8e3dd262372da54945047b" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdrawrepo</name></member>
      <member refid="d5/dea/classunicore_1a4dd6d244c3fac428419342dc782f53a1" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdrawsh</name></member>
      <member refid="d5/dea/classunicore_1a87baad04108855090bad593e2135f659" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdrawsold</name></member>
      <member refid="d5/dea/classunicore_1a0a2ae5cf5fb3cdf3ba23f0948dd5c391" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdrbeninc</name></member>
      <member refid="d5/dea/classunicore_1a00bbf7a3172cc73697b3fcdfc19b7a4b" prot="public" virt="non-virtual"><scope>unicore</scope><name>withdrdacinc</name></member>
      <member refid="d5/dea/classunicore_1a81fed612b49e04c2c369d1151cf0b2c4" prot="public" virt="non-virtual"><scope>unicore</scope><name>withpbenefit</name></member>
      <member refid="d5/dea/classunicore_1a1d513eaa3bf7901c0e15f6eb29ec2248" prot="public" virt="non-virtual"><scope>unicore</scope><name>withrbalance</name></member>
      <member refid="d5/dea/classunicore_1ad0eeced7a1cf17a871f0458eb327da6e" prot="public" virt="non-virtual"><scope>unicore</scope><name>withrbenefit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
