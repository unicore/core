<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="voting_8hpp" kind="file" language="C++">
    <compoundname>voting.hpp</compoundname>
    <includedby refid="core_8hpp" local="yes">include/core.hpp</includedby>
    <invincdepgraph>
      <node id="2">
        <label>include/core.hpp</label>
        <link refid="core_8hpp_source"/>
      </node>
      <node id="1">
        <label>include/voting.hpp</label>
        <link refid="voting_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structvotes" prot="public">votes</innerclass>
    <innerclass refid="structrvotes" prot="public">rvotes</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="voting_8hpp_1a12b8e34f70449f2848bcfa36296b3c25" prot="public" static="no">
        <type>eosio::multi_index&lt; &quot;votes&quot;_n, <ref refid="structvotes" kindref="compound">votes</ref>, eosio::indexed_by&lt;&quot;host&quot;_n, eosio::const_mem_fun&lt; <ref refid="structvotes" kindref="compound">votes</ref>, uint64_t, &amp;votes::byhost &gt; &gt;, eosio::indexed_by&lt;&quot;idwithhost&quot;_n, eosio::const_mem_fun&lt; <ref refid="structvotes" kindref="compound">votes</ref>, uint128_t, &amp;votes::idwithhost &gt; &gt; &gt;</type>
        <definition>typedef eosio::multi_index&lt; &quot;votes&quot;_n, votes, eosio::indexed_by&lt;&quot;host&quot;_n, eosio::const_mem_fun&lt;votes, uint64_t, &amp;votes::byhost&gt; &gt;, eosio::indexed_by&lt;&quot;idwithhost&quot;_n, eosio::const_mem_fun&lt;votes, uint128_t, &amp;votes::idwithhost&gt; &gt; &gt; votes_index</definition>
        <argsstring></argsstring>
        <name>votes_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/voting.hpp" line="23" column="2" bodyfile="include/voting.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="voting_8hpp_1a8b94e0f7c87f12e4b29f34e5628f00f0" prot="public" static="no">
        <type>eosio::multi_index&lt; &quot;rvotes&quot;_n, <ref refid="structrvotes" kindref="compound">rvotes</ref>, eosio::indexed_by&lt;&quot;host&quot;_n, eosio::const_mem_fun&lt; <ref refid="structrvotes" kindref="compound">rvotes</ref>, uint64_t, &amp;rvotes::byhost &gt; &gt;, eosio::indexed_by&lt;&quot;idwithhost&quot;_n, eosio::const_mem_fun&lt; <ref refid="structrvotes" kindref="compound">rvotes</ref>, uint128_t, &amp;rvotes::idwithhost &gt; &gt;, eosio::indexed_by&lt;&quot;bytaskid&quot;_n, eosio::const_mem_fun&lt; <ref refid="structrvotes" kindref="compound">rvotes</ref>, uint64_t, &amp;rvotes::bytaskid &gt; &gt; &gt;</type>
        <definition>typedef eosio::multi_index&lt; &quot;rvotes&quot;_n, rvotes, eosio::indexed_by&lt;&quot;host&quot;_n, eosio::const_mem_fun&lt;rvotes, uint64_t, &amp;rvotes::byhost&gt; &gt;, eosio::indexed_by&lt;&quot;idwithhost&quot;_n, eosio::const_mem_fun&lt;rvotes, uint128_t, &amp;rvotes::idwithhost&gt; &gt;, eosio::indexed_by&lt;&quot;bytaskid&quot;_n, eosio::const_mem_fun&lt;rvotes, uint64_t, &amp;rvotes::bytaskid&gt; &gt; &gt; rvotes_index</definition>
        <argsstring></argsstring>
        <name>rvotes_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/voting.hpp" line="55" column="2" bodyfile="include/voting.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="structvotes" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[eosio::table,<sp/><ref refid="namespaceeosio" kindref="compound">eosio</ref>::contract(&quot;unicore&quot;)]]<sp/><ref refid="structvotes" kindref="compound">votes</ref>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>id;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>goal_id;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::name<sp/>host;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="structpower" kindref="compound">power</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;<sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>byhost()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>host.value;}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint128_t<sp/>idwithhost()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>combine_ids(host.value,<sp/>goal_id);<sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EOSLIB_SERIALIZE(<sp/><ref refid="structvotes" kindref="compound">votes</ref>,<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)(goal_id)(host)(<ref refid="structpower" kindref="compound">power</ref>))</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;<sp/></highlight><highlight class="stringliteral">&quot;votes&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structvotes" kindref="compound">votes</ref>,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>eosio::indexed_by&lt;</highlight><highlight class="stringliteral">&quot;host&quot;</highlight><highlight class="normal">_n,<sp/>eosio::const_mem_fun&lt;votes,<sp/>uint64_t,<sp/>&amp;votes::byhost&gt;&gt;,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::indexed_by&lt;</highlight><highlight class="stringliteral">&quot;idwithhost&quot;</highlight><highlight class="normal">_n,<sp/>eosio::const_mem_fun&lt;votes,<sp/>uint128_t,<sp/>&amp;votes::idwithhost&gt;&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;<sp/>votes_index;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structrvotes" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">[[eosio::table,<sp/><ref refid="namespaceeosio" kindref="compound">eosio</ref>::contract(&quot;unicore&quot;)]]<sp/><ref refid="structrvotes" kindref="compound">rvotes</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>id;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>task_id;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>report_id;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eosio::name<sp/>host;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><ref refid="structpower" kindref="compound">power</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>primary_key()</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>byhost()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>host.value;}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint128_t<sp/>idwithhost()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>combine_ids(host.value,<sp/>report_id);<sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>bytaskid()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>task_id;}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EOSLIB_SERIALIZE(<sp/><ref refid="structrvotes" kindref="compound">rvotes</ref>,<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)(task_id)(report_id)(host)(<ref refid="structpower" kindref="compound">power</ref>))</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>eosio::multi_index&lt;<sp/></highlight><highlight class="stringliteral">&quot;rvotes&quot;</highlight><highlight class="normal">_n,<sp/><ref refid="structrvotes" kindref="compound">rvotes</ref>,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>eosio::indexed_by&lt;</highlight><highlight class="stringliteral">&quot;host&quot;</highlight><highlight class="normal">_n,<sp/>eosio::const_mem_fun&lt;rvotes,<sp/>uint64_t,<sp/>&amp;rvotes::byhost&gt;&gt;,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::indexed_by&lt;</highlight><highlight class="stringliteral">&quot;idwithhost&quot;</highlight><highlight class="normal">_n,<sp/>eosio::const_mem_fun&lt;rvotes,<sp/>uint128_t,<sp/>&amp;rvotes::idwithhost&gt;&gt;,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eosio::indexed_by&lt;</highlight><highlight class="stringliteral">&quot;bytaskid&quot;</highlight><highlight class="normal">_n,<sp/>eosio::const_mem_fun&lt;rvotes,<sp/>uint64_t,<sp/>&amp;rvotes::bytaskid&gt;&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>&gt;<sp/>rvotes_index;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/voting.hpp"/>
  </compounddef>
</doxygen>
